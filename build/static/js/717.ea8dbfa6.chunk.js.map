{"version":3,"file":"static/js/717.ea8dbfa6.chunk.js","mappings":"mIAAA,IAAMA,EAAU,gD,qJCKVC,EAAQ,UADE,sCACF,SAoBRC,EAAa,SAACC,GAClB,OAAOC,IAAAA,KAAA,UACIH,EADJ,WACuBE,GAC3BE,MAAK,SAACC,GAAD,OAA6CA,EAASC,QAC3DF,MAAK,SAACC,GAAD,OAA8BA,EAASC,SAG3CC,EAAa,SAACL,EAAYM,GAC9B,OAAOL,IAAAA,KAAA,UACIH,EADJ,uBAC2BQ,GAAMN,GACrCE,MAAK,SAACC,GAAD,OAA6CA,EAASC,QAC3DF,MAAK,SAACC,GAAD,OAA8BA,EAASC,SAG3CG,EAAY,SAACP,EAAYM,GAC7B,OAAOL,IAAAA,KAAA,UACIH,EADJ,sBAC0BQ,GAAMN,GACpCE,MAAK,SAACC,GAAD,OAA6CA,EAASC,QAC3DF,MAAK,SAACC,GAAD,OAA8BA,EAASC,SAG3CI,EAAY,SAACR,EAAYM,GAC7B,OAAOL,IAAAA,KAAA,UACIH,EADJ,sBAC0BQ,GAAMN,GACpCE,MAAK,SAACC,GAAD,OAA6CA,EAASC,QAC3DF,MAAK,SAACC,GAAD,OAA8BA,EAASC,S,SC3C3CK,GAAsBC,EAAAA,EAAAA,eAAwCC,EAAAA,IAE9DC,EAA2B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjC,GAA0BC,EAAAA,EAAAA,UAAqBH,EAAAA,GAAAA,OAA/C,eAAOI,EAAP,KAAcC,EAAd,KAOA,OACE,SAACP,EAAoBQ,SAArB,CAA8BC,MAAO,CAACH,MAAAA,EAAOI,YAN3B,SAACC,GACnB,IAAMC,GAAY,kBAAON,GAAUK,GACnCJ,EAASK,KAIT,SACGR,KAKDS,EAAkB,kBAAMC,EAAAA,EAAAA,YAAWd,ICTnCe,GAAuBC,EAAAA,EAAAA,IAA4BC,EAAAA,IACnDC,EAA4B,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SAC3BE,EAASO,IAATP,MACP,GAA0BD,EAAAA,EAAAA,WAAiBc,EAAAA,EAAAA,IAAsBb,IAAjE,eAAOc,EAAP,KAAcC,EAAd,KACMC,GAAeC,EAAAA,EAAAA,UAAQ,kBAAMJ,EAAAA,EAAAA,IAAsBb,KAAQ,CAACA,KAElEkB,EAAAA,EAAAA,YAAU,WACJJ,IAAUE,GACZD,EAASC,KAEV,CAACA,IAEJ,OAIIG,EAAAA,EAAAA,UAAS,GAAD,OACPC,EAAAA,GAAAA,WADO,YACeN,IACzB,WACE,OF3BW,SAACA,GAChB,OAAO5B,IAAAA,IAAA,UAAaH,EAAb,YAAyB+B,IAAS3B,MAAK,SAACkC,GAAD,OAA0CA,EAAEhC,QE0B/EiC,CAASR,KAElB,CAACS,UAAW,EAAGC,kBAAkB,EAAMC,sBAAsB,IAR7DC,EADF,EACEA,WACAC,EAFF,EAEEA,QACMvC,EAHR,EAGEC,KASF,OACE,SAACoB,EAAqBP,SAAtB,CAA+BC,MAAO,CAACyB,UAAWF,EAAYC,QAAAA,EAASvC,SAAAA,EAAU0B,MAAAA,GAAjF,SACGhB,KAKD+B,EAAmB,kBAAMrB,EAAAA,EAAAA,YAAWC,IAEpCqB,EAAuB,WAC3B,IAAO1C,EAAYyC,IAAZzC,SACP,OAAKA,IAIU,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUC,OAHR,IAoBL0C,EAA0B,WAE9B,OADoBF,IAAbD,WC5DHI,GAAkBrC,EAAAA,EAAAA,eAAoCsC,EAAAA,IAEtDC,EAAuB,SAAC,GAAgB,IAAfpC,EAAc,EAAdA,SAC7B,GAAgCC,EAAAA,EAAAA,UAAoBkC,EAAAA,GAAAA,UAApD,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA8CrC,EAAAA,EAAAA,UAAakC,EAAAA,GAAAA,iBAA3D,eAAOI,EAAP,KAAwBC,EAAxB,KACOV,EAAaC,IAAbD,UACDvC,EAAOyC,IACPS,GAAWtB,EAAAA,EAAAA,UAAQ,kBAAMuB,EAAAA,EAAAA,IAA6BZ,EAAWvC,KAAO,CAACuC,EAAWvC,IACpFoD,GAAgBxB,EAAAA,EAAAA,UAAQ,kBAAMyB,EAAAA,EAAAA,IAA2BrD,EAAM8C,KAAW,CAAC9C,EAAM8C,IAEvF,OACE,SAACH,EAAgB9B,SAAjB,CACEC,MAAO,CACLgC,SAAAA,EACAE,gBAAAA,EACAC,mBAAAA,EACAC,SAAAA,EACAE,cAAAA,EACAE,SAAU,SAACpD,IACTqD,EAAAA,EAAAA,IAAiBrD,EAAI4C,EAAUC,IAEjCS,YAAa,YACXC,EAAAA,EAAAA,IAAoBL,EAAeL,EAAa/C,IAElD0D,cAAe,WACbX,EAAY,MAdlB,SAkBGtC,KAKDkD,EAAc,kBAAMxC,EAAAA,EAAAA,YAAWwB,I,UC1CxBiB,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACtC,OACI,oBAAQC,KAAK,SAASC,UAAU,6BAAhC,WACI,SAAC,KAAD,CAAOC,KAAK,yCAAyCD,UAAU,gBAC/D,SAAC,EAAAE,QAAD,CAASlE,KAAM6D,EAASM,SAAUL,EAAlC,wB,UCFNM,EAAkB,WACtB,IAAOrD,EAAeG,IAAfH,YACAwB,EAAaC,IAAbD,UACP,GAAwB7B,EAAAA,EAAAA,YAAxB,eAAO2D,EAAP,KAAaC,EAAb,KACA,GAAkC5D,EAAAA,EAAAA,YAAlC,eAAO6D,EAAP,KAAkBC,EAAlB,MAEA3C,EAAAA,EAAAA,YAAU,WACR4C,EAAAA,GAAAA,qBACC,IAaH,OACE,iCAEE,oBACEvB,SAAUX,EACVwB,KAAK,SACLC,UAAU,6BACV,uBAAqB,QACrB,yBAAuB,aALzB,WAOE,SAAC,KAAD,CAAOC,KAAK,0CAA0CD,UAAU,eAPlE,aAYA,iBAAKA,UAAU,qDAAqD,eAAa,OAAjF,WAEE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,2BAAf,+BAKF,gBAAKA,UAAU,+BAIf,iBAAKA,UAAU,YAAY,4BAA0B,OAArD,WAEE,iBAAKA,UAAU,QAAf,WACE,kBAAOA,UAAU,0BAAjB,oBACA,oBACEA,UAAU,0CACV,kBAAgB,OAChB,mBAAiB,gBACjB,mBAAiB,OACjB,4BAA0B,OAC1B,mBAAiB,OACjBU,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAO9D,QAClCA,MAAOuD,EART,WAUE,mBAAQvD,MAAM,MACd,mBAAQA,MAAM,gBAAd,4BACA,mBAAQA,MAAM,UAAd,sBACA,mBAAQA,MAAM,YAAd,wBACA,mBAAQA,MAAM,UAAd,sBACA,mBAAQA,MAAM,QAAd,0BAMJ,iBAAKkD,UAAU,QAAf,WACE,kBAAOA,UAAU,0BAAjB,0BACA,oBACEA,UAAU,0CACV,kBAAgB,OAChB,mBAAiB,gBACjB,mBAAiB,OACjB,4BAA0B,WAC1B,mBAAiB,OACjBU,SAAU,SAACC,GAAD,OAAOH,EAAaG,EAAEC,OAAO9D,QACvCA,MAAOyD,EART,WAUE,mBAAQzD,MAAM,MACd,mBAAQA,MAAM,YAAd,wBACA,mBAAQA,MAAM,cAAd,0BACA,mBAAQA,MAAM,cAAd,0BACA,mBAAQA,MAAM,aAAd,+BAMJ,iBAAKkD,UAAU,6BAAf,WACE,mBACED,KAAK,SACLb,SAAUX,EACVsC,QArFO,WACjB9D,GAAY,QACV+D,OAAQ,CAACT,KAAAA,EAAMU,WAAYR,IACxBS,EAAAA,MAmFKhB,UAAU,2DACV,uBAAqB,OACrB,4BAA0B,QAN5B,oBAUA,mBACEd,SAAUX,EACVwB,KAAK,SACLc,QAnGM,WAChB9D,GAAY,QAAC+D,YAAQG,GAAcD,EAAAA,MAmGzBhB,UAAU,+BACV,uBAAqB,OACrB,4BAA0B,SAN5B,gCC1GNkB,EAAmB,WACvB,IAAMC,EAAQ1C,IACPQ,EAAsBU,IAAtBV,mBAKP,OACE,iBAAKe,UAAU,6BAA6B,6BAA2B,OAAvE,WACE,SAACI,EAAD,KAGA,SAACR,EAAD,CAAgBC,QAASsB,EAAOrB,SAAU,WAK1C,oBAAQC,KAAK,SAASC,UAAU,kBAAkBa,QAd7B,WACvB5B,EAAmB,OAajB,WACE,SAAC,KAAD,CAAOgB,KAAK,yCAAyCD,UAAU,eADjE,kB,oBCjBAoB,EAAoB,WACxB,MAAkCzB,IAA3Bb,EAAP,EAAOA,SAAUY,EAAjB,EAAiBA,cACX2B,GAAcC,EAAAA,EAAAA,kBACb7D,EAASe,IAATf,MAED8D,GAAsBC,EAAAA,EAAAA,cAAY,kBP8Cd,SAACC,GAC3B,IAAMC,EAAWD,EAAQE,KAAI,SAACzF,GAAD,OAAQL,IAAAA,OAAA,UAAgBH,EAAhB,YAA4BQ,OACjE,OAAOL,IAAAA,IAAU6F,GAAU5F,MAAK,eOhDc8F,CAAoB9C,KAAW,CAE3E+C,UAAW,WAETR,EAAYS,kBAAkB,CAAC,GAAD,OAAI/D,EAAAA,GAAAA,WAAJ,YAA0BN,KACxDiC,OAIJ,OACE,iBAAKM,UAAU,gDAAf,WACE,iBAAKA,UAAU,iBAAf,WACE,iBAAMA,UAAU,OAAhB,SAAwBlB,EAASiD,SADnC,gBAIA,mBACEhC,KAAK,SACLC,UAAU,iBACVa,SAAO,uBAAE,mGAAkBU,EAAoBS,cAAtC,mFAHX,iCCrBAC,EAA2B,WAC/B,IAAOlF,EAAeG,IAAfH,YACP,GAAoCL,EAAAA,EAAAA,UAAiB,IAArD,eAAOwF,EAAP,KAAmBC,EAAnB,KAKMC,GAAsBC,EAAAA,EAAAA,IAAYH,EAAY,KAYpD,OAVArE,EAAAA,EAAAA,YACE,gBAC8BoD,IAAxBmB,QAAoDnB,IAAfiB,GACvCnF,GAAY,QAACuF,OAAQF,GAAwBpB,EAAAA,OAGjD,CAACoB,KAKD,gBAAKpC,UAAU,aAAf,UAEE,iBAAKA,UAAU,mDAAf,WACE,SAAC,KAAD,CACEC,KAAK,0CACLD,UAAU,uCAEZ,kBACED,KAAK,OACL,4BAA0B,SAC1BC,UAAU,gDACVuC,YAAY,cACZzF,MAAOoF,EACPxB,SAAU,SAACC,GAAD,OAAOwB,EAAcxB,EAAEC,OAAO9D,gBCjC5C0F,EAAkB,WACtB,IAAO1D,EAAYa,IAAZb,SACP,OACE,iBAAKkB,UAAU,4BAAf,WACE,SAACiC,EAAD,KAEA,gBAAKjC,UAAU,eAAf,SAEGlB,EAASiD,OAAS,GAAI,SAACX,EAAD,KAAwB,SAACF,EAAD,U,UCLjDuB,EAAgC,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OACpC,8BACGA,EAAOC,QAAmC,kBAAlBD,EAAOC,QAC9B,iCAAQD,EAAOE,kBAAf,aAAkCF,EAAOG,OAAO,aAEhDH,EAAOG,OAAO,a,UCJdC,EAAuB,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAF,OAC3B,iCAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMtB,KAAI,SAACuB,GACd,OACE,iCACMA,EAAKC,gBADX,IAEEnD,WAAWoD,EAAAA,EAAAA,GAAK,CAAC,uBAA2C,YAAnBF,EAAKR,OAAOxG,KAFvD,SAIGgH,EAAKL,OAAO,kBCNjBQ,EAA0B,SAAC,GAAY,IAAD,EAAVzH,EAAU,EAAVA,KACzBqD,EAAsBU,IAAtBV,mBAEDqE,EAAgB,WACpBrE,EAAmBrD,EAAKM,KAG1B,OACE,iBAAK8D,UAAU,4BAAf,WAEE,gBAAKA,UAAU,wDAAf,UACE,cAAGa,QAASyC,EAAeC,MAAO,CAACC,OAAQ,WAA3C,SACG5H,EAAK6H,eACJ,gBAAKzD,UAAU,eAAf,UACE,gBAAK0D,IAAK9H,EAAK6H,cAAeE,IAAK/H,EAAKgI,UAAW5D,UAAU,aAG/D,gBAAKA,WAAWoD,EAAAA,EAAAA,GAAK,oBAAD,mCAApB,mBACGxH,EAAKgI,iBADR,aACG,EAAgBC,OAAO,UAKhC,iBAAK7D,UAAU,qBAAf,WACE,eACEa,QAASyC,EACTC,MAAO,CAACC,OAAQ,WAChBxD,UAAU,wCAHZ,UAKGpE,EAAKgI,UALR,IAKoBhI,EAAKkI,aAEzB,0BAAOlI,EAAKmI,eCpCdC,EAA+B,SAAC,GAAD,IAAEjD,EAAF,EAAEA,WAAF,OACnC,gBAAKf,UAAU,8BAAf,SAA8Ce,KCD1CkD,EAA8B,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAF,OAClC,oCAAIA,IAAa,gBAAKlE,UAAU,sCAAf,yBCMbmE,EAA6B,SAAC,GAAU,IAATjI,EAAQ,EAARA,GAC5B+C,EAAsBU,IAAtBV,mBACAxB,EAASe,IAATf,MACD4D,GAAcC,EAAAA,EAAAA,mBAEpBzD,EAAAA,EAAAA,YAAU,WACR4C,EAAAA,GAAAA,qBACC,IAEH,IAIM2D,GAAa5C,EAAAA,EAAAA,cAAY,kBf2Bb6C,Ee3B8BnI,Ef4BzCL,IAAAA,OAAA,UAAgBH,EAAhB,YAA4B2I,IAAUvI,MAAK,eADjC,IAACuI,Ie3BmC,CAEnDxC,UAAW,WAETR,EAAYS,kBAAkB,CAAC,GAAD,OAAI/D,EAAAA,GAAAA,WAAJ,YAA0BN,QAI5D,OACE,iCACE,cACE6G,KAAK,IACLtE,UAAU,gDACV,uBAAqB,QACrB,yBAAuB,aAJzB,UAME,cAAGA,UAAU,sCAGf,iBACEA,UAAU,+HACV,eAAa,OAFf,WAKE,gBAAKA,UAAU,iBAAf,UACE,cAAGA,UAAU,iBAAiBa,QA7BhB,WACpB5B,EAAmB/C,IA4Bb,qBAOF,gBAAK8D,UAAU,iBAAf,UACE,cACEA,UAAU,iBACV,6BAA2B,aAC3Ba,SAAO,uBAAE,mGAAkBuD,EAAWpC,cAA7B,mFAHX,6BCnDJuC,EAA+B,SAAC,GAAU,IAATrI,EAAQ,EAARA,GACrC,EAA6ByD,IAAtBb,EAAP,EAAOA,SAAUQ,EAAjB,EAAiBA,SACXkF,GAAa5G,EAAAA,EAAAA,UAAQ,kBAAMkB,EAAS2F,SAASvI,KAAK,CAACA,EAAI4C,IAC7D,OACE,gBAAKkB,UAAU,8DAAf,UACE,kBACEA,UAAU,mBACVD,KAAK,WACL,gBAAeyE,EACf,uBAAqB,oCACrBE,QAASF,EACT9D,SAAU,kBAAMpB,EAASpD,SCP3ByI,EAA8B,SAAC,GAAoC,IAAnC3E,EAAkC,EAAlCA,UAAW4E,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAChD3I,EAAK2I,EAAWnC,OAAOxG,GAC7B,EAA6BgB,IAAtBP,EAAP,EAAOA,MAAOI,EAAd,EAAcA,YAER+H,GAAuBlH,EAAAA,EAAAA,UAAQ,WACnC,OAAOjB,EAAMoI,MAAQpI,EAAMoI,OAAS7I,IACnC,CAACS,EAAOT,IACL8I,GAAoCpH,EAAAA,EAAAA,UAAQ,kBAAMjB,EAAMqI,QAAO,CAACrI,IA0BtE,OACE,iCACMkI,EAAWnC,OAAOE,kBADxB,IAEE5C,WAAWoD,EAAAA,EAAAA,GACTpD,EACA8E,QAAkC7D,IAAV+D,GAAxB,qBAA6DA,IAE/DzB,MAAO,CAACC,OAAQ,WAChB3C,QAhCe,WAEjB,GAAW,YAAP3E,GAA2B,cAAPA,EAIxB,GAAK4I,GAML,GAAIA,QAAkC7D,IAAV+D,EAAqB,CAC/C,GAAc,QAAVA,EAGF,YADAjI,GAAY,QAACgI,KAAM7I,EAAI8I,MAAO,QAAWhE,EAAAA,KAK3CjE,GAAY,QAACgI,UAAM9D,EAAW+D,WAAO/D,GAAcD,EAAAA,WAZnDjE,GAAY,QAACgI,KAAM7I,EAAI8I,MAAO,OAAUhE,EAAAA,MAiB1C,SASG4D,MC9CDK,EAAiC,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,WACvC,EAAqClF,IAA9BP,EAAP,EAAOA,cAAeI,EAAtB,EAAsBA,YACtB,OACE,iCAAQqF,EAAWnC,OAAOE,kBAA1B,IAA4C5C,UAAU,cAAtD,UACE,gBAAKA,UAAU,mEAAf,UACE,kBACEA,UAAU,mBACVD,KAAK,WACL,gBAAeX,EACf,uBAAqB,oCACrBsF,QAAStF,EACTsB,SAAUlB,UCVd0F,EAA4C,CAChD,CACEvC,OAAQ,SAACwC,GAAD,OAAW,SAACF,EAAD,CAAqBJ,WAAYM,KACpDjJ,GAAI,YACJkJ,KAAM,gBAAKD,EAAL,2BAAgB,SAACZ,EAAD,CAAmBrI,GAAIiJ,EAAMnJ,KAAKmJ,EAAMpC,IAAIsC,OAAOnJ,OAE3E,CACEyG,OAAQ,SAACwC,GAAD,OAAW,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,OAAO5E,UAAU,iBAC/E9D,GAAI,OACJkJ,KAAM,gBAAKD,EAAL,2BAAgB,SAAC9B,EAAD,CAAczH,KAAMuJ,EAAMnJ,KAAKmJ,EAAMpC,IAAIsC,WAEjE,CACE1C,OAAQ,SAACwC,GAAD,OAAW,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,cAAc5E,UAAU,iBACtFsF,SAAU,cAEZ,CACE3C,OAAQ,SAACwC,GAAD,OACN,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,QAAQ5E,UAAU,iBAE/D9D,GAAI,QACJkJ,KAAM,gBAAKD,EAAL,2BAAgB,SAACnB,EAAD,CAAmBjD,WAAYoE,EAAMnJ,KAAKmJ,EAAMpC,IAAIsC,OAAOE,UAEnF,CACE5C,OAAQ,SAACwC,GAAD,OACN,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,YAAY5E,UAAU,iBAEnE9D,GAAI,MACJkJ,KAAM,gBAAKD,EAAL,2BAAgB,SAAClB,EAAD,CAAkBC,UAAWiB,EAAMnJ,KAAKmJ,EAAMpC,IAAIsC,OAAOG,QAEjF,CACE7C,OAAQ,SAACwC,GAAD,OACN,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,SAAS5E,UAAU,iBAEhEsF,SAAU,UAEZ,CACE3C,OAAQ,SAACwC,GAAD,OACN,SAACR,EAAD,CAAkBE,WAAYM,EAAOP,MAAM,UAAU5E,UAAU,0BAEjE9D,GAAI,UACJkJ,KAAM,gBAAKD,EAAL,2BAAgB,SAAChB,EAAD,CAAiBjI,GAAIiJ,EAAMnJ,KAAKmJ,EAAMpC,IAAIsC,OAAOnJ,QClDrEuJ,EAAmB,WAcvB,OAAO,gBAAKlC,OAAK,kBAbF,CACbmC,aAAc,WACdC,UAAW,kCACXC,gBAAiB,OACjBC,MAAO,UACPC,WAAY,MACZC,OAAQ,IACRC,MAAO,OACPC,QAAS,YACTC,IAAK,mBACLC,KAAM,qBAGS,IAAcC,SAAU,WAAYC,UAAW,WAAzD,4BCVHC,EAAsB,WAAO,IAAD,EAC1BC,EnBoD2B,WACjC,IAAMC,GAAuC,QAC3CC,MAAO,IACJzF,EAAAA,IAGEjF,EAAYyC,IAAZzC,SACP,OAAKA,GAAaA,EAAS2K,SAAY3K,EAAS2K,QAAQH,WAIjDxK,EAAS2K,QAAQH,WAHfC,EmB5DUG,GACbpI,EAAYG,IACX3B,EAAeG,IAAfH,YASP,OACE,iBAAKiD,UAAU,MAAf,WACE,gBAAKA,UAAU,kGACf,gBAAKA,UAAU,6FAAf,UACE,gBAAK9D,GAAG,0BAAR,UACE,eAAI8D,UAAU,aAAd,mBACGuG,EAAWE,aADd,aACG,EAAkB9E,KAAI,SAACiF,GAAD,OACrB,eAEE5G,WAAWoD,EAAAA,EAAAA,GAAK,YAAa,CAC3ByD,OAAQN,EAAWO,OAASF,EAAKE,KACjC5H,SAAUX,EACVwI,SAAyB,qBAAfH,EAAKI,MACfC,KAAqB,iBAAfL,EAAKI,QANf,UASE,cACEhH,UAAU,YACVa,QAAS,WA1BN,IAACiG,KA0BsBF,EAAKE,QAzBhCvI,GAAagI,EAAWO,OAASA,GAI9C/J,EAAY,CAAC+J,KAAAA,EAAMI,eAAgBX,EAAWW,gBAAkB,MAsBlDC,wBAAyB,CAACC,OAAQR,EAAKI,OACvCzD,MAAO,CAACC,OAAQ,cAZboD,EAAKI,oBCbpBK,EAAa,WACjB,IAAMlG,EAAQ1C,IACRF,EAAYG,IACZ1C,GAAO4B,EAAAA,EAAAA,UAAQ,kBAAMuD,IAAO,CAACA,IAC7BmG,GAAU1J,EAAAA,EAAAA,UAAQ,kBAAMsH,IAAc,IAC5C,GAAsEqC,EAAAA,EAAAA,UAAS,CAC7ED,QAAAA,EACAtL,KAAAA,IAFKwL,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,kBAAmBC,EAAzC,EAAyCA,QAASC,EAAlD,EAAkDA,KAAMC,EAAxD,EAAwDA,WAKxD,OACE,UAAC,KAAD,CAAY5H,UAAU,OAAtB,WACE,gBAAKA,UAAU,mBAAf,UACE,mCACE9D,GAAG,iBACH8D,UAAU,qEACNwH,KAHN,eAKE,4BACE,eAAIxH,UAAU,2DAAd,SACG0H,EAAQ/F,KAAI,SAACe,GAAD,OACX,SAACD,EAAD,CAAoCC,OAAQA,GAAnBA,EAAOxG,YAItC,kCAAO8D,UAAU,yBAA4ByH,KAA7C,aACGE,EAAK5F,OAAS,EACb4F,EAAKhG,KAAI,SAACoB,EAAgB8E,GAExB,OADAD,EAAW7E,IACJ,SAACD,EAAD,CAAWC,IAAKA,GAAhB,cAAiC8E,EAAjC,YAAsC9E,EAAI7G,SAGnD,yBACE,eAAI4L,QAAS,EAAb,UACE,gBAAK9H,UAAU,uEAAf,qDASZ,SAACsG,EAAD,IACC/H,IAAa,SAACkH,EAAD,QCpDdsC,EAAsB,WAC1B,IAAO9I,EAAsBU,IAAtBV,mBAEP,OACE,iBAAKe,UAAU,eAAf,WAEE,eAAIA,UAAU,YAAd,uBAIA,gBACEA,UAAU,8CACV,6BAA2B,QAC3Ba,QAAS,kBAAM5B,OAAmBgC,IAClCsC,MAAO,CAACC,OAAQ,WAJlB,UAME,SAAC,KAAD,CAAOvD,KAAK,yCAAyCD,UAAU,qB,sBCSjEgI,GAAuB,CAC3BC,GAAAA,KAAaC,MAAM,CACjBtE,UAAWqE,GAAAA,KACRE,SAAS,0BACTnB,MAAM,cACTlD,SAAUmE,GAAAA,KACPE,SAAS,yBACTnB,MAAM,aACTjD,MAAOkE,GAAAA,KACJlE,MAAM,sBACNoE,SAAS,qBACTnB,MAAM,SACTzB,MAAO0C,GAAAA,KAEJlG,OAAO,IACPqG,QACC,0GACA,6BAEDD,SAAS,4BACTnB,MAAM,SACTqB,SAAUJ,GAAAA,KACPE,SAAS,wBACTnB,MAAM,YACTxB,IAAKyC,GAAAA,KAAaE,SAAS,mBAC3BG,QAASL,GAAAA,KAAaC,MAAM,CAC1BK,KAAMN,GAAAA,KAAaE,SAAS,oBAC5BK,SAAUP,GAAAA,KAAaE,SAAS,wBAChCxL,MAAOsL,GAAAA,KAAaE,SAAS,uBAE/BM,OAAQR,GAAAA,KAAYS,GAClBT,GAAAA,KAAaC,MAAM,CACjBS,UAAWV,GAAAA,KAAaE,SAAS,yBACjCS,aAAcX,GAAAA,KAAaE,SAAS,+BAGxCU,eAAgBZ,GAAAA,KAAaE,SAAS,+BAGxCF,GAAAA,KAAaC,MAAM,CACjBY,KAAMb,GAAAA,KAAaC,MAAM,CACvBa,eAAgBd,GAAAA,KAAaE,SAAS,8BACtCa,UAAWf,GAAAA,KAAaE,SAAS,yBACjCc,UAAWhB,GAAAA,KAAaE,SAAS,yBACjCe,YAAajB,GAAAA,KAAaE,SAAS,2BACnCxL,MAAOsL,GAAAA,KAAaE,SAAS,yBAGjCF,GAAAA,KAAaC,MAAM,CACjBiB,IAAKlB,GAAAA,KAAaC,MAAM,CACtBkB,OAAQnB,GAAAA,KAAaE,SAAS,sBAC9BkB,KAAMpB,GAAAA,KAAaE,SAAS,oBAC5BmB,YAAarB,GAAAA,KAAaE,SAAS,+BAGvCF,GAAAA,KAAaC,MAAM,CACjBqB,IAAKtB,GAAAA,KAAaC,MAAM,CACtBmB,KAAMpB,GAAAA,KAAaE,SAAS,oBAC5BqB,UAAWvB,GAAAA,KAAaE,SAAS,0BACjC3C,IAAKyC,GAAAA,KAAaE,SAAS,wBAKpBsB,GAAoB,CAC/B7F,UAAW,GACXE,SAAU,GACV4F,WAAY,GACZ3F,MAAO,GACP4F,eAAgB,GAChBpE,MAAO,GACPqE,eAAgB,GAChBpE,IAAK,GACLqE,OAAQ,GACRxB,SAAU,GACV5E,cAAe,KACfqG,OAAQ,GACRjB,eAAgB,EAChBP,QAAS,CACPC,KAAM,GACNC,SAAU,GACV7L,MAAO,IAEToN,SAAU,GACVtB,OAAQ,CAAC,CAACE,UAAW,GAAIC,aAAc,KACvCE,KAAM,CACJC,eAAgB,GAChBC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbvM,MAAO,IAETwM,IAAK,CACHC,OAAQ,GACRC,KAAM,GACNC,YAAa,IAEfC,IAAK,CACHF,KAAM,GACNG,UAAW,GACXhE,IAAK,K,4CChHHwE,GAAmB,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,cAAeC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,QAAwBC,GAAY,EAA3BC,cAA2B,EAAZD,QACxEE,QAAQC,IAAIJ,EAAS,UAAWC,EAAQF,GAuBxC,IAAMM,EAAW,yCAAG,WAAO7J,GAAP,qFACZ8J,EAAO9J,EAAE+J,cAAcC,MAAM,IAC7BC,EAAK,IAAIC,UACZC,OAAO,QAASL,GAHD,SAIZ5O,IAAAA,KAAA,UACKJ,GAAAA,EADL,WACuBmP,GAC1B9O,MAAK,SAACE,GACLiO,EAAc,gBAAiBjO,EAAKA,SAErC+O,OAAM,SAACC,GACNV,QAAQC,IAAIS,EAAK,UAVH,2CAAH,sDAcjB,GAAwCtO,EAAAA,EAAAA,WAAS,GAAjD,eAAOuO,EAAP,KAAqBC,EAArB,KACA,OACE,iBAAKlL,UAAU,QAAf,WACE,iBAAKA,UAAU,cAAf,WACE,kBAAOA,UAAU,qBAAjB,4BACA,iBAAKA,UAAU,kCAAkC,sBAAoB,OAArE,WACE,gBAAKA,UAAU,GAAf,UACE,gBACE0D,IAC2B,OAAnB,OAANwG,QAAM,IAANA,OAAA,EAAAA,EAAQzG,eAAR,OACIyG,QADJ,IACIA,OADJ,EACIA,EAAQzG,eACR0H,EAAAA,EAAAA,IAAc,gCAEpBxH,IAAI,SACJ3D,UAAU,2CAGd,mBACEA,UAAU,gFACV,6BAA2B,SAC3B,iBAAe,UACf4E,MAAM,gBAJR,WAME,cAAG5E,UAAU,4BACb,kBACED,KAAK,OACLsJ,KAAK,gBACL+B,OAAO,oBACP1K,SAAU8J,KAEZ,kBAAOzK,KAAK,SAASsJ,KAAK,qBAEF,OAAzBa,EAAOzG,gBACN,mBACEzD,UAAU,gFACV,6BAA2B,SAC3B,iBAAe,UACf4E,MAAM,gBACN7E,KAAK,SACLc,QAAS,kBAAMoJ,EAAc,gBAAiB,OANhD,UAQE,cAAGjK,UAAU,uBAInB,gBAAKA,UAAU,YAAf,qDAGF,iBAAKA,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,sBAAjB,yBAEA,SAAC,MAAD,CAAOqJ,KAAK,YAAYrJ,UAAU,oBAAoBuC,YAAa,sBACnE,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,oBAGvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,0BAGF,SAAC,MAAD,CAAOqJ,KAAK,WAAWrJ,UAAU,oBAAoBuC,YAAa,qBAClE,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,sBAKzB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,mCAAjB,oBAEA,SAAC,MAAD,CACEqJ,KAAK,QACLrJ,UAAU,oBACVuC,YAAa,uBAGb,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,gBAIzB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,6BAGF,SAAC,MAAD,CACEqJ,KAAK,QACLtJ,KAAM,SACNC,UAAU,oBACVuC,YAAa,8BAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,mBAKzB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,mCAAjB,kBACA,SAAC,MAAD,CACED,KAAM,OACNsJ,KAAK,MACLrJ,UAAU,oBACVuC,YAAa,qBAEb,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,cAIzB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,qBAGF,SAAC,MAAD,CACEqJ,KAAK,eACLrJ,UAAU,oBACVuC,YAAa,sBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,0BAKzB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,mCAAjB,uBAEA,SAAC,MAAD,CACEqJ,KAAK,mBACLrJ,UAAU,oBACVuC,YAAa,yBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,2BAIvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,sBAGF,SAAC,MAAD,CACEqJ,KAAK,gBACLrJ,UAAU,oBACVuC,YAAa,yBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,2BAKlB,OAANa,QAAM,IAANA,OAAA,EAAAA,EAAQhO,MACP,iBAAK8D,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,mCAAjB,+BACA,SAAC,MAAD,CACEqJ,KAAK,yBACLrJ,UAAU,oBACVuC,YAAa,sBACbrD,UAAU,KAEZ,gBAAKc,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,iCAIvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,4BAGF,SAAC,MAAD,CACEqJ,KAAK,sBACLrJ,UAAU,oBACVuC,YAAa,oBACbrD,UAAU,KAEZ,gBAAKc,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,iCAM3B,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,mCAAjB,wBAEA,SAAC,MAAD,CACEqJ,KAAK,sBACLrJ,UAAU,oBACVuC,YAAa,4BAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,8BAIvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,6BAGF,SAAC,MAAD,CACEqJ,KAAK,yBACLrJ,UAAU,oBACVuC,YAAa,gCAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,oCAKzB,iBAAKrJ,UAAU,eAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,6CAEF,UAAC,MAAD,CACEqL,GAAG,SACHhC,KAAK,iBACLrJ,UAAU,mBACV,eAAa,UACb,mBAAiB,OACjBuC,YAAY,mBANd,WAQE,uBACA,mBAAQzF,MAAO,EAAf,qBACA,mBAAQA,MAAO,EAAf,yBAEF,gBAAKkD,UAAU,cAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,yBAIvB,iBAAKrJ,UAAU,eAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,yBAEF,iBAAKuD,MAAO,CAAC+H,cAAe,MAAOC,QAAS,QAASvL,UAAU,aAA/D,WACE,iBAAKA,UAAU,0BAAf,WACE,SAAC,MAAD,CACEqJ,KAAK,WACLtJ,KAAOkL,EAA4B,OAAb,WACtBjL,UAAU,oBACVuC,YAAa,uCAEf,mBACExC,KAAK,SACLc,QAAS,kBAAMqK,GAAiBD,IAChCjL,UAAU,4EACV,iCAA+B,aAJjC,SAMIiL,GAGA,cAAGjL,UAAU,oBAFb,cAAGA,UAAU,+BAMnB,mBACED,KAAK,SACLC,UAAU,8CACVa,QAAS,WACPoJ,EACE,WACAuB,KAAKC,SACFC,SAAS,IACTC,MAAM,KARf,mCAeF,SAAC,KAAD,CAAqBtD,SAAQ,OAAE6B,QAAF,IAAEA,OAAF,EAAEA,EAAQ7B,YACvC,gBAAKrI,UAAU,cAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,sBC5UvBuC,GAAmB,SAAC,GAA6B,IAAD,EAA3B1B,EAA2B,EAA3BA,OAA2B,EAAnBD,cACjC,OACE,iBAAKjK,UAAU,QAAf,WACE,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,sBAAjB,6BACA,SAAC,MAAD,CAAOqJ,KAAK,sBAAsBrJ,UAAU,oBAAoBD,KAAK,YACrE,gBAAKC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,8BAIvB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,sBAAjB,wBAEA,SAAC,MAAD,CACEqJ,KAAK,iBACLrJ,UAAU,oBACVuC,YAAa,qBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,yBAGvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,0BAGF,SAAC,MAAD,CACEqJ,KAAK,iBACLrJ,UAAU,oBACVuC,YAAa,qBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,4BAKzB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,sBAAjB,0BAEA,SAAC,MAAD,CACEqJ,KAAK,mBACLrJ,UAAU,oBACVuC,YAAa,uBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,2BAGvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,sBAGF,SAAC,MAAD,CAAOqJ,KAAK,aAAarJ,UAAU,oBAAoBuC,YAAa,sBACpE,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,wBAKlB,OAANa,QAAM,IAANA,GAAA,UAAAA,EAAQpB,YAAR,eAAc5M,MACb,iCACE,iBAAK8D,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,aAAjB,0BAEA,SAAC,MAAD,CACEqJ,KAAK,gCACLtJ,KAAM,OACNC,UAAU,oBACVuC,YAAa,0BAMjB,iBAAKvC,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,aAAhB,4BAGF,SAAC,MAAD,CACEqJ,KAAK,gCACLrJ,UAAU,oBACVuC,YAAa,6BAOnB,iBAAKvC,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,qBAEA,UAAC,MAAD,CACEqL,GAAG,SACHhC,KAAK,mBACLrJ,UAAU,mBACV,eAAa,UACb,mBAAiB,OACjB,mBAAiB,mBANnB,WAQE,uBACA,0CACA,wCACA,yCACA,6CAMJ,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,+BACA,SAAC,MAAD,CACEqJ,KAAK,qBACLgC,GAAG,WACH1D,KAAM,EACN3H,UAAU,oBACVuC,YAAa,+BAMjB,mBAAOvC,UAAU,2DAAjB,WACE,SAAC,MAAD,CAAOA,UAAU,mBAAmBD,KAAK,WAAWsJ,KAAK,gCACzD,iBAAMrJ,UAAU,2BAAhB,yCACO,WCtIb6L,GAAmB,SAAC,GAA6B,IAAD,EAA3B3B,EAA2B,EAA3BA,OAA2B,EAAnBD,cACjC,OACE,iBAAKjK,UAAU,QAAf,WACE,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,sBAAjB,qBACA,SAAC,MAAD,CAAOqJ,KAAK,aAAarJ,UAAU,uBACnC,gBAAKA,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,qBAIvB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,sBAAjB,mBAEA,SAAC,MAAD,CAAOqJ,KAAK,WAAWrJ,UAAU,oBAAoBuC,YAAa,qBAClE,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,mBAGvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,8BAGF,SAAC,MAAD,CACEqJ,KAAK,kBACLrJ,UAAU,oBACVuC,YAAa,uBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,6BAKlB,OAANa,QAAM,IAANA,GAAA,UAAAA,EAAQf,WAAR,eAAajN,MACZ,gCACG,KACD,iBAAK8D,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,aAAjB,0BAEA,SAAC,MAAD,CACEqJ,KAAK,+BACLtJ,KAAM,OACNC,UAAU,oBACVuC,YAAa,0BAMjB,iBAAKvC,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,GAAhB,4BAGF,SAAC,MAAD,CACEqJ,KAAK,+BACLrJ,UAAU,oBACVuC,YAAa,6BAOnB,iBAAKvC,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,qBAEA,UAAC,MAAD,CACEqL,GAAG,SACHhC,KAAK,iBACLrJ,UAAU,mBACV,eAAa,UACb,mBAAiB,OACjB,mBAAiB,mBANnB,WAQG,uBACD,0CACA,wCACA,yCACA,6CAMJ,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,+BACA,SAAC,MAAD,CACEqJ,KAAK,oBACLgC,GAAG,WACH1D,KAAM,EACN3H,UAAU,oBACVuC,YAAa,+BAMjB,mBAAOvC,UAAU,2DAAjB,WACE,SAAC,MAAD,CAAOA,UAAU,mBAAmBD,KAAK,WAAWsJ,KAAK,+BACzD,iBAAMrJ,UAAU,2BAAhB,oCACO,WCzGb8L,GAAmB,SAAC,GAA6B,IAAD,EAA3B5B,EAA2B,EAA3BA,OAAQD,EAAmB,EAAnBA,cAKjC,OAJApM,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACdoM,EAAc,UAA6B,IAAlBC,EAAOX,IAAI/D,IAAX,OAAuB0E,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAQX,WAA/B,aAAuB,EAAa/D,IAAM0E,EAAO1E,OACzE,KAGD,iBAAKxF,UAAU,QAAf,WACE,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,sBAAjB,mBACA,SAAC,MAAD,CAAOqJ,KAAK,WAAWrJ,UAAU,uBACjC,gBAAKA,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,mBAIvB,iBAAKrJ,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,sBAAjB,yBAEA,SAAC,MAAD,CACEqJ,KAAK,gBACLrJ,UAAU,oBACVuC,YAAa,sBAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,wBAGvB,iBAAKrJ,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,WAAhB,oBAGF,SAAC,MAAD,CACEqJ,KAAK,UACLtJ,KAAM,OACNC,UAAU,oBACVuC,YAAa,eAEf,gBAAKvC,UAAU,mBAAf,UACE,SAAC,MAAD,CAAcqJ,KAAK,qBAKlB,OAANa,QAAM,IAANA,GAAA,UAAAA,EAAQX,WAAR,eAAarN,MACZ,iCACE,iBAAK8D,UAAU,+BAAf,WACE,iBAAKA,UAAU,4BAAf,WACE,kBAAOA,UAAU,aAAjB,0BAEA,SAAC,MAAD,CACEqJ,KAAK,+BACLtJ,KAAM,OACNC,UAAU,oBACVuC,YAAa,0BAMjB,iBAAKvC,UAAU,4BAAf,WACE,kBAAOA,UAAU,uCAAjB,UACE,iBAAMA,UAAU,aAAhB,4BAGF,SAAC,MAAD,CACEqJ,KAAK,+BACLrJ,UAAU,oBACVuC,YAAa,6BAQnB,iBAAKvC,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,qBAEA,UAAC,MAAD,CACEqL,GAAG,SACHhC,KAAK,iBACLrJ,UAAU,mBACV,eAAa,UACb,mBAAiB,OACjB,mBAAiB,mBANnB,WAQG,uBACD,0CACA,wCACA,yCACA,6CAOJ,iBAAKA,UAAU,eAAf,WACE,kBAAOA,UAAU,aAAjB,+BACA,SAAC,MAAD,CACEqJ,KAAK,oBACLgC,GAAG,WACH1D,KAAM,EACN3H,UAAU,oBACVuC,YAAa,+BAOjB,mBAAOvC,UAAU,2DAAjB,WACE,SAAC,MAAD,CAAOA,UAAU,mBAAmBD,KAAK,WAAWsJ,KAAK,+BACzD,iBAAMrJ,UAAU,2BAAhB,6CCtGN+L,GAA+B,SAAC,GAA2B,IAA1B1L,EAAyB,EAAzBA,KAAM2L,EAAmB,EAAnBA,cACrCC,GAAaC,EAAAA,EAAAA,QAA8B,MAC3CC,GAAUD,EAAAA,EAAAA,QAAgC,MACzCjN,EAAsBU,IAAtBV,mBACAX,EAAWE,IAAXF,QACP,GAA0C5B,EAAAA,EAAAA,WAAS,GAAnD,eAAO0P,EAAP,KAAuBC,EAAvB,KACA,GAA0C3P,EAAAA,EAAAA,UAASsL,GAAqB,IAAxE,eAAOsE,EAAP,KAAsBC,EAAtB,KACA,GAAsC7P,EAAAA,EAAAA,WAAQ,kBACzC2D,GADyC,IAE5CuD,UAAWvD,EAAKuD,WAAa6F,GAAY7F,UACzCE,SAAUzD,EAAKyD,UAAY2F,GAAY3F,SACvC4F,WAAYrJ,EAAKqJ,YAAcD,GAAYC,WAC3C3F,MAAO1D,EAAK0D,OAAS0F,GAAY1F,MACjC4F,eAAgBtJ,EAAKsJ,gBAAkBF,GAAYE,eACnDtB,SAAUhI,EAAKgI,UAAYoB,GAAYpB,SACvC9C,MAAOlF,EAAKkF,OAASkE,GAAYlE,MACjCqE,eAAgBvJ,EAAKuJ,gBAAkBH,GAAYG,eACnDnG,cAAepD,EAAKoD,eAAiBgG,GAAYhG,cACjD+B,IAAKnF,EAAKmF,KAAOiE,GAAYjE,IAC7BqE,OAAQxJ,EAAKwJ,QAAUJ,GAAYI,OACnCC,OAAQzJ,EAAKyJ,QAAUL,GAAYK,OACnCjB,eAAgBxI,EAAKwI,gBAAkBY,GAAYZ,eACnDP,QAASjI,EAAKiI,SAAWmB,GAAYnB,QACrCyB,SAAU1J,EAAK0J,UAAYN,GAAYM,SACvCtB,OAAQpI,EAAKoI,QAAUgB,GAAYhB,OACnCK,KAAMzI,EAAKyI,MAAQW,GAAYX,KAC/BK,IAAK9I,EAAK8I,KAAOM,GAAYN,IAC7BI,IAAKlJ,EAAKkJ,KAAOE,GAAYF,OApB/B,eAAOiD,EAAP,WAuBA3O,EAAAA,EAAAA,YAAU,WACHoO,EAAWQ,SAIhBC,MACC,CAACT,IAEJ,IAOMS,EAAc,WAClBP,EAAQM,QAAUE,EAAAA,GAAAA,cAA+BV,EAAWQ,UAGxDG,EAAW,WACVT,EAAQM,UAIbJ,EAAgBF,EAAQM,QAAQI,mBAAqBV,EAAQM,QAAQK,iBAAoB,GAEzFX,EAAQM,QAAQM,SAEhBR,EAAiBvE,GAAqBmE,EAAQM,QAAQI,iBAAmB,MAGrEG,EAAU,yCAAG,WAAO9C,EAAc+C,GAArB,mFACZd,EAAQM,QADI,oDAIjBJ,EAAgBF,EAAQM,QAAQI,mBAAqBV,EAAQM,QAAQK,iBAAoB,GACzFP,EAAiBvE,GAAqBmE,EAAQM,QAAQI,mBAClDV,EAAQM,QAAQI,mBAAqBV,EAAQM,QAAQK,iBANxC,oBAOyB,GAApCX,EAAQM,QAAQI,iBAPL,iCAQMlR,EAAWuO,GARjB,OAQPtO,EARO,OASbqR,EAAQhD,cAAc,KAAtB,OAA4BrO,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMM,IAClC+Q,EAAQhD,cAAc,UAAtB,OAAiCrO,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM0M,SACvC2E,EAAQhD,cAAc,SAAtB,OAAgCrO,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAM6M,QAXzB,2BAYgC,GAApC0D,EAAQM,QAAQI,iBAZZ,kCAaM5Q,EAAWiO,EAAOpB,KAAMoB,EAAOhO,IAbrC,QAaP4M,EAbO,OAcbmE,EAAQhD,cAAc,OAAQnB,GAdjB,2BAegC,GAApCqD,EAAQM,QAAQI,iBAfZ,kCAgBK1Q,EAAU+N,EAAOf,IAAKe,EAAOhO,IAhBlC,QAgBPiN,EAhBO,OAiBb8D,EAAQhD,cAAc,MAAOd,GAjBhB,QAmBfgD,EAAQM,QAAQS,SAnBD,mDAsBP9Q,EAAU8N,EAAOX,IAAKW,EAAOhO,IAtBtB,2DAwBboO,QAAQ6C,MAAR,MAxBa,yBA2BbF,EAAQG,aACD,GAjDT9O,IAEFW,OAAmBgC,GAgDfoM,KAAAA,KAAU,CACRzI,MAAO,WACP0I,KAAK,QAAD,OAAUpD,EAAOhO,GAAK,UAAY,UAAlC,KACJqR,KAAM,UACNC,kBAAmB,SAjCR,8EAAH,wDAuChB,OACE,iCACE,iBACEC,IAAKxB,EACLjM,UAAU,2CACV9D,GAAG,4BAHL,WAKE,iBAAK8D,UAAU,mBAAf,WACE,gBAAKA,UAAU,uBAAuB,0BAAwB,MAA9D,UACE,eAAIA,UAAU,gBAAd,6BAGF,gBAAKA,UAAU,eAAe,0BAAwB,MAAtD,UACE,eAAIA,UAAU,gBAAd,6BAGF,gBAAKA,UAAU,eAAe,0BAAwB,MAAtD,UACE,eAAIA,UAAU,gBAAd,4BAGF,gBAAKA,UAAU,eAAe,0BAAwB,MAAtD,UACE,eAAIA,UAAU,gBAAd,oCAIJ,SAAC,MAAD,CACE0N,iBAAkBpB,EAClBqB,cAAenB,EACfoB,SAAUZ,EACVa,kBAAkB,EAJpB,SAMG,gBAAE5D,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,cAAeD,EAAjD,EAAiDA,OAAjD,OACC,UAAC,MAAD,CAAMpK,UAAU,oCAAoC9D,GAAG,yBAAvD,WACE,gBAAK8D,UAAU,UAAU,0BAAwB,UAAjD,UACE,SAACgK,GAAD,CACEC,cAAeA,EACfC,OAAQA,EACRC,QAASA,EACTE,cAAeA,EACfD,OAAQA,OAIZ,gBAAK,0BAAwB,UAA7B,UACE,SAACwB,GAAD,CAAO3B,cAAeA,EAAeC,OAAQA,OAG/C,gBAAK,0BAAwB,UAA7B,UACE,SAAC2B,GAAD,CAAO5B,cAAeA,EAAeC,OAAQA,OAG/C,gBAAK,0BAAwB,UAA7B,UACE,SAAC4B,GAAD,CAAO7B,cAAeA,EAAeC,OAAQA,OAG/C,iBAAKlK,UAAU,0BAAf,WACE,gBAAKA,UAAU,OAAf,UACE,oBACEa,QAAS+L,EACT7M,KAAK,SACLC,UAAU,oCACV,yBAAuB,WAJzB,WAME,SAAC,KAAD,CACEC,KAAK,yCACLD,UAAU,oBARd,aAcF,0BACE,mBAAQD,KAAK,SAASC,UAAU,8BAAhC,UACE,kBAAMA,UAAU,kBAAhB,WACIoM,GAAkB,WACnBA,GAAkB,UACnB,SAAC,KAAD,CACEnM,KAAK,yCACLD,UAAU,4CAU3BgM,IAAiB,SAACvG,EAAD,QC3MlBqI,GAA2B,WAC/B,MAA8CnO,IAAvCX,EAAP,EAAOA,gBAAiBC,EAAxB,EAAwBA,mBAClB8O,GAAwBC,EAAAA,EAAAA,IAAWhP,GACzC,GAAuClB,EAAAA,EAAAA,UAAS,GAAD,OAC1CC,EAAAA,GAAAA,WAD0C,iBACfiB,IAC9B,WACE,O9BDe9C,E8BCI8C,E9BAhBnD,IAAAA,IAAA,UACGH,EADH,YACeQ,IACnBJ,MAAK,SAACC,GAAD,OAA6CA,EAASC,QAC3DF,MAAK,SAACC,GAAD,OAA8BA,EAASC,QAJ7B,IAACE,I8BGjB,CACEgC,UAAW,EACX+P,QAASF,EACTG,QAAS,SAAClD,GACR/L,OAAmBgC,GACnBqJ,QAAQ6C,MAAMnC,MAVbzM,EAAP,EAAOA,UAAiB3C,EAAxB,EAAkBI,KAAYmR,EAA9B,EAA8BA,MAe9B,OAAKnO,EAIAT,GAAc4O,IAASvR,EAIrB,MAHE,SAACmQ,GAAD,CAAmBC,cAAezN,EAAW8B,KAAMzE,KAJnD,SAACmQ,GAAD,CAAmBC,cAAezN,EAAW8B,KAAM,CAACnE,QAAI+E,MCrB7DkN,GAAgB,WAQpB,OAPAtQ,EAAAA,EAAAA,YAAU,WAER,OADAuQ,SAASC,KAAKC,UAAUC,IAAI,cACrB,WACLH,SAASC,KAAKC,UAAUE,OAAO,iBAEhC,KAGD,iCACE,gBACExO,UAAU,0BACV9D,GAAG,oBACHmE,KAAK,SACLoO,UAAW,EACX,aAAW,OALb,UAQE,gBAAKzO,UAAU,8CAAf,UAEE,iBAAKA,UAAU,gBAAf,WACE,SAAC+H,EAAD,KAEA,gBAAK/H,UAAU,yCAAf,UACE,SAAC8N,GAAD,cASR,gBAAK9N,UAAU,iCC7Bf0O,GAAY,WAChB,IAAO1P,EAAmBW,IAAnBX,gBACP,OACE,iCACE,UAAC,KAAD,YACE,SAACwD,EAAD,KACA,SAAC6E,EAAD,YAEmBpG,IAApBjC,IAAiC,SAACmP,GAAD,QAKlCQ,GAAmB,kBACvB,SAACnS,EAAD,WACE,SAACe,EAAD,WACE,SAACsB,EAAD,WACE,SAAC6P,GAAD,WCrBFE,GAAoC,CACxC,CACEhK,MAAO,kBACP3E,KAAM,SACN4O,aAAa,EACbC,UAAU,GAEZ,CACElK,MAAO,GACP3E,KAAM,GACN4O,aAAa,EACbC,UAAU,IAuBd,GAnBkB,WAChB,OAME,iCACE,SAAC,KAAD,CAAWC,YAAaH,GAAxB,yBACA,SAACD,GAAD","sources":["app/pages/settings/components/ApiUrl.tsx","app/pages/user-management/users-list/core/_requests.ts","app/pages/user-management/users-list/core/QueryRequestProvider.tsx","app/pages/user-management/users-list/core/QueryResponseProvider.tsx","app/pages/user-management/users-list/core/ListViewProvider.tsx","app/pages/user-management/users-list/components/Export.js","app/pages/user-management/users-list/components/header/UsersListFilter.tsx","app/pages/user-management/users-list/components/header/UserListToolbar.tsx","app/pages/user-management/users-list/components/header/UsersListGrouping.tsx","app/pages/user-management/users-list/components/header/UsersListSearchComponent.tsx","app/pages/user-management/users-list/components/header/UsersListHeader.tsx","app/pages/user-management/users-list/table/columns/CustomHeaderColumn.tsx","app/pages/user-management/users-list/table/columns/CustomRow.tsx","app/pages/user-management/users-list/table/columns/UserInfoCell.tsx","app/pages/user-management/users-list/table/columns/UserLastLoginCell.tsx","app/pages/user-management/users-list/table/columns/UserTwoStepsCell.tsx","app/pages/user-management/users-list/table/columns/UserActionsCell.tsx","app/pages/user-management/users-list/table/columns/UserSelectionCell.tsx","app/pages/user-management/users-list/table/columns/UserCustomHeader.tsx","app/pages/user-management/users-list/table/columns/UserSelectionHeader.tsx","app/pages/user-management/users-list/table/columns/_columns.tsx","app/pages/user-management/users-list/components/loading/UsersListLoading.tsx","app/pages/user-management/users-list/components/pagination/UsersListPagination.tsx","app/pages/user-management/users-list/table/UsersTable.tsx","app/pages/user-management/users-list/user-edit-modal/UserEditModalHeader.tsx","app/pages/user-management/users-list/core/_models.ts","app/pages/user-management/users-list/steps/Step1.tsx","app/pages/user-management/users-list/steps/Step2.tsx","app/pages/user-management/users-list/steps/step3.tsx","app/pages/user-management/users-list/steps/step4.tsx","app/pages/user-management/users-list/user-edit-modal/UserEditModalForm.tsx","app/pages/user-management/users-list/user-edit-modal/UserEditModalFormWrapper.tsx","app/pages/user-management/users-list/user-edit-modal/UserEditModal.tsx","app/pages/user-management/users-list/UsersList.tsx","app/pages/user-management/UsersPage.tsx"],"sourcesContent":["const API_URL = 'https://quiz.datacubeindia.com/common/option'\nexport {API_URL}\n","import axios, {AxiosResponse} from 'axios'\r\nimport {ID, Response} from '../../../../../_metronic/helpers'\r\nimport {User, UsersQueryResponse} from './_models'\r\n\r\nconst API_URL = 'https://quiz.datacubeindia.com/user'\r\nconst USER_URL = `${API_URL}/user`\r\n\r\nconst getUsers = (query: string): Promise<UsersQueryResponse> => {\r\n  return axios.get(`${USER_URL}?${query}`).then((d: AxiosResponse<UsersQueryResponse>) => d.data)\r\n}\r\n\r\nconst getUserById = (id: ID): Promise<User | undefined> => {\r\n  return axios\r\n    .get(`${USER_URL}/${id}`)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst createUser = (user: User): Promise<User | undefined> => {\r\n  return axios\r\n    .put(USER_URL, user)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst updateUser = (user: User): Promise<User | undefined> => {\r\n  return axios\r\n    .post(`${USER_URL}/update`, user)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst updateBank = (user: User, id: ID): Promise<User | undefined> => {\r\n  return axios\r\n    .post(`${USER_URL}/updateBank/${id}`, user)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst updateUpi = (user: User, id: ID): Promise<User | undefined> => {\r\n  return axios\r\n    .post(`${USER_URL}/updateUpi/${id}`, user)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst updatePan = (user: User, id: ID): Promise<User | undefined> => {\r\n  return axios\r\n    .post(`${USER_URL}/updatePan/${id}`, user)\r\n    .then((response: AxiosResponse<Response<User>>) => response.data)\r\n    .then((response: Response<User>) => response.data)\r\n}\r\n\r\nconst deleteUser = (userId: ID): Promise<void> => {\r\n  return axios.delete(`${USER_URL}/${userId}`).then(() => {})\r\n}\r\n\r\nconst deleteSelectedUsers = (userIds: Array<ID>): Promise<void> => {\r\n  const requests = userIds.map((id) => axios.delete(`${USER_URL}/${id}`))\r\n  return axios.all(requests).then(() => {})\r\n}\r\n\r\nexport {\r\n  getUsers,\r\n  deleteUser,\r\n  deleteSelectedUsers,\r\n  getUserById,\r\n  createUser,\r\n  updateUser,\r\n  updateBank,\r\n  updateUpi,\r\n  updatePan,\r\n}\r\n","import {FC, useState, createContext, useContext} from 'react'\r\nimport {\r\n  QueryState,\r\n  QueryRequestContextProps,\r\n  initialQueryRequest,\r\n} from '../../../../../_metronic/helpers'\r\n\r\nconst QueryRequestContext = createContext<QueryRequestContextProps>(initialQueryRequest)\r\n\r\nconst QueryRequestProvider: FC = ({children}) => {\r\n  const [state, setState] = useState<QueryState>(initialQueryRequest.state)\r\n\r\n  const updateState = (updates: Partial<QueryState>) => {\r\n    const updatedState = {...state, ...updates} as QueryState\r\n    setState(updatedState)\r\n  }\r\n\r\n  return (\r\n    <QueryRequestContext.Provider value={{state, updateState}}>\r\n      {children}\r\n    </QueryRequestContext.Provider>\r\n  )\r\n}\r\n\r\nconst useQueryRequest = () => useContext(QueryRequestContext)\r\nexport {QueryRequestProvider, useQueryRequest}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {FC, useContext, useState, useEffect, useMemo} from 'react'\r\nimport {useQuery} from 'react-query'\r\nimport {\r\n  createResponseContext,\r\n  initialQueryResponse,\r\n  initialQueryState,\r\n  PaginationState,\r\n  QUERIES,\r\n  stringifyRequestQuery,\r\n} from '../../../../../_metronic/helpers'\r\nimport {getUsers} from './_requests'\r\nimport {User} from './_models'\r\nimport {useQueryRequest} from './QueryRequestProvider'\r\n\r\nconst QueryResponseContext = createResponseContext<User>(initialQueryResponse)\r\nconst QueryResponseProvider: FC = ({children}) => {\r\n  const {state} = useQueryRequest()\r\n  const [query, setQuery] = useState<string>(stringifyRequestQuery(state))\r\n  const updatedQuery = useMemo(() => stringifyRequestQuery(state), [state])\r\n\r\n  useEffect(() => {\r\n    if (query !== updatedQuery) {\r\n      setQuery(updatedQuery)\r\n    }\r\n  }, [updatedQuery])\r\n\r\n  const {\r\n    isFetching,\r\n    refetch,\r\n    data: response,\r\n  } = useQuery(\r\n    `${QUERIES.USERS_LIST}-${query}`,\r\n    () => {\r\n      return getUsers(query)\r\n    },\r\n    {cacheTime: 0, keepPreviousData: true, refetchOnWindowFocus: false}\r\n  )\r\n\r\n  return (\r\n    <QueryResponseContext.Provider value={{isLoading: isFetching, refetch, response, query}}>\r\n      {children}\r\n    </QueryResponseContext.Provider>\r\n  )\r\n}\r\n\r\nconst useQueryResponse = () => useContext(QueryResponseContext)\r\n\r\nconst useQueryResponseData = () => {\r\n  const {response} = useQueryResponse()\r\n  if (!response) {\r\n    return []\r\n  }\r\n\r\n  return response?.data || []\r\n}\r\n\r\nconst useQueryResponsePagination = () => {\r\n  const defaultPaginationState: PaginationState = {\r\n    links: [],\r\n    ...initialQueryState,\r\n  }\r\n\r\n  const {response} = useQueryResponse()\r\n  if (!response || !response.payload || !response.payload.pagination) {\r\n    return defaultPaginationState\r\n  }\r\n\r\n  return response.payload.pagination\r\n}\r\n\r\nconst useQueryResponseLoading = (): boolean => {\r\n  const {isLoading} = useQueryResponse()\r\n  return isLoading\r\n}\r\n\r\nexport {\r\n  QueryResponseProvider,\r\n  useQueryResponse,\r\n  useQueryResponseData,\r\n  useQueryResponsePagination,\r\n  useQueryResponseLoading,\r\n}\r\n","import {FC, useState, createContext, useContext, useMemo} from 'react'\r\nimport {\r\n  ID,\r\n  calculatedGroupingIsDisabled,\r\n  calculateIsAllDataSelected,\r\n  groupingOnSelect,\r\n  initialListView,\r\n  ListViewContextProps,\r\n  groupingOnSelectAll,\r\n} from '../../../../../_metronic/helpers'\r\nimport {useQueryResponse, useQueryResponseData} from './QueryResponseProvider'\r\n\r\nconst ListViewContext = createContext<ListViewContextProps>(initialListView)\r\n\r\nconst ListViewProvider: FC = ({children}) => {\r\n  const [selected, setSelected] = useState<Array<ID>>(initialListView.selected)\r\n  const [itemIdForUpdate, setItemIdForUpdate] = useState<ID>(initialListView.itemIdForUpdate)\r\n  const {isLoading} = useQueryResponse()\r\n  const data = useQueryResponseData()\r\n  const disabled = useMemo(() => calculatedGroupingIsDisabled(isLoading, data), [isLoading, data])\r\n  const isAllSelected = useMemo(() => calculateIsAllDataSelected(data, selected), [data, selected])\r\n\r\n  return (\r\n    <ListViewContext.Provider\r\n      value={{\r\n        selected,\r\n        itemIdForUpdate,\r\n        setItemIdForUpdate,\r\n        disabled,\r\n        isAllSelected,\r\n        onSelect: (id: ID) => {\r\n          groupingOnSelect(id, selected, setSelected)\r\n        },\r\n        onSelectAll: () => {\r\n          groupingOnSelectAll(isAllSelected, setSelected, data)\r\n        },\r\n        clearSelected: () => {\r\n          setSelected([])\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </ListViewContext.Provider>\r\n  )\r\n}\r\n\r\nconst useListView = () => useContext(ListViewContext)\r\n\r\nexport {ListViewProvider, useListView}\r\n","import React from 'react'\nimport { CSVLink } from 'react-csv'\nimport {KTSVG} from '../../../../../_metronic/helpers'\n\nexport const ExportReactCSV = ({ csvData, fileName }) => {\n    return (\n        <button type='button' className='btn btn-light-primary me-3'>\n            <KTSVG path='/media/icons/duotune/arrows/arr078.svg' className='svg-icon-2' />\n            <CSVLink data={csvData} filename={fileName}>Export</CSVLink>\n        </button>\n\n    )\n}","import {useEffect, useState} from 'react'\r\nimport {MenuComponent} from '../../../../../../_metronic/assets/ts/components'\r\nimport {initialQueryState, KTSVG} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\n\r\nconst UsersListFilter = () => {\r\n  const {updateState} = useQueryRequest()\r\n  const {isLoading} = useQueryResponse()\r\n  const [role, setRole] = useState<string | undefined>()\r\n  const [lastLogin, setLastLogin] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    MenuComponent.reinitialization()\r\n  }, [])\r\n\r\n  const resetData = () => {\r\n    updateState({filter: undefined, ...initialQueryState})\r\n  }\r\n\r\n  const filterData = () => {\r\n    updateState({\r\n      filter: {role, last_login: lastLogin},\r\n      ...initialQueryState,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Filter Button */}\r\n      <button\r\n        disabled={isLoading}\r\n        type='button'\r\n        className='btn btn-light-primary me-3'\r\n        data-kt-menu-trigger='click'\r\n        data-kt-menu-placement='bottom-end'\r\n      >\r\n        <KTSVG path='/media/icons/duotune/general/gen031.svg' className='svg-icon-2' />\r\n        Filter\r\n      </button>\r\n      {/* end::Filter Button */}\r\n      {/* begin::SubMenu */}\r\n      <div className='menu menu-sub menu-sub-dropdown w-300px w-md-325px' data-kt-menu='true'>\r\n        {/* begin::Header */}\r\n        <div className='px-7 py-5'>\r\n          <div className='fs-5 text-dark fw-bolder'>Filter Options</div>\r\n        </div>\r\n        {/* end::Header */}\r\n\r\n        {/* begin::Separator */}\r\n        <div className='separator border-gray-200'></div>\r\n        {/* end::Separator */}\r\n\r\n        {/* begin::Content */}\r\n        <div className='px-7 py-5' data-kt-user-table-filter='form'>\r\n          {/* begin::Input group */}\r\n          <div className='mb-10'>\r\n            <label className='form-label fs-6 fw-bold'>Role:</label>\r\n            <select\r\n              className='form-select form-select-solid fw-bolder'\r\n              data-kt-select2='true'\r\n              data-placeholder='Select option'\r\n              data-allow-clear='true'\r\n              data-kt-user-table-filter='role'\r\n              data-hide-search='true'\r\n              onChange={(e) => setRole(e.target.value)}\r\n              value={role}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Administrator'>Administrator</option>\r\n              <option value='Analyst'>Analyst</option>\r\n              <option value='Developer'>Developer</option>\r\n              <option value='Support'>Support</option>\r\n              <option value='Trial'>Trial</option>\r\n            </select>\r\n          </div>\r\n          {/* end::Input group */}\r\n\r\n          {/* begin::Input group */}\r\n          <div className='mb-10'>\r\n            <label className='form-label fs-6 fw-bold'>Last login:</label>\r\n            <select\r\n              className='form-select form-select-solid fw-bolder'\r\n              data-kt-select2='true'\r\n              data-placeholder='Select option'\r\n              data-allow-clear='true'\r\n              data-kt-user-table-filter='two-step'\r\n              data-hide-search='true'\r\n              onChange={(e) => setLastLogin(e.target.value)}\r\n              value={lastLogin}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Yesterday'>Yesterday</option>\r\n              <option value='20 mins ago'>20 mins ago</option>\r\n              <option value='5 hours ago'>5 hours ago</option>\r\n              <option value='2 days ago'>2 days ago</option>\r\n            </select>\r\n          </div>\r\n          {/* end::Input group */}\r\n\r\n          {/* begin::Actions */}\r\n          <div className='d-flex justify-content-end'>\r\n            <button\r\n              type='button'\r\n              disabled={isLoading}\r\n              onClick={filterData}\r\n              className='btn btn-light btn-active-light-primary fw-bold me-2 px-6'\r\n              data-kt-menu-dismiss='true'\r\n              data-kt-user-table-filter='reset'\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              disabled={isLoading}\r\n              type='button'\r\n              onClick={resetData}\r\n              className='btn btn-primary fw-bold px-6'\r\n              data-kt-menu-dismiss='true'\r\n              data-kt-user-table-filter='filter'\r\n            >\r\n              Apply\r\n            </button>\r\n          </div>\r\n          {/* end::Actions */}\r\n        </div>\r\n        {/* end::Content */}\r\n      </div>\r\n      {/* end::SubMenu */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UsersListFilter}\r\n","import {KTSVG} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {useQueryResponseData} from '../../core/QueryResponseProvider'\r\nimport {ExportReactCSV} from '../Export'\r\nimport {UsersListFilter} from './UsersListFilter'\r\n\r\nconst UsersListToolbar = () => {\r\n  const users = useQueryResponseData()\r\n  const {setItemIdForUpdate} = useListView()\r\n  const openAddUserModal = () => {\r\n    setItemIdForUpdate(null)\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end' data-kt-user-table-toolbar='base'>\r\n      <UsersListFilter />\r\n\r\n      {/* begin::Export */}\r\n      <ExportReactCSV csvData={users} fileName={'users'} />\r\n\r\n      {/* end::Export */}\r\n\r\n      {/* begin::Add user */}\r\n      <button type='button' className='btn btn-primary' onClick={openAddUserModal}>\r\n        <KTSVG path='/media/icons/duotune/arrows/arr075.svg' className='svg-icon-2' />\r\n        Add User\r\n      </button>\r\n      {/* end::Add user */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListToolbar}\r\n","import {useQueryClient, useMutation} from 'react-query'\r\nimport {QUERIES} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\nimport {deleteSelectedUsers} from '../../core/_requests'\r\n\r\nconst UsersListGrouping = () => {\r\n  const {selected, clearSelected} = useListView()\r\n  const queryClient = useQueryClient()\r\n  const {query} = useQueryResponse()\r\n\r\n  const deleteSelectedItems = useMutation(() => deleteSelectedUsers(selected), {\r\n    // 💡 response of the mutation is passed to onSuccess\r\n    onSuccess: () => {\r\n      // ✅ update detail view directly\r\n      queryClient.invalidateQueries([`${QUERIES.USERS_LIST}-${query}`])\r\n      clearSelected()\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end align-items-center'>\r\n      <div className='fw-bolder me-5'>\r\n        <span className='me-2'>{selected.length}</span> Selected\r\n      </div>\r\n\r\n      <button\r\n        type='button'\r\n        className='btn btn-danger'\r\n        onClick={async () => await deleteSelectedItems.mutateAsync()}\r\n      >\r\n        Delete Selected\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListGrouping}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useState, useEffect} from 'react'\r\nimport {initialQueryState, KTSVG, useDebounce} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\n\r\nconst UsersListSearchComponent = () => {\r\n  const {updateState} = useQueryRequest()\r\n  const [searchTerm, setSearchTerm] = useState<string>('')\r\n  // Debounce search term so that it only gives us latest value ...\r\n  // ... if searchTerm has not been updated within last 500ms.\r\n  // The goal is to only have the API call fire when user stops typing ...\r\n  // ... so that we aren't hitting our API rapidly.\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 150)\r\n  // Effect for API call\r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\r\n        updateState({search: debouncedSearchTerm, ...initialQueryState})\r\n      }\r\n    },\r\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n    // More details about useDebounce: https://usehooks.com/useDebounce/\r\n  )\r\n\r\n  return (\r\n    <div className='card-title'>\r\n      {/* begin::Search */}\r\n      <div className='d-flex align-items-center position-relative my-1'>\r\n        <KTSVG\r\n          path='/media/icons/duotune/general/gen021.svg'\r\n          className='svg-icon-1 position-absolute ms-6'\r\n        />\r\n        <input\r\n          type='text'\r\n          data-kt-user-table-filter='search'\r\n          className='form-control form-control-solid w-250px ps-14'\r\n          placeholder='Search user'\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n      {/* end::Search */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListSearchComponent}\r\n","import {useListView} from '../../core/ListViewProvider'\r\nimport {UsersListToolbar} from './UserListToolbar'\r\nimport {UsersListGrouping} from './UsersListGrouping'\r\nimport {UsersListSearchComponent} from './UsersListSearchComponent'\r\n\r\nconst UsersListHeader = () => {\r\n  const {selected} = useListView()\r\n  return (\r\n    <div className='card-header border-0 pt-6'>\r\n      <UsersListSearchComponent />\r\n      {/* begin::Card toolbar */}\r\n      <div className='card-toolbar'>\r\n        {/* begin::Group actions */}\r\n        {selected.length > 0 ? <UsersListGrouping /> : <UsersListToolbar />}\r\n        {/* end::Group actions */}\r\n      </div>\r\n      {/* end::Card toolbar */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListHeader}\r\n","import {FC} from 'react'\r\nimport {ColumnInstance} from 'react-table'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  column: ColumnInstance<User>\r\n}\r\n\r\nconst CustomHeaderColumn: FC<Props> = ({column}) => (\r\n  <>\r\n    {column.Header && typeof column.Header === 'string' ? (\r\n      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n    ) : (\r\n      column.render('Header')\r\n    )}\r\n  </>\r\n)\r\n\r\nexport {CustomHeaderColumn}\r\n","import clsx from 'clsx'\r\nimport {FC} from 'react'\r\nimport {Row} from 'react-table'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  row: Row<User>\r\n}\r\n\r\nconst CustomRow: FC<Props> = ({row}) => (\r\n  <tr {...row.getRowProps()}>\r\n    {row.cells.map((cell) => {\r\n      return (\r\n        <td\r\n          {...cell.getCellProps()}\r\n          className={clsx({'text-end min-w-100px': cell.column.id === 'actions'})}\r\n        >\r\n          {cell.render('Cell')}\r\n        </td>\r\n      )\r\n    })}\r\n  </tr>\r\n)\r\n\r\nexport {CustomRow}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport clsx from 'clsx'\r\nimport {FC} from 'react'\r\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  user: User\r\n}\r\n\r\nconst UserInfoCell: FC<Props> = ({user}) => {\r\n  const {setItemIdForUpdate} = useListView()\r\n\r\n  const openEditModal = () => {\r\n    setItemIdForUpdate(user.id)\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex align-items-center'>\r\n      {/* begin:: Avatar */}\r\n      <div className='symbol symbol-circle symbol-50px overflow-hidden me-3'>\r\n        <a onClick={openEditModal} style={{cursor: 'pointer'}}>\r\n          {user.profile_image ? (\r\n            <div className='symbol-label'>\r\n              <img src={user.profile_image} alt={user.firstname} className='w-100' />\r\n            </div>\r\n          ) : (\r\n            <div className={clsx('symbol-label fs-3', `bg-light-warning`, `text-warning`)}>\r\n              {user.firstname?.charAt(0)}\r\n            </div>\r\n          )}\r\n        </a>\r\n      </div>\r\n      <div className='d-flex flex-column'>\r\n        <a\r\n          onClick={openEditModal}\r\n          style={{cursor: 'pointer'}}\r\n          className='text-gray-800 text-hover-primary mb-1'\r\n        >\r\n          {user.firstname} {user.lastname}\r\n        </a>\r\n        <span>{user.email}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserInfoCell}\r\n","import {FC} from 'react'\r\n\r\ntype Props = {\r\n  last_login?: string\r\n}\r\n\r\nconst UserLastLoginCell: FC<Props> = ({last_login}) => (\r\n  <div className='badge badge-light fw-bolder'>{last_login}</div>\r\n)\r\n\r\nexport {UserLastLoginCell}\r\n","import {FC} from 'react'\r\n\r\ntype Props = {\r\n  two_steps?: boolean\r\n}\r\n\r\nconst UserTwoStepsCell: FC<Props> = ({two_steps}) => (\r\n  <> {two_steps && <div className='badge badge-light-success fw-bolder'>Enabled</div>}</>\r\n)\r\n\r\nexport {UserTwoStepsCell}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {FC, useEffect} from 'react'\r\nimport {useMutation, useQueryClient} from 'react-query'\r\nimport {MenuComponent} from '../../../../../../_metronic/assets/ts/components'\r\nimport {ID, KTSVG, QUERIES} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\nimport {deleteUser} from '../../core/_requests'\r\n\r\ntype Props = {\r\n  id: ID\r\n}\r\n\r\nconst UserActionsCell: FC<Props> = ({id}) => {\r\n  const {setItemIdForUpdate} = useListView()\r\n  const {query} = useQueryResponse()\r\n  const queryClient = useQueryClient()\r\n\r\n  useEffect(() => {\r\n    MenuComponent.reinitialization()\r\n  }, [])\r\n\r\n  const openEditModal = () => {\r\n    setItemIdForUpdate(id)\r\n  }\r\n\r\n  const deleteItem = useMutation(() => deleteUser(id), {\r\n    // 💡 response of the mutation is passed to onSuccess\r\n    onSuccess: () => {\r\n      // ✅ update detail view directly\r\n      queryClient.invalidateQueries([`${QUERIES.USERS_LIST}-${query}`])\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <a\r\n        href='#'\r\n        className='btn btn-light btn-active-light-primary btn-sm'\r\n        data-kt-menu-trigger='click'\r\n        data-kt-menu-placement='bottom-end'\r\n      >\r\n        <i className='bi bi-three-dots-vertical fs-5'></i>\r\n      </a>\r\n      {/* begin::Menu */}\r\n      <div\r\n        className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4'\r\n        data-kt-menu='true'\r\n      >\r\n        {/* begin::Menu item */}\r\n        <div className='menu-item px-3'>\r\n          <a className='menu-link px-3' onClick={openEditModal}>\r\n            Edit\r\n          </a>\r\n        </div>\r\n        {/* end::Menu item */}\r\n\r\n        {/* begin::Menu item */}\r\n        <div className='menu-item px-3'>\r\n          <a\r\n            className='menu-link px-3'\r\n            data-kt-users-table-filter='delete_row'\r\n            onClick={async () => await deleteItem.mutateAsync()}\r\n          >\r\n            Delete\r\n          </a>\r\n        </div>\r\n        {/* end::Menu item */}\r\n      </div>\r\n      {/* end::Menu */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserActionsCell}\r\n","import {FC, useMemo} from 'react'\r\nimport {ID} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\n\r\ntype Props = {\r\n  id: ID\r\n}\r\n\r\nconst UserSelectionCell: FC<Props> = ({id}) => {\r\n  const {selected, onSelect} = useListView()\r\n  const isSelected = useMemo(() => selected.includes(id), [id, selected])\r\n  return (\r\n    <div className='form-check form-check-sm form-check-custom form-check-solid'>\r\n      <input\r\n        className='form-check-input'\r\n        type='checkbox'\r\n        data-kt-check={isSelected}\r\n        data-kt-check-target='#kt_table_users .form-check-input'\r\n        checked={isSelected}\r\n        onChange={() => onSelect(id)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserSelectionCell}\r\n","import clsx from 'clsx'\r\nimport {FC, PropsWithChildren, useMemo} from 'react'\r\nimport {HeaderProps} from 'react-table'\r\nimport {initialQueryState} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  className?: string\r\n  title?: string\r\n  tableProps: PropsWithChildren<HeaderProps<User>>\r\n}\r\nconst UserCustomHeader: FC<Props> = ({className, title, tableProps}) => {\r\n  const id = tableProps.column.id\r\n  const {state, updateState} = useQueryRequest()\r\n\r\n  const isSelectedForSorting = useMemo(() => {\r\n    return state.sort && state.sort === id\r\n  }, [state, id])\r\n  const order: 'asc' | 'desc' | undefined = useMemo(() => state.order, [state])\r\n\r\n  const sortColumn = () => {\r\n    // avoid sorting for these columns\r\n    if (id === 'actions' || id === 'selection') {\r\n      return\r\n    }\r\n\r\n    if (!isSelectedForSorting) {\r\n      // enable sort asc\r\n      updateState({sort: id, order: 'asc', ...initialQueryState})\r\n      return\r\n    }\r\n\r\n    if (isSelectedForSorting && order !== undefined) {\r\n      if (order === 'asc') {\r\n        // enable sort desc\r\n        updateState({sort: id, order: 'desc', ...initialQueryState})\r\n        return\r\n      }\r\n\r\n      // disable sort\r\n      updateState({sort: undefined, order: undefined, ...initialQueryState})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <th\r\n      {...tableProps.column.getHeaderProps()}\r\n      className={clsx(\r\n        className,\r\n        isSelectedForSorting && order !== undefined && `table-sort-${order}`\r\n      )}\r\n      style={{cursor: 'pointer'}}\r\n      onClick={sortColumn}\r\n    >\r\n      {title}\r\n    </th>\r\n  )\r\n}\r\n\r\nexport {UserCustomHeader}\r\n","import {FC, PropsWithChildren} from 'react'\r\nimport {HeaderProps} from 'react-table'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  tableProps: PropsWithChildren<HeaderProps<User>>\r\n}\r\n\r\nconst UserSelectionHeader: FC<Props> = ({tableProps}) => {\r\n  const {isAllSelected, onSelectAll} = useListView()\r\n  return (\r\n    <th {...tableProps.column.getHeaderProps()} className='w-10px pe-2'>\r\n      <div className='form-check form-check-sm form-check-custom form-check-solid me-3'>\r\n        <input\r\n          className='form-check-input'\r\n          type='checkbox'\r\n          data-kt-check={isAllSelected}\r\n          data-kt-check-target='#kt_table_users .form-check-input'\r\n          checked={isAllSelected}\r\n          onChange={onSelectAll}\r\n        />\r\n      </div>\r\n    </th>\r\n  )\r\n}\r\n\r\nexport {UserSelectionHeader}\r\n","import {Column} from 'react-table'\r\nimport {UserInfoCell} from './UserInfoCell'\r\nimport {UserLastLoginCell} from './UserLastLoginCell'\r\nimport {UserTwoStepsCell} from './UserTwoStepsCell'\r\nimport {UserActionsCell} from './UserActionsCell'\r\nimport {UserSelectionCell} from './UserSelectionCell'\r\nimport {UserCustomHeader} from './UserCustomHeader'\r\nimport {UserSelectionHeader} from './UserSelectionHeader'\r\nimport {User} from '../../core/_models'\r\n\r\nconst usersColumns: ReadonlyArray<Column<User>> = [\r\n  {\r\n    Header: (props) => <UserSelectionHeader tableProps={props} />,\r\n    id: 'selection',\r\n    Cell: ({...props}) => <UserSelectionCell id={props.data[props.row.index].id} />,\r\n  },\r\n  {\r\n    Header: (props) => <UserCustomHeader tableProps={props} title='Name' className='min-w-125px' />,\r\n    id: 'name',\r\n    Cell: ({...props}) => <UserInfoCell user={props.data[props.row.index]} />,\r\n  },\r\n  {\r\n    Header: (props) => <UserCustomHeader tableProps={props} title='Father Name' className='min-w-125px' />,\r\n    accessor: 'fathername',\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Phone' className='min-w-125px' />\r\n    ),\r\n    id: 'phone',\r\n    Cell: ({...props}) => <UserLastLoginCell last_login={props.data[props.row.index].phone} />,\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Two steps' className='min-w-125px' />\r\n    ),\r\n    id: 'dob',\r\n    Cell: ({...props}) => <UserTwoStepsCell two_steps={props.data[props.row.index].dob} />,\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Gender' className='min-w-125px' />\r\n    ),\r\n    accessor: 'gender',\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Actions' className='text-end min-w-100px' />\r\n    ),\r\n    id: 'actions',\r\n    Cell: ({...props}) => <UserActionsCell id={props.data[props.row.index].id} />,\r\n  },\r\n]\r\n\r\nexport {usersColumns}\r\n","const UsersListLoading = () => {\r\n  const styles = {\r\n    borderRadius: '0.475rem',\r\n    boxShadow: '0 0 50px 0 rgb(82 63 105 / 15%)',\r\n    backgroundColor: '#fff',\r\n    color: '#7e8299',\r\n    fontWeight: '500',\r\n    margin: '0',\r\n    width: 'auto',\r\n    padding: '1rem 2rem',\r\n    top: 'calc(50% - 2rem)',\r\n    left: 'calc(50% - 4rem)',\r\n  }\r\n\r\n  return <div style={{...styles, position: 'absolute', textAlign: 'center'}}>Processing...</div>\r\n}\r\n\r\nexport {UsersListLoading}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport clsx from 'clsx'\r\nimport {useQueryResponseLoading, useQueryResponsePagination} from '../../core/QueryResponseProvider'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nconst UsersListPagination = () => {\r\n  const pagination = useQueryResponsePagination()\r\n  const isLoading = useQueryResponseLoading()\r\n  const {updateState} = useQueryRequest()\r\n  const updatePage = (page: number | null) => {\r\n    if (!page || isLoading || pagination.page === page) {\r\n      return\r\n    }\r\n\r\n    updateState({page, items_per_page: pagination.items_per_page || 10})\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'></div>\r\n      <div className='col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'>\r\n        <div id='kt_table_users_paginate'>\r\n          <ul className='pagination'>\r\n            {pagination.links?.map((link) => (\r\n              <li\r\n                key={link.label}\r\n                className={clsx('page-item', {\r\n                  active: pagination.page === link.page,\r\n                  disabled: isLoading,\r\n                  previous: link.label === '&laquo; Previous',\r\n                  next: link.label === 'Next &raquo;',\r\n                })}\r\n              >\r\n                <a\r\n                  className='page-link'\r\n                  onClick={() => updatePage(link.page)}\r\n                  dangerouslySetInnerHTML={{__html: link.label}}\r\n                  style={{cursor: 'pointer'}}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListPagination}\r\n","import {useMemo} from 'react'\r\nimport {useTable, ColumnInstance, Row} from 'react-table'\r\nimport {CustomHeaderColumn} from './columns/CustomHeaderColumn'\r\nimport {CustomRow} from './columns/CustomRow'\r\nimport {useQueryResponseData, useQueryResponseLoading} from '../core/QueryResponseProvider'\r\nimport {usersColumns} from './columns/_columns'\r\nimport {User} from '../core/_models'\r\nimport {UsersListLoading} from '../components/loading/UsersListLoading'\r\nimport {UsersListPagination} from '../components/pagination/UsersListPagination'\r\nimport {KTCardBody} from '../../../../../_metronic/helpers'\r\n\r\nconst UsersTable = () => {\r\n  const users = useQueryResponseData()\r\n  const isLoading = useQueryResponseLoading()\r\n  const data = useMemo(() => users, [users])\r\n  const columns = useMemo(() => usersColumns, [])\r\n  const {getTableProps, getTableBodyProps, headers, rows, prepareRow} = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <KTCardBody className='py-4'>\r\n      <div className='table-responsive'>\r\n        <table\r\n          id='kt_table_users'\r\n          className='table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer'\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            <tr className='text-start text-muted fw-bolder fs-7 text-uppercase gs-0'>\r\n              {headers.map((column: ColumnInstance<User>) => (\r\n                <CustomHeaderColumn key={column.id} column={column} />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className='text-gray-600 fw-bold' {...getTableBodyProps()}>\r\n            {rows.length > 0 ? (\r\n              rows.map((row: Row<User>, i) => {\r\n                prepareRow(row)\r\n                return <CustomRow row={row} key={`row-${i}-${row.id}`} />\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>\r\n                  <div className='d-flex text-center w-100 align-content-center justify-content-center'>\r\n                    No matching records found\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <UsersListPagination />\r\n      {isLoading && <UsersListLoading />}\r\n    </KTCardBody>\r\n  )\r\n}\r\n\r\nexport {UsersTable}\r\n","import {KTSVG} from '../../../../../_metronic/helpers'\r\nimport {useListView} from '../core/ListViewProvider'\r\n\r\nconst UserEditModalHeader = () => {\r\n  const {setItemIdForUpdate} = useListView()\r\n\r\n  return (\r\n    <div className='modal-header'>\r\n      {/* begin::Modal title */}\r\n      <h2 className='fw-bolder'>Add User</h2>\r\n      {/* end::Modal title */}\r\n\r\n      {/* begin::Close */}\r\n      <div\r\n        className='btn btn-icon btn-sm btn-active-icon-primary'\r\n        data-kt-users-modal-action='close'\r\n        onClick={() => setItemIdForUpdate(undefined)}\r\n        style={{cursor: 'pointer'}}\r\n      >\r\n        <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-1' />\r\n      </div>\r\n      {/* end::Close */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserEditModalHeader}\r\n","import {ID, Response} from '../../../../../_metronic/helpers'\r\nimport * as Yup from 'yup'\r\n\r\nexport type User = {\r\n  id?: ID\r\n  firstname?: string\r\n  lastname?: string\r\n  fathername?: string\r\n  email?: string\r\n  email_verified?: string\r\n  phone?: string\r\n  phone_verified?: string\r\n  dob?: string\r\n  gender?: string\r\n  password?: string\r\n  profile_image?: any\r\n  locale?: string\r\n  touchId_enable?: number\r\n  address?: object\r\n  referral?: any\r\n  device?: any\r\n  bank?: any\r\n  upi?: any\r\n  pan?: any\r\n}\r\n\r\nexport type UsersQueryResponse = Response<Array<User>>\r\n\r\nconst createAccountSchemas = [\r\n  Yup.object().shape({\r\n    firstname: Yup.string()\r\n      .required('First name is required')\r\n      .label('first_name'),\r\n    lastname: Yup.string()\r\n      .required('Last name is required')\r\n      .label('last_name'),\r\n    email: Yup.string()\r\n      .email('Wrong email format')\r\n      .required('Email is required')\r\n      .label('email'),\r\n    phone: Yup.string()\r\n      // .positive()\r\n      .length(10)\r\n      .matches(\r\n        /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\r\n        'Phone number is not valid'\r\n      )\r\n      .required('Phone number is required')\r\n      .label('phone'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .label('password'),\r\n    dob: Yup.string().required('Dob is required'),\r\n    address: Yup.object().shape({\r\n      city: Yup.string().required('City is required'),\r\n      district: Yup.string().required('District is required'),\r\n      state: Yup.string().required('State is required'),\r\n    }),\r\n    device: Yup.array().of(\r\n      Yup.object().shape({\r\n        device_id: Yup.string().required('Device Id is required'),\r\n        device_token: Yup.string().required('Device Token is required'),\r\n      })\r\n    ),\r\n    touchId_enable: Yup.number().required('Fingure Print is required'),\r\n    // profile_image: Yup.object().label('profile_image')\r\n  }),\r\n  Yup.object().shape({\r\n    bank: Yup.object().shape({\r\n      account_number: Yup.string().required('Account Number is required'),\r\n      ifsc_code: Yup.string().required('IFSC code is required'),\r\n      bank_name: Yup.string().required('Bank Name is required'),\r\n      branch_name: Yup.string().required('Branch Name is required'),\r\n      state: Yup.string().required('State is required'),\r\n    }),\r\n  }),\r\n  Yup.object().shape({\r\n    upi: Yup.object().shape({\r\n      upi_id: Yup.string().required('Upi Id is required'),\r\n      name: Yup.string().required('Name is required'),\r\n      father_name: Yup.string().required('Father name is required'),\r\n    }),\r\n  }),\r\n  Yup.object().shape({\r\n    pan: Yup.object().shape({\r\n      name: Yup.string().required('Name is required'),\r\n      pannumber: Yup.string().required('Pan number is required'),\r\n      dob: Yup.string().required('DOB is required'),\r\n    }),\r\n  }),\r\n]\r\n\r\nexport const initialUser: User = {\r\n  firstname: '',\r\n  lastname: '',\r\n  fathername: '',\r\n  email: '',\r\n  email_verified: '',\r\n  phone: '',\r\n  phone_verified: '',\r\n  dob: '',\r\n  gender: '',\r\n  password: '',\r\n  profile_image: null,\r\n  locale: '',\r\n  touchId_enable: 0,\r\n  address: {\r\n    city: '',\r\n    district: '',\r\n    state: '',\r\n  },\r\n  referral: {},\r\n  device: [{device_id: '', device_token: ''}],\r\n  bank: {\r\n    account_number: '',\r\n    ifsc_code: '',\r\n    bank_name: '',\r\n    branch_name: '',\r\n    state: '',\r\n  },\r\n  upi: {\r\n    upi_id: '',\r\n    name: '',\r\n    father_name: '',\r\n  },\r\n  pan: {\r\n    name: '',\r\n    pannumber: '',\r\n    dob: '',\r\n  },\r\n}\r\n\r\nexport {createAccountSchemas}\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Field, ErrorMessage, Formik} from 'formik'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport PasswordStrengthBar from 'react-password-strength-bar'\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport {API_URL} from '../../../settings/components/ApiUrl'\r\n// import {checkEmail} from '../core/_requests'\r\n\r\ntype Props = {\r\n  setFieldValue: any\r\n  values: any\r\n  touched: any\r\n  setFieldError: any\r\n  errors: any\r\n}\r\n\r\nconst Step1: FC<Props> = ({setFieldValue, values, touched, setFieldError, errors}) => {\r\n  console.log(touched, 'touched', errors, values)\r\n  // const validateEmail = async (value: string) => {\r\n  //   let error\r\n  //   var re = /\\S+@\\S+\\.\\S+/\r\n  //   let correct = re.test(value)\r\n  //   if (value != '' && correct && !values.id) {\r\n  //     await checkEmail(value)\r\n  //       .then((data: any) => {\r\n  //         if (data.data == 'Email already exists') {\r\n  //           error = data.data\r\n  //           // setFieldError('email', data.data)\r\n  //         } else {\r\n  //           error = null\r\n  //         }\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err)\r\n  //       })\r\n  //   }\r\n\r\n  //   return error\r\n  // }\r\n\r\n  const uploadImage = async (e: any) => {\r\n    const file = e.currentTarget.files[0]\r\n    const fd = new FormData()\r\n    fd.append('image', file)\r\n    await axios\r\n      .post(`${API_URL}/upload`, fd)\r\n      .then((data: AxiosResponse<any>) => {\r\n        setFieldValue('profile_image', data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  const [showPassword, setPasswordShow] = useState(false)\r\n  return (\r\n    <div className='w-100'>\r\n      <div className='fv-row mb-7'>\r\n        <label className='d-block form-label'>Profile Image</label>\r\n        <div className='image-input image-input-outline' data-kt-image-input='true'>\r\n          <div className=''>\r\n            <img\r\n              src={\r\n                values?.profile_image != null\r\n                  ? values?.profile_image\r\n                  : toAbsoluteUrl('/media/svg/avatars/blank.svg')\r\n              }\r\n              alt='avatar'\r\n              className='image-input-wrapper w-125px h-125px'\r\n            />\r\n          </div>\r\n          <label\r\n            className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n            data-kt-image-input-action='change'\r\n            data-bs-toggle='tooltip'\r\n            title='Change avatar'\r\n          >\r\n            <i className='bi bi-pencil-fill fs-7'></i>\r\n            <input\r\n              type='file'\r\n              name='profile_image'\r\n              accept='.png, .jpg, .jpeg'\r\n              onChange={uploadImage}\r\n            />\r\n            <input type='hidden' name='avatar_remove' />\r\n          </label>\r\n          {values.profile_image !== null && (\r\n            <button\r\n              className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n              data-kt-image-input-action='remove'\r\n              data-bs-toggle='tooltip'\r\n              title='Remove avatar'\r\n              type='button'\r\n              onClick={() => setFieldValue('profile_image', null)}\r\n            >\r\n              <i className='bi bi-x fs-2'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='form-label required'>First Name</label>\r\n\r\n          <Field name='firstname' className='form-control mb-2' placeholder={'Enter First Name'} />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='firstname' />\r\n          </div>\r\n        </div>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Last Name</span>\r\n          </label>\r\n\r\n          <Field name='lastname' className='form-control mb-2' placeholder={'Enter Last Name'} />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='lastname' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='fs-6 fw-bold form-label required'>Email</label>\r\n\r\n          <Field\r\n            name='email'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid Email'}\r\n            // validate={validateEmail}\r\n          />\r\n            <div className='text-danger mt-2'>\r\n              <ErrorMessage name='email' />\r\n            </div>\r\n        </div>\r\n\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Phone Number</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='phone'\r\n            type={'number'}\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid Phone Number'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='phone' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='fs-6 fw-bold form-label required'>DOB</label>\r\n          <Field\r\n            type={'date'}\r\n            name='dob'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid DOB'}\r\n          />\r\n            <div className='text-danger mt-2'>\r\n              <ErrorMessage name='dob' />\r\n            </div>\r\n        </div>\r\n\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>City</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='address.city'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid City'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='address.city' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='fs-6 fw-bold form-label required'>District</label>\r\n\r\n          <Field\r\n            name='address.district'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Correct State'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='address.district' />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>State</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='address.state'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Correct State'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='address.state' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {values?.id && (\r\n        <div className='d-flex flex-wrap gap-5 mb-10'>\r\n          <div className='fv-row w-100 flex-md-root'>\r\n            <label className='fs-6 fw-bold form-label required'>My Referral Code</label>\r\n            <Field\r\n              name='referral.referral_code'\r\n              className='form-control mb-2'\r\n              placeholder={'Enter Referral Code'}\r\n              disabled={true}\r\n            />\r\n            <div className='text-danger mt-2'>\r\n              <ErrorMessage name='referral.referral_code' />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='fv-row w-100 flex-md-root'>\r\n            <label className='d-flex align-items-center form-label'>\r\n              <span className='required'>Referred By</span>\r\n            </label>\r\n\r\n            <Field\r\n              name='referral.refered_by'\r\n              className='form-control mb-2'\r\n              placeholder={'Enter Referred By'}\r\n              disabled={true}\r\n            />\r\n            <div className='text-danger mt-2'>\r\n              <ErrorMessage name='referral.refered_by' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='fs-6 fw-bold form-label required'>Device Id</label>\r\n\r\n          <Field\r\n            name='device[0].device_id'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Correct DeviceId'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='device[0].device_id' />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Device Token</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='device[0].device_token'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Correct Device Token'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='device[0].device_token' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='d-flex align-items-center form-label'>\r\n          <span className='required'>Fingure Print Enable/Disable</span>\r\n        </label>\r\n        <Field\r\n          as='select'\r\n          name='touchId_enable'\r\n          className='form-select mb-2'\r\n          data-control='select2'\r\n          data-hide-search='true'\r\n          placeholder='Select an option'\r\n        >\r\n          <option></option>\r\n          <option value={1}>Enable</option>\r\n          <option value={0}>Disable</option>\r\n        </Field>\r\n        <div className='text-danger'>\r\n          <ErrorMessage name='touchId_enable' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='d-flex align-items-center form-label'>\r\n          <span className='required'>Password</span>\r\n        </label>\r\n        <div style={{flexDirection: 'row', display: 'flex'}} className='mb-2 gap-5'>\r\n          <div className='position-relative w-100'>\r\n            <Field\r\n              name='password'\r\n              type={!showPassword ? 'password' : 'text'}\r\n              className='form-control mb-2'\r\n              placeholder={'Enter Strong Password Or Generate'}\r\n            />\r\n            <button\r\n              type='button'\r\n              onClick={() => setPasswordShow(!showPassword)}\r\n              className='btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2'\r\n              data-kt-password-meter-control='visibility'\r\n            >\r\n              {!showPassword ? (\r\n                <i className='bi bi-eye-slash fs-2'></i>\r\n              ) : (\r\n                <i className='bi bi-eye fs-2'></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n          <button\r\n            type='button'\r\n            className='btn btn-lg btn-light-primary w-50 p-0 fs-15'\r\n            onClick={() => {\r\n              setFieldValue(\r\n                'password',\r\n                Math.random()\r\n                  .toString(36)\r\n                  .slice(2)\r\n              )\r\n            }}\r\n          >\r\n            Generate Password\r\n          </button>\r\n        </div>\r\n        <PasswordStrengthBar password={values?.password} />\r\n        <div className='text-danger'>\r\n          <ErrorMessage name='password' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step1}\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport {useListView} from '../core/ListViewProvider'\r\n\r\ntype Props = {\r\n  values: any\r\n  setFieldValue: any\r\n}\r\n\r\nconst Step2: FC<Props> = ({values, setFieldValue}) => {\r\n  return (\r\n    <div className='w-100'>\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label required'>Account Number</label>\r\n        <Field name='bank.account_number' className='form-control mb-2' type='number' />\r\n        <div className='text-danger mt-2'>\r\n          <ErrorMessage name='bank.account_number' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='form-label required'>IFSC Code</label>\r\n\r\n          <Field\r\n            name='bank.ifsc_code'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter IFSC Code'}\r\n          ></Field>\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='bank.ifsc_code' />\r\n          </div>\r\n        </div>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Bank Name</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='bank.bank_name'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Bank Name'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='bank.bank_name' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='form-label required'>Branch Name</label>\r\n\r\n          <Field\r\n            name='bank.branch_name'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Branch Name'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='bank.branch_name' />\r\n          </div>\r\n        </div>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>State</span>\r\n          </label>\r\n\r\n          <Field name='bank.state' className='form-control mb-2' placeholder={'Enter State Name'} />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='bank.state' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {values?.bank?.id && (\r\n        <>\r\n          <div className='d-flex flex-wrap gap-5 mb-10'>\r\n            <div className='fv-row w-100 flex-md-root'>\r\n              <label className='form-label'>Verified At</label>\r\n\r\n              <Field\r\n                name='bank.verification.verified_at'\r\n                type={'date'}\r\n                className='form-control mb-2'\r\n                placeholder={'Enter Verified At'}\r\n              />\r\n              {/* <div className='text-danger mt-2'>\r\n                <ErrorMessage name='bank.verification.verified_at' />\r\n              </div> */}\r\n            </div>\r\n            <div className='fv-row w-100 flex-md-root'>\r\n              <label className='d-flex align-items-center form-label'>\r\n                <span className='form-label'>Verified By</span>\r\n              </label>\r\n\r\n              <Field\r\n                name='bank.verification.verified_by'\r\n                className='form-control mb-2'\r\n                placeholder={'Enter Verified By'}\r\n              />\r\n              {/* <div className='text-danger mt-2'>\r\n                <ErrorMessage name='bank.verification.verified_by' />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n          <div className='fv-row mb-10'>\r\n            <label className='form-label'>Status</label>\r\n\r\n            <Field\r\n              as='select'\r\n              name='bank.bank_status'\r\n              className='form-select mb-2'\r\n              data-control='select2'\r\n              data-hide-search='true'\r\n              data-placeholder='Select an option'\r\n            >\r\n              <option></option>\r\n              <option>Varified</option>\r\n              <option>Review</option>\r\n              <option>Pending</option>\r\n              <option>Error</option>\r\n            </Field>\r\n            {/* <div className='text-danger mt-2'>\r\n              <ErrorMessage name='bank.bank_status' />\r\n            </div> */}\r\n          </div>\r\n          <div className='fv-row mb-10'>\r\n            <label className='form-label'>Rejection Reason</label>\r\n            <Field\r\n              name='bank.reject_reason'\r\n              as='textarea'\r\n              rows={4}\r\n              className='form-control mb-2'\r\n              placeholder={'Enter Rejection Reason'}\r\n            />\r\n            {/* <div className='text-danger mt-2'>\r\n              <ErrorMessage name='bank.reject_reason' />\r\n            </div> */}\r\n          </div>\r\n          <label className='form-check form-check-sm form-check-custom me-5 me-lg-15'>\r\n            <Field className='form-check-input' type='checkbox' name='bank.verification.verified' />\r\n            <span className='form-check-label fw-bold'>Is Verified Bank Account</span>\r\n          </label>{' '}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step2}\r\n","import React, {FC, useEffect, useState} from 'react'\nimport {Field, ErrorMessage} from 'formik'\n\ntype Props = {\n  values: any\n  setFieldValue: any\n}\n\nconst Step3: FC<Props> = ({values, setFieldValue}) => {\n  return (\n    <div className='w-100'>\n      <div className='fv-row mb-10'>\n        <label className='form-label required'>Upi Id</label>\n        <Field name='upi.upi_id' className='form-control mb-2' />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='upi.upi_id' />\n        </div>\n      </div>\n\n      <div className='d-flex flex-wrap gap-5 mb-10'>\n        <div className='fv-row w-100 flex-md-root'>\n          <label className='form-label required'>Name</label>\n\n          <Field name='upi.name' className='form-control mb-2' placeholder={'Enter Full Name'} />\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='upi.name' />\n          </div>\n        </div>\n        <div className='fv-row w-100 flex-md-root'>\n          <label className='d-flex align-items-center form-label'>\n            <span className='required'>Father's Name</span>\n          </label>\n\n          <Field\n            name='upi.father_name'\n            className='form-control mb-2'\n            placeholder={'Enter Father Name'}\n          />\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='upi.father_name' />\n          </div>\n        </div>\n      </div>\n\n      {values?.upi?.id && (\n        <>\n          {' '}\n          <div className='d-flex flex-wrap gap-5 mb-10'>\n            <div className='fv-row w-100 flex-md-root'>\n              <label className='form-label'>Verified At</label>\n\n              <Field\n                name='upi.verification.verified_at'\n                type={'date'}\n                className='form-control mb-2'\n                placeholder={'Enter Verified At'}\n              />\n              {/* <div className='text-danger mt-2'>\n                <ErrorMessage name='upi.verification.verified_at' />\n              </div> */}\n            </div>\n            <div className='fv-row w-100 flex-md-root'>\n              <label className='d-flex align-items-center form-label'>\n                <span className=''>Verified By</span>\n              </label>\n\n              <Field\n                name='upi.verification.verified_by'\n                className='form-control mb-2'\n                placeholder={'Enter Verified By'}\n              />\n              {/* <div className='text-danger mt-2'>\n                <ErrorMessage name='upi.verification.verified_by' />\n              </div> */}\n            </div>\n          </div>\n          <div className='fv-row mb-10'>\n            <label className='form-label'>Status</label>\n\n            <Field\n              as='select'\n              name='upi.upi_status'\n              className='form-select mb-2'\n              data-control='select2'\n              data-hide-search='true'\n              data-placeholder='Select an option'\n            >\n              {<option></option>}\n              <option>Varified</option>\n              <option>Review</option>\n              <option>Pending</option>\n              <option>Error</option>\n            </Field>\n            {/* <div className='text-danger mt-2'>\n              <ErrorMessage name='upi.upi_status' />\n            </div> */}\n          </div>\n          <div className='fv-row mb-10'>\n            <label className='form-label'>Rejection Reason</label>\n            <Field\n              name='upi.reject_reason'\n              as='textarea'\n              rows={4}\n              className='form-control mb-2'\n              placeholder={'Enter Rejection Reason'}\n            />\n            {/* <div className='text-danger mt-2'>\n              <ErrorMessage name='upi.reject_reason' />\n            </div> */}\n          </div>\n          <label className='form-check form-check-sm form-check-custom me-5 me-lg-15'>\n            <Field className='form-check-input' type='checkbox' name='upi.verification.verified' />\n            <span className='form-check-label fw-bold'>Is Verified UPI-Id </span>\n          </label>{' '}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport {Step3}\n","import React, {FC, useEffect, useState} from 'react'\nimport {Field, ErrorMessage} from 'formik'\n\ntype Props = {\n  values: any\n  setFieldValue: any\n}\n\nconst Step4: FC<Props> = ({values, setFieldValue}) => {\n  useEffect(() => {\n    setFieldValue('pan.dob', values.pan.dob != '' ? values?.pan?.dob : values.dob)\n  }, [])\n\n  return (\n    <div className='w-100'>\n      <div className='fv-row mb-10'>\n        <label className='form-label required'>Name</label>\n        <Field name='pan.name' className='form-control mb-2' />\n        <div className='text-danger mt-2'>\n          <ErrorMessage name='pan.name' />\n        </div>\n      </div>\n\n      <div className='d-flex flex-wrap gap-5 mb-10'>\n        <div className='fv-row w-100 flex-md-root'>\n          <label className='form-label required'>Pan Number</label>\n\n          <Field\n            name='pan.pannumber'\n            className='form-control mb-2'\n            placeholder={'Enter Pan Number'}\n          />\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='pan.pannumber' />\n          </div>\n        </div>\n        <div className='fv-row w-100 flex-md-root'>\n          <label className='d-flex align-items-center form-label'>\n            <span className='required'>DOB</span>\n          </label>\n\n          <Field\n            name='pan.dob'\n            type={'date'}\n            className='form-control mb-2'\n            placeholder={'Enter DOB'}\n          />\n          <div className='text-danger mt-2'>\n            <ErrorMessage name='pan.dob' />\n          </div>\n        </div>\n      </div>\n\n      {values?.pan?.id && (\n        <>\n          <div className='d-flex flex-wrap gap-5 mb-10'>\n            <div className='fv-row w-100 flex-md-root'>\n              <label className='form-label'>Verified At</label>\n\n              <Field\n                name='pan.verification.verified_at'\n                type={'date'}\n                className='form-control mb-2'\n                placeholder={'Enter Verified At'}\n              />\n              {/* <div className='text-danger mt-2'>\n                <ErrorMessage name='pan.verification.verified_at' />\n              </div> */}\n            </div>\n            <div className='fv-row w-100 flex-md-root'>\n              <label className='d-flex align-items-center form-label'>\n                <span className='form-label'>Verified By</span>\n              </label>\n\n              <Field\n                name='pan.verification.verified_by'\n                className='form-control mb-2'\n                placeholder={'Enter Verified By'}\n              />\n              {/* <div className='text-danger mt-2'>\n                <ErrorMessage name='pan.verification.verified_by' />\n              </div> */}\n            </div>\n          </div>\n\n          <div className='fv-row mb-10'>\n            <label className='form-label'>Status</label>\n\n            <Field\n              as='select'\n              name='pan.pan_status'\n              className='form-select mb-2'\n              data-control='select2'\n              data-hide-search='true'\n              data-placeholder='Select an option'\n            >\n              {<option></option>}\n              <option>Varified</option>\n              <option>Review</option>\n              <option>Pending</option>\n              <option>Error</option>\n            </Field>\n            {/* <div className='text-danger mt-2'>\n              <ErrorMessage name='pan.pan_status' />\n            </div> */}\n          </div>\n\n          <div className='fv-row mb-10'>\n            <label className='form-label'>Rejection Reason</label>\n            <Field\n              name='pan.reject_reason'\n              as='textarea'\n              rows={4}\n              className='form-control mb-2'\n              placeholder={'Enter Rejection Reason'}\n            />\n            {/* <div className='text-danger mt-2'>\n              <ErrorMessage name='pan.reject_reason' />\n            </div> */}\n          </div>\n\n          <label className='form-check form-check-sm form-check-custom me-5 me-lg-15'>\n            <Field className='form-check-input' type='checkbox' name='pan.verification.verified' />\n            <span className='form-check-label fw-bold'>Is PAN Card Verified </span>\n          </label>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport {Step4}\n","import {FC, useEffect, useRef, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {Form, Formik, FormikValues} from 'formik'\r\nimport {isNotEmpty, KTSVG} from '../../../../../_metronic/helpers'\r\nimport {createAccountSchemas, initialUser, User} from '../core/_models'\r\nimport {useListView} from '../core/ListViewProvider'\r\nimport {UsersListLoading} from '../components/loading/UsersListLoading'\r\nimport {createUser, updateBank, updatePan, updateUpi, updateUser} from '../core/_requests'\r\nimport {useQueryResponse} from '../core/QueryResponseProvider'\r\nimport Swal from 'sweetalert2'\r\nimport {StepperComponent} from '../../../../../_metronic/assets/ts/components'\r\nimport {Step1} from '../steps/Step1'\r\nimport {Step2} from '../steps/Step2'\r\nimport {Step3} from '../steps/step3'\r\nimport {Step4} from '../steps/step4'\r\n\r\ntype Props = {\r\n  isUserLoading: boolean\r\n  role: User\r\n}\r\n\r\nconst UserEditModalForm: FC<Props> = ({role, isUserLoading}) => {\r\n  const stepperRef = useRef<HTMLDivElement | null>(null)\r\n  const stepper = useRef<StepperComponent | null>(null)\r\n  const {setItemIdForUpdate} = useListView()\r\n  const {refetch} = useQueryResponse()\r\n  const [isSubmitButton, setSubmitButton] = useState(false)\r\n  const [currentSchema, setCurrentSchema] = useState(createAccountSchemas[0])\r\n  const [roleForEdit, setRoleForEdit] = useState<User>({\r\n    ...role,\r\n    firstname: role.firstname || initialUser.firstname,\r\n    lastname: role.lastname || initialUser.lastname,\r\n    fathername: role.fathername || initialUser.fathername,\r\n    email: role.email || initialUser.email,\r\n    email_verified: role.email_verified || initialUser.email_verified,\r\n    password: role.password || initialUser.password,\r\n    phone: role.phone || initialUser.phone,\r\n    phone_verified: role.phone_verified || initialUser.phone_verified,\r\n    profile_image: role.profile_image || initialUser.profile_image,\r\n    dob: role.dob || initialUser.dob,\r\n    gender: role.gender || initialUser.gender,\r\n    locale: role.locale || initialUser.locale,\r\n    touchId_enable: role.touchId_enable || initialUser.touchId_enable,\r\n    address: role.address || initialUser.address,\r\n    referral: role.referral || initialUser.referral,\r\n    device: role.device || initialUser.device,\r\n    bank: role.bank || initialUser.bank,\r\n    upi: role.upi || initialUser.upi,\r\n    pan: role.pan || initialUser.pan,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!stepperRef.current) {\r\n      return\r\n    }\r\n\r\n    loadStepper()\r\n  }, [stepperRef])\r\n\r\n  const cancel = (withRefresh?: boolean) => {\r\n    if (withRefresh) {\r\n      refetch()\r\n    }\r\n    setItemIdForUpdate(undefined)\r\n  }\r\n\r\n  const loadStepper = () => {\r\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\r\n  }\r\n\r\n  const prevStep = () => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n\r\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\r\n\r\n    stepper.current.goPrev()\r\n\r\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex - 1])\r\n  }\r\n\r\n  const submitStep = async (values: User, actions: FormikValues) => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\r\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex])\r\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\r\n      if (stepper.current.currentStepIndex == 1) {\r\n        const user = await updateUser(values)\r\n        actions.setFieldValue('id', user?.id)\r\n        actions.setFieldValue('address', user?.address)\r\n        actions.setFieldValue('device', user?.device)\r\n      } else if (stepper.current.currentStepIndex == 2) {\r\n        const bank = await updateBank(values.bank, values.id)\r\n        actions.setFieldValue('bank', bank)\r\n      } else if (stepper.current.currentStepIndex == 3) {\r\n        const upi = await updateUpi(values.upi, values.id)\r\n        actions.setFieldValue('upi', upi)\r\n      }\r\n      stepper.current.goNext()\r\n    } else {\r\n      try {\r\n        await updatePan(values.pan, values.id)\r\n      } catch (ex) {\r\n        console.error(ex)\r\n      } finally {\r\n        // setSubmitting(true)\r\n        actions.resetForm()\r\n        cancel(true)\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: `User ${values.id ? 'Updated' : 'Created'}!`,\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={stepperRef}\r\n        className='stepper stepper-links d-flex flex-column'\r\n        id='kt_create_account_stepper'\r\n      >\r\n        <div className='stepper-nav mb-5'>\r\n          <div className='stepper-item current' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>User Details</h3>\r\n          </div>\r\n\r\n          <div className='stepper-item' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>Bank Details</h3>\r\n          </div>\r\n\r\n          <div className='stepper-item' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>UPI Details</h3>\r\n          </div>\r\n\r\n          <div className='stepper-item' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>PAN Card Details</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <Formik\r\n          validationSchema={currentSchema}\r\n          initialValues={roleForEdit}\r\n          onSubmit={submitStep}\r\n          validateOnChange={false}\r\n        >\r\n          {({setFieldValue, values, touched, setFieldError, errors}) => (\r\n            <Form className='mx-auto mw-700px w-100 pt-5 pb-10' id='kt_create_account_form'>\r\n              <div className='current' data-kt-stepper-element='content'>\r\n                <Step1\r\n                  setFieldValue={setFieldValue}\r\n                  values={values}\r\n                  touched={touched}\r\n                  setFieldError={setFieldError}\r\n                  errors={errors}\r\n                />\r\n              </div>\r\n\r\n              <div data-kt-stepper-element='content'>\r\n                <Step2 setFieldValue={setFieldValue} values={values} />\r\n              </div>\r\n\r\n              <div data-kt-stepper-element='content'>\r\n                <Step3 setFieldValue={setFieldValue} values={values} />\r\n              </div>\r\n\r\n              <div data-kt-stepper-element='content'>\r\n                <Step4 setFieldValue={setFieldValue} values={values} />\r\n              </div>\r\n\r\n              <div className='d-flex flex-stack pt-15'>\r\n                <div className='mr-2'>\r\n                  <button\r\n                    onClick={prevStep}\r\n                    type='button'\r\n                    className='btn btn-lg btn-light-primary me-3'\r\n                    data-kt-stepper-action='previous'\r\n                  >\r\n                    <KTSVG\r\n                      path='/media/icons/duotune/arrows/arr063.svg'\r\n                      className='svg-icon-4 me-1'\r\n                    />\r\n                    Back\r\n                  </button>\r\n                </div>\r\n\r\n                <div>\r\n                  <button type='submit' className='btn btn-lg btn-primary me-3'>\r\n                    <span className='indicator-label'>\r\n                      {!isSubmitButton && 'Continue'}\r\n                      {isSubmitButton && 'Submit'}\r\n                      <KTSVG\r\n                        path='/media/icons/duotune/arrows/arr064.svg'\r\n                        className='svg-icon-3 ms-2 me-0'\r\n                      />\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      {isUserLoading && <UsersListLoading />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserEditModalForm}\r\n","import {useQuery} from 'react-query'\r\nimport {UserEditModalForm} from './UserEditModalForm'\r\nimport {isNotEmpty, QUERIES} from '../../../../../_metronic/helpers'\r\nimport {useListView} from '../core/ListViewProvider'\r\nimport {getUserById} from '../core/_requests'\r\n\r\nconst UserEditModalFormWrapper = () => {\r\n  const {itemIdForUpdate, setItemIdForUpdate} = useListView()\r\n  const enabledQuery: boolean = isNotEmpty(itemIdForUpdate)\r\n  const {isLoading, data: user, error} = useQuery(\r\n    `${QUERIES.USERS_LIST}-user-${itemIdForUpdate}`,\r\n    () => {\r\n      return getUserById(itemIdForUpdate)\r\n    },\r\n    {\r\n      cacheTime: 0,\r\n      enabled: enabledQuery,\r\n      onError: (err) => {\r\n        setItemIdForUpdate(undefined)\r\n        console.error(err)\r\n      },\r\n    }\r\n  )\r\n\r\n  if (!itemIdForUpdate) {\r\n    return <UserEditModalForm isUserLoading={isLoading} role={{id: undefined}} />\r\n  }\r\n\r\n  if (!isLoading && !error && user) {\r\n    return <UserEditModalForm isUserLoading={isLoading} role={user} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport {UserEditModalFormWrapper}\r\n","import {useEffect} from 'react'\r\nimport {UserEditModalHeader} from './UserEditModalHeader'\r\nimport {UserEditModalFormWrapper} from './UserEditModalFormWrapper'\r\n\r\nconst UserEditModal = () => {\r\n  useEffect(() => {\r\n    document.body.classList.add('modal-open')\r\n    return () => {\r\n      document.body.classList.remove('modal-open')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='modal fade show d-block'\r\n        id='kt_modal_add_user'\r\n        role='dialog'\r\n        tabIndex={-1}\r\n        aria-modal='true'\r\n      >\r\n        {/* begin::Modal dialog */}\r\n        <div className='modal-dialog modal-dialog-centered mw-850px'>\r\n          {/* begin::Modal content */}\r\n          <div className='modal-content'>\r\n            <UserEditModalHeader />\r\n            {/* begin::Modal body */}\r\n            <div className='modal-body scroll-y mx-5 mx-xl-15 my-7'>\r\n              <UserEditModalFormWrapper />\r\n            </div>\r\n            {/* end::Modal body */}\r\n          </div>\r\n          {/* end::Modal content */}\r\n        </div>\r\n        {/* end::Modal dialog */}\r\n      </div>\r\n      {/* begin::Modal Backdrop */}\r\n      <div className='modal-backdrop fade show'></div>\r\n      {/* end::Modal Backdrop */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserEditModal}\r\n","import {ListViewProvider, useListView} from './core/ListViewProvider'\r\nimport {QueryRequestProvider} from './core/QueryRequestProvider'\r\nimport {QueryResponseProvider} from './core/QueryResponseProvider'\r\nimport {UsersListHeader} from './components/header/UsersListHeader'\r\nimport {UsersTable} from './table/UsersTable'\r\nimport {UserEditModal} from './user-edit-modal/UserEditModal'\r\nimport {KTCard} from '../../../../_metronic/helpers'\r\n\r\nconst UsersList = () => {\r\n  const {itemIdForUpdate} = useListView()\r\n  return (\r\n    <>\r\n      <KTCard>\r\n        <UsersListHeader />\r\n        <UsersTable />\r\n      </KTCard>\r\n      {itemIdForUpdate !== undefined && <UserEditModal />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst UsersListWrapper = () => (\r\n  <QueryRequestProvider>\r\n    <QueryResponseProvider>\r\n      <ListViewProvider>\r\n        <UsersList />\r\n      </ListViewProvider>\r\n    </QueryResponseProvider>\r\n  </QueryRequestProvider>\r\n)\r\n\r\nexport {UsersListWrapper}\r\n","import {Route, Routes, Outlet, Navigate} from 'react-router-dom'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {UsersListWrapper} from './users-list/UsersList'\r\n\r\nconst usersBreadcrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'User Management',\r\n    path: '/users',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst UsersPage = () => {\r\n  return (\r\n    // <Routes>\r\n    //   <Route element={<Outlet />}>\r\n    //     <Route\r\n    //       path='users'\r\n    //       element={\r\n    <>\r\n      <PageTitle breadcrumbs={usersBreadcrumbs}>Users list</PageTitle>\r\n      <UsersListWrapper />\r\n    </>\r\n    //       }\r\n    //     />\r\n    //   </Route>\r\n    //   <Route index element={<Navigate to='/apps/user-management/users' />} />\r\n    // </Routes>\r\n  )\r\n}\r\n\r\nexport default UsersPage\r\n"],"names":["API_URL","USER_URL","updateUser","user","axios","then","response","data","updateBank","id","updateUpi","updatePan","QueryRequestContext","createContext","initialQueryRequest","QueryRequestProvider","children","useState","state","setState","Provider","value","updateState","updates","updatedState","useQueryRequest","useContext","QueryResponseContext","createResponseContext","initialQueryResponse","QueryResponseProvider","stringifyRequestQuery","query","setQuery","updatedQuery","useMemo","useEffect","useQuery","QUERIES","d","getUsers","cacheTime","keepPreviousData","refetchOnWindowFocus","isFetching","refetch","isLoading","useQueryResponse","useQueryResponseData","useQueryResponseLoading","ListViewContext","initialListView","ListViewProvider","selected","setSelected","itemIdForUpdate","setItemIdForUpdate","disabled","calculatedGroupingIsDisabled","isAllSelected","calculateIsAllDataSelected","onSelect","groupingOnSelect","onSelectAll","groupingOnSelectAll","clearSelected","useListView","ExportReactCSV","csvData","fileName","type","className","path","CSVLink","filename","UsersListFilter","role","setRole","lastLogin","setLastLogin","MenuComponent","onChange","e","target","onClick","filter","last_login","initialQueryState","undefined","UsersListToolbar","users","UsersListGrouping","queryClient","useQueryClient","deleteSelectedItems","useMutation","userIds","requests","map","deleteSelectedUsers","onSuccess","invalidateQueries","length","mutateAsync","UsersListSearchComponent","searchTerm","setSearchTerm","debouncedSearchTerm","useDebounce","search","placeholder","UsersListHeader","CustomHeaderColumn","column","Header","getHeaderProps","render","CustomRow","row","getRowProps","cells","cell","getCellProps","clsx","UserInfoCell","openEditModal","style","cursor","profile_image","src","alt","firstname","charAt","lastname","email","UserLastLoginCell","UserTwoStepsCell","two_steps","UserActionsCell","deleteItem","userId","href","UserSelectionCell","isSelected","includes","checked","UserCustomHeader","title","tableProps","isSelectedForSorting","sort","order","UserSelectionHeader","usersColumns","props","Cell","index","accessor","phone","dob","UsersListLoading","borderRadius","boxShadow","backgroundColor","color","fontWeight","margin","width","padding","top","left","position","textAlign","UsersListPagination","pagination","defaultPaginationState","links","payload","useQueryResponsePagination","link","active","page","previous","label","next","items_per_page","dangerouslySetInnerHTML","__html","UsersTable","columns","useTable","getTableProps","getTableBodyProps","headers","rows","prepareRow","i","colSpan","UserEditModalHeader","createAccountSchemas","Yup","shape","required","matches","password","address","city","district","device","of","device_id","device_token","touchId_enable","bank","account_number","ifsc_code","bank_name","branch_name","upi","upi_id","name","father_name","pan","pannumber","initialUser","fathername","email_verified","phone_verified","gender","locale","referral","Step1","setFieldValue","values","touched","errors","setFieldError","console","log","uploadImage","file","currentTarget","files","fd","FormData","append","catch","err","showPassword","setPasswordShow","toAbsoluteUrl","accept","as","flexDirection","display","Math","random","toString","slice","Step2","Step3","Step4","UserEditModalForm","isUserLoading","stepperRef","useRef","stepper","isSubmitButton","setSubmitButton","currentSchema","setCurrentSchema","roleForEdit","current","loadStepper","StepperComponent","prevStep","currentStepIndex","totatStepsNumber","goPrev","submitStep","actions","goNext","error","resetForm","Swal","text","icon","confirmButtonText","ref","validationSchema","initialValues","onSubmit","validateOnChange","UserEditModalFormWrapper","enabledQuery","isNotEmpty","enabled","onError","UserEditModal","document","body","classList","add","remove","tabIndex","UsersList","UsersListWrapper","usersBreadcrumbs","isSeparator","isActive","breadcrumbs"],"sourceRoot":""}