{"version":3,"file":"static/js/454.29b7b243.chunk.js","mappings":"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","sources":["app/pages/staff-management/users-list/core/QueryRequestProvider.tsx","app/pages/staff-management/users-list/core/QueryResponseProvider.tsx","app/pages/staff-management/users-list/core/ListViewProvider.tsx","app/pages/staff-management/users-list/components/header/UsersListFilter.tsx","app/pages/staff-management/users-list/components/Export.js","app/pages/staff-management/users-list/components/header/UserListToolbar.tsx","app/pages/staff-management/users-list/components/header/UsersListGrouping.tsx","app/pages/staff-management/users-list/components/header/UsersListSearchComponent.tsx","app/pages/staff-management/users-list/components/header/PermissionListHeader.tsx","app/pages/staff-management/users-list/table/columns/CustomHeaderColumn.tsx","app/pages/staff-management/users-list/table/columns/CustomRow.tsx","app/pages/staff-management/users-list/table/columns/UserInfoCell.tsx","app/pages/staff-management/users-list/table/columns/PhoneNumber.tsx","app/pages/staff-management/users-list/table/columns/admin.tsx","app/pages/staff-management/users-list/table/columns/UserActionsCell.tsx","app/pages/staff-management/users-list/table/columns/UserSelectionCell.tsx","app/pages/staff-management/users-list/table/columns/UserCustomHeader.tsx","app/pages/staff-management/users-list/table/columns/UserSelectionHeader.tsx","app/pages/staff-management/users-list/table/columns/Email.tsx","app/pages/staff-management/users-list/table/columns/_columns.tsx","app/pages/staff-management/users-list/components/loading/UsersListLoading.tsx","app/pages/staff-management/users-list/components/pagination/UsersListPagination.tsx","app/pages/staff-management/users-list/table/UsersTable.tsx","app/pages/staff-management/users-list/user-edit-modal/UserEditModalHeader.tsx","app/pages/staff-management/users-list/core/_models.ts","app/pages/staff-management/users-list/steps/Step1.tsx","app/pages/staff-management/users-list/steps/Step2.tsx","app/pages/staff-management/users-list/user-edit-modal/UserEditModalForm.tsx","app/pages/staff-management/users-list/user-edit-modal/UserEditModalFormWrapper.tsx","app/pages/staff-management/users-list/user-edit-modal/UserEditModal.tsx","app/pages/staff-management/users-list/PermissionList.tsx","app/pages/staff-management/StaffPage.tsx","app/pages/staff-management/users-list/core/_requests.ts"],"sourcesContent":["import {FC, useState, createContext, useContext} from 'react'\r\nimport {\r\n  QueryState,\r\n  QueryRequestContextProps,\r\n  initialQueryRequest,\r\n} from '../../../../../_metronic/helpers'\r\n\r\nconst QueryRequestContext = createContext<QueryRequestContextProps>(initialQueryRequest)\r\n\r\nconst QueryRequestProvider: FC = ({children}) => {\r\n  const [state, setState] = useState<QueryState>(initialQueryRequest.state)\r\n\r\n  const updateState = (updates: Partial<QueryState>) => {\r\n    const updatedState = {...state, ...updates} as QueryState\r\n    setState(updatedState)\r\n  }\r\n\r\n  return (\r\n    <QueryRequestContext.Provider value={{state, updateState}}>\r\n      {children}\r\n    </QueryRequestContext.Provider>\r\n  )\r\n}\r\n\r\nconst useQueryRequest = () => useContext(QueryRequestContext)\r\nexport {QueryRequestProvider, useQueryRequest}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {FC, useContext, useState, useEffect, useMemo} from 'react'\r\nimport {useQuery} from 'react-query'\r\nimport {\r\n  createResponseContext,\r\n  initialQueryResponse,\r\n  initialQueryState,\r\n  PaginationState,\r\n  QUERIES,\r\n  stringifyRequestQuery,\r\n} from '../../../../../_metronic/helpers'\r\nimport {getUsers} from './_requests'\r\nimport {Role} from './_models'\r\nimport {useQueryRequest} from './QueryRequestProvider'\r\n\r\nconst QueryResponseContext = createResponseContext<Role>(initialQueryResponse)\r\nconst QueryResponseProvider: FC = ({children}) => {\r\n  const {state} = useQueryRequest()\r\n  const [query, setQuery] = useState<string>(stringifyRequestQuery(state))\r\n  const updatedQuery = useMemo(() => stringifyRequestQuery(state), [state])\r\n\r\n  useEffect(() => {\r\n    if (query !== updatedQuery) {\r\n      setQuery(updatedQuery)\r\n    }\r\n  }, [updatedQuery])\r\n\r\n  const {\r\n    isFetching,\r\n    refetch,\r\n    data: response,\r\n  } = useQuery(\r\n    `${QUERIES.USERS_LIST}-${query}`,\r\n    () => {\r\n      return getUsers(query)\r\n    },\r\n    {cacheTime: 0, keepPreviousData: true, refetchOnWindowFocus: false}\r\n  )\r\n\r\n  return (\r\n    <QueryResponseContext.Provider value={{isLoading: isFetching, refetch, response, query}}>\r\n      {children}\r\n    </QueryResponseContext.Provider>\r\n  )\r\n}\r\n\r\nconst useQueryResponse = () => useContext(QueryResponseContext)\r\n\r\nconst useQueryResponseData = () => {\r\n  const {response} = useQueryResponse()\r\n  if (!response) {\r\n    return []\r\n  }\r\n\r\n  return response?.data || []\r\n}\r\n\r\nconst useQueryResponsePagination = () => {\r\n  const defaultPaginationState: PaginationState = {\r\n    links: [],\r\n    ...initialQueryState,\r\n  }\r\n\r\n  const {response} = useQueryResponse()\r\n  if (!response || !response.payload || !response.payload.pagination) {\r\n    return defaultPaginationState\r\n  }\r\n\r\n  return response.payload.pagination\r\n}\r\n\r\nconst useQueryResponseLoading = (): boolean => {\r\n  const {isLoading} = useQueryResponse()\r\n  return isLoading\r\n}\r\n\r\nexport {\r\n  QueryResponseProvider,\r\n  useQueryResponse,\r\n  useQueryResponseData,\r\n  useQueryResponsePagination,\r\n  useQueryResponseLoading,\r\n}\r\n","import {FC, useState, createContext, useContext, useMemo} from 'react'\r\nimport {\r\n  ID,\r\n  calculatedGroupingIsDisabled,\r\n  calculateIsAllDataSelected,\r\n  groupingOnSelect,\r\n  initialListView,\r\n  ListViewContextProps,\r\n  groupingOnSelectAll,\r\n} from '../../../../../_metronic/helpers'\r\nimport {useQueryResponse, useQueryResponseData} from './QueryResponseProvider'\r\n\r\nconst ListViewContext = createContext<ListViewContextProps>(initialListView)\r\n\r\nconst ListViewProvider: FC = ({children}) => {\r\n  const [selected, setSelected] = useState<Array<ID>>(initialListView.selected)\r\n  const [itemIdForUpdate, setItemIdForUpdate] = useState<ID>(initialListView.itemIdForUpdate)\r\n  const {isLoading} = useQueryResponse()\r\n  const data = useQueryResponseData()\r\n  const disabled = useMemo(() => calculatedGroupingIsDisabled(isLoading, data), [isLoading, data])\r\n  const isAllSelected = useMemo(() => calculateIsAllDataSelected(data, selected), [data, selected])\r\n\r\n  return (\r\n    <ListViewContext.Provider\r\n      value={{\r\n        selected,\r\n        itemIdForUpdate,\r\n        setItemIdForUpdate,\r\n        disabled,\r\n        isAllSelected,\r\n        onSelect: (id: ID) => {\r\n          groupingOnSelect(id, selected, setSelected)\r\n        },\r\n        onSelectAll: () => {\r\n          groupingOnSelectAll(isAllSelected, setSelected, data)\r\n        },\r\n        clearSelected: () => {\r\n          setSelected([])\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </ListViewContext.Provider>\r\n  )\r\n}\r\n\r\nconst useListView = () => useContext(ListViewContext)\r\n\r\nexport {ListViewProvider, useListView}\r\n","import {useEffect, useState} from 'react'\r\nimport {MenuComponent} from '../../../../../../_metronic/assets/ts/components'\r\nimport {initialQueryState, KTSVG} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\n\r\nconst UsersListFilter = () => {\r\n  const {updateState} = useQueryRequest()\r\n  const {isLoading} = useQueryResponse()\r\n  const [role, setRole] = useState<string | undefined>()\r\n  const [lastLogin, setLastLogin] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    MenuComponent.reinitialization()\r\n  }, [])\r\n\r\n  const resetData = () => {\r\n    updateState({filter: undefined, ...initialQueryState})\r\n  }\r\n\r\n  const filterData = () => {\r\n    updateState({\r\n      filter: {role, last_login: lastLogin},\r\n      ...initialQueryState,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* begin::Filter Button */}\r\n      <button\r\n        disabled={isLoading}\r\n        type='button'\r\n        className='btn btn-light-primary me-3'\r\n        data-kt-menu-trigger='click'\r\n        data-kt-menu-placement='bottom-end'\r\n      >\r\n        <KTSVG path='/media/icons/duotune/general/gen031.svg' className='svg-icon-2' />\r\n        Filter\r\n      </button>\r\n      {/* end::Filter Button */}\r\n      {/* begin::SubMenu */}\r\n      <div className='menu menu-sub menu-sub-dropdown w-300px w-md-325px' data-kt-menu='true'>\r\n        {/* begin::Header */}\r\n        <div className='px-7 py-5'>\r\n          <div className='fs-5 text-dark fw-bolder'>Filter Options</div>\r\n        </div>\r\n        {/* end::Header */}\r\n\r\n        {/* begin::Separator */}\r\n        <div className='separator border-gray-200'></div>\r\n        {/* end::Separator */}\r\n\r\n        {/* begin::Content */}\r\n        <div className='px-7 py-5' data-kt-user-table-filter='form'>\r\n          {/* begin::Input group */}\r\n          <div className='mb-10'>\r\n            <label className='form-label fs-6 fw-bold'>Role:</label>\r\n            <select\r\n              className='form-select form-select-solid fw-bolder'\r\n              data-kt-select2='true'\r\n              data-placeholder='Select option'\r\n              data-allow-clear='true'\r\n              data-kt-user-table-filter='role'\r\n              data-hide-search='true'\r\n              onChange={(e) => setRole(e.target.value)}\r\n              value={role}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Administrator'>Administrator</option>\r\n              <option value='Analyst'>Analyst</option>\r\n              <option value='Developer'>Developer</option>\r\n              <option value='Support'>Support</option>\r\n              <option value='Trial'>Trial</option>\r\n            </select>\r\n          </div>\r\n          {/* end::Input group */}\r\n\r\n          {/* begin::Input group */}\r\n          <div className='mb-10'>\r\n            <label className='form-label fs-6 fw-bold'>Last login:</label>\r\n            <select\r\n              className='form-select form-select-solid fw-bolder'\r\n              data-kt-select2='true'\r\n              data-placeholder='Select option'\r\n              data-allow-clear='true'\r\n              data-kt-user-table-filter='two-step'\r\n              data-hide-search='true'\r\n              onChange={(e) => setLastLogin(e.target.value)}\r\n              value={lastLogin}\r\n            >\r\n              <option value=''></option>\r\n              <option value='Yesterday'>Yesterday</option>\r\n              <option value='20 mins ago'>20 mins ago</option>\r\n              <option value='5 hours ago'>5 hours ago</option>\r\n              <option value='2 days ago'>2 days ago</option>\r\n            </select>\r\n          </div>\r\n          {/* end::Input group */}\r\n\r\n          {/* begin::Actions */}\r\n          <div className='d-flex justify-content-end'>\r\n            <button\r\n              type='button'\r\n              disabled={isLoading}\r\n              onClick={filterData}\r\n              className='btn btn-light btn-active-light-primary fw-bold me-2 px-6'\r\n              data-kt-menu-dismiss='true'\r\n              data-kt-user-table-filter='reset'\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              disabled={isLoading}\r\n              type='button'\r\n              onClick={resetData}\r\n              className='btn btn-primary fw-bold px-6'\r\n              data-kt-menu-dismiss='true'\r\n              data-kt-user-table-filter='filter'\r\n            >\r\n              Apply\r\n            </button>\r\n          </div>\r\n          {/* end::Actions */}\r\n        </div>\r\n        {/* end::Content */}\r\n      </div>\r\n      {/* end::SubMenu */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UsersListFilter}\r\n","import React from 'react'\nimport { CSVLink } from 'react-csv'\nimport {KTSVG} from '../../../../../_metronic/helpers'\n\nexport const ExportReactCSV = ({ csvData, fileName }) => {\n    return (\n        <button type='button' className='btn btn-light-primary me-3'>\n            <KTSVG path='/media/icons/duotune/arrows/arr078.svg' className='svg-icon-2' />\n            <CSVLink data={csvData} filename={fileName}>Export</CSVLink>\n        </button>\n\n    )\n}","import {KTSVG} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {UsersListFilter} from './UsersListFilter'\r\nimport {useQueryResponseData, useQueryResponseLoading} from '../../core/QueryResponseProvider'\r\nimport {ExportReactCSV} from '../Export'\r\n\r\nconst UsersListToolbar = () => {\r\n  const {setItemIdForUpdate} = useListView()\r\n  const users = useQueryResponseData()\r\n  const openAddUserModal = () => {\r\n    setItemIdForUpdate(null)\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end' data-kt-user-table-toolbar='base'>\r\n      <UsersListFilter />\r\n\r\n      <ExportReactCSV csvData={users} fileName={'staff'} />\r\n      \r\n      <button type='button' className='btn btn-primary' onClick={openAddUserModal}>\r\n        <KTSVG path='/media/icons/duotune/arrows/arr075.svg' className='svg-icon-2' />\r\n        Add Staff\r\n      </button>\r\n      {/* end::Add user */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListToolbar}\r\n","import {useQueryClient, useMutation} from 'react-query'\r\nimport Swal from 'sweetalert2'\r\nimport {QUERIES} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\nimport {deleteSelectedUsers} from '../../core/_requests'\r\n\r\nconst UsersListGrouping = () => {\r\n  const {selected, clearSelected} = useListView()\r\n  const queryClient = useQueryClient()\r\n  const {query} = useQueryResponse()\r\n\r\n  const deleteSelectedItems = useMutation(() => deleteSelectedUsers(selected), {\r\n    // 💡 response of the mutation is passed to onSuccess\r\n    onSuccess: () => {\r\n      // ✅ update detail view directly\r\n      queryClient.invalidateQueries([`${QUERIES.USERS_LIST}-${query}`])\r\n      clearSelected()\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className='d-flex justify-content-end align-items-center'>\r\n      <div className='fw-bolder me-5'>\r\n        <span className='me-2'>{selected.length}</span> Selected\r\n      </div>\r\n\r\n      <button\r\n        type='button'\r\n        className='btn btn-danger'\r\n        onClick={async () =>\r\n          {\r\n            Swal.fire({\r\n              title: 'Are you sure?',\r\n              text: \"You won't be able to revert this!\",\r\n              icon: 'warning',\r\n              showCancelButton: true,\r\n              confirmButtonColor: '#3085d6',\r\n              cancelButtonColor: '#d33',\r\n              confirmButtonText: 'Yes, delete it!',\r\n            }).then(async (result) => {\r\n              /* Read more about isConfirmed, isDenied below */\r\n              if (result.isConfirmed) {\r\n                await deleteSelectedItems.mutateAsync()\r\n              }\r\n            })\r\n          }}\r\n      >\r\n        Delete Selected\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListGrouping}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {useState, useEffect} from 'react'\r\nimport {initialQueryState, KTSVG, useDebounce} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\n\r\nconst UsersListSearchComponent = () => {\r\n  const {updateState} = useQueryRequest()\r\n  const [searchTerm, setSearchTerm] = useState<string>('')\r\n  // Debounce search term so that it only gives us latest value ...\r\n  // ... if searchTerm has not been updated within last 500ms.\r\n  // The goal is to only have the API call fire when user stops typing ...\r\n  // ... so that we aren't hitting our API rapidly.\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 150)\r\n  console.log(debouncedSearchTerm, \"debounceSearchTerm\");\r\n  // Effect for API call\r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm !== undefined && searchTerm !== undefined) {\r\n        updateState({search: debouncedSearchTerm, ...initialQueryState})\r\n      }\r\n    },\r\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n    // More details about useDebounce: https://usehooks.com/useDebounce/\r\n  )\r\n\r\n  return (\r\n    <div className='card-title'>\r\n      {/* begin::Search */}\r\n      <div className='d-flex align-items-center position-relative my-1'>\r\n        <KTSVG\r\n          path='/media/icons/duotune/general/gen021.svg'\r\n          className='svg-icon-1 position-absolute ms-6'\r\n        />\r\n        <input\r\n          type='text'\r\n          data-kt-user-table-filter='search'\r\n          className='form-control form-control-solid w-250px ps-14'\r\n          placeholder='Search Staff'\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n      {/* end::Search */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListSearchComponent}\r\n","import {useListView} from '../../core/ListViewProvider'\r\nimport {UsersListToolbar} from './UserListToolbar'\r\nimport {UsersListGrouping} from './UsersListGrouping'\r\nimport {UsersListSearchComponent} from './UsersListSearchComponent'\r\n\r\nconst PermissionListHeader = () => {\r\n  const {selected} = useListView()\r\n  return (\r\n    <div className='card-header border-0 pt-6'>\r\n      <UsersListSearchComponent />\r\n      {/* begin::Card toolbar */}\r\n      <div className='card-toolbar'>\r\n        {/* begin::Group actions */}\r\n        {selected.length > 0 ? <UsersListGrouping /> : <UsersListToolbar />}\r\n        {/* end::Group actions */}\r\n      </div>\r\n      {/* end::Card toolbar */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {PermissionListHeader}\r\n","import {FC} from 'react'\r\nimport {ColumnInstance} from 'react-table'\r\nimport {Role} from '../../core/_models'\r\n\r\ntype Props = {\r\n  column: ColumnInstance<Role>\r\n}\r\n\r\nconst CustomHeaderColumn: FC<Props> = ({column}) => (\r\n  <>\r\n    {column.Header && typeof column.Header === 'string' ? (\r\n      <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n    ) : (\r\n      column.render('Header')\r\n    )}\r\n  </>\r\n)\r\n\r\nexport {CustomHeaderColumn}\r\n","import clsx from 'clsx'\r\nimport {FC} from 'react'\r\nimport {Row} from 'react-table'\r\nimport {Role} from '../../core/_models'\r\n\r\ntype Props = {\r\n  row: Row<Role>\r\n}\r\n\r\nconst CustomRow: FC<Props> = ({row}) => (\r\n  <tr {...row.getRowProps()}>\r\n    {row.cells.map((cell) => {\r\n      return (\r\n        <td\r\n          {...cell.getCellProps()}\r\n          className={clsx({'text-end min-w-100px': cell.column.id === 'actions'})}\r\n        >\r\n          {cell.render('Cell')}\r\n        </td>\r\n      )\r\n    })}\r\n  </tr>\r\n)\r\n\r\nexport {CustomRow}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport clsx from 'clsx'\r\nimport {FC} from 'react'\r\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\r\nimport {Role} from '../../core/_models'\r\nimport {useListView} from '../../core/ListViewProvider'\r\n\r\ntype Props = {\r\n  user: Role\r\n}\r\n\r\nconst UserInfoCell: FC<Props> = ({user}) => {\r\n  const {setItemIdForUpdate} = useListView()\r\n\r\n  const openEditModal = () => {\r\n    setItemIdForUpdate(user.id)\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex align-items-center'>\r\n      {/* begin:: Avatar */}\r\n      <div className='symbol symbol-circle symbol-50px overflow-hidden me-3'>\r\n        <a onClick={openEditModal} style={{cursor: 'pointer'}}>\r\n          {user?.profile_image ? (\r\n            <div className='symbol-label'>\r\n              <img src={user?.profile_image} alt={user?.first_name} className='w-100' />\r\n            </div>\r\n          ) : (\r\n            <div className={clsx('symbol-label fs-3', `bg-light-warning`, `text-warning`)}>\r\n              {user?.first_name?.charAt(0)}\r\n            </div>\r\n          )}\r\n        </a>\r\n      </div>\r\n      <div className='d-flex flex-column'>\r\n        <a\r\n          onClick={openEditModal}\r\n          style={{cursor: 'pointer'}}\r\n          className='text-gray-800 text-hover-primary mb-1'\r\n        >\r\n          {user.first_name} {user.last_name}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserInfoCell}\r\n","import {FC} from 'react'\r\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\r\n\r\ntype Props = {\r\n  phone_number?: any\r\n}\r\n\r\nconst PhoneNumber: FC<Props> = ({phone_number}) => (\r\n  <div className='d-flex align-items-center'>\r\n      <div className='d-flex flex-column'>\r\n          {phone_number}\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport {PhoneNumber}\r\n","import {FC} from 'react'\r\n\r\ntype Props = {\r\n  admin?: boolean\r\n}\r\n\r\nconst Admin: FC<Props> = ({admin}) => (\r\n  <> {admin ? <div className='badge badge-light-success fw-bolder'>Yes</div>: \r\n  <div className='badge badge-light-danger fw-bolder'>No</div>}</>\r\n)\r\n\r\nexport {Admin}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {FC, useEffect} from 'react'\r\nimport {useMutation, useQueryClient} from 'react-query'\r\nimport {MenuComponent} from '../../../../../../_metronic/assets/ts/components'\r\nimport {ID, KTSVG, QUERIES} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {useQueryResponse} from '../../core/QueryResponseProvider'\r\nimport {deleteUser} from '../../core/_requests'\r\nimport Swal from 'sweetalert2'\r\n\r\ntype Props = {\r\n  id: ID\r\n}\r\n\r\nconst UserActionsCell: FC<Props> = ({id}) => {\r\n  const {setItemIdForUpdate} = useListView()\r\n  const {query} = useQueryResponse()\r\n  const queryClient = useQueryClient()\r\n\r\n  useEffect(() => {\r\n    MenuComponent.reinitialization()\r\n  }, [])\r\n\r\n  const openEditModal = () => {\r\n    setItemIdForUpdate(id)\r\n  }\r\n\r\n  const deleteItem = useMutation(() => deleteUser(id), {\r\n    // 💡 response of the mutation is passed to onSuccess\r\n    onSuccess: () => {\r\n      // ✅ update detail view directly\r\n      Swal.fire({\r\n        title: 'Success!',\r\n        text: `Staff Deleted!`,\r\n        icon: 'success',\r\n        confirmButtonText: 'Okay',\r\n      })\r\n      queryClient.invalidateQueries([`${QUERIES.USERS_LIST}-${query}`])\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <a\r\n        href='#'\r\n        className='btn btn-light btn-active-light-primary btn-sm'\r\n        data-kt-menu-trigger='click'\r\n        data-kt-menu-placement='bottom-end'\r\n      >\r\n        <i className=\"bi bi-three-dots-vertical fs-5\"></i>\r\n      </a>\r\n      {/* begin::Menu */}\r\n      <div\r\n        className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-bold fs-7 w-125px py-4'\r\n        data-kt-menu='true'\r\n      >\r\n        {/* begin::Menu item */}\r\n        <div className='menu-item px-3'>\r\n          <a className='menu-link px-3' onClick={openEditModal}>\r\n            Edit\r\n          </a>\r\n        </div>\r\n        {/* end::Menu item */}\r\n\r\n        {/* begin::Menu item */}\r\n        <div className='menu-item px-3'>\r\n          <a\r\n            className='menu-link px-3'\r\n            data-kt-users-table-filter='delete_row'\r\n            onClick={async () => {\r\n              Swal.fire({\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!',\r\n              }).then(async (result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                  await deleteItem.mutateAsync()\r\n                }\r\n              })\r\n            }}\r\n          >\r\n            Delete\r\n          </a>\r\n        </div>\r\n        {/* end::Menu item */}\r\n      </div>\r\n      {/* end::Menu */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserActionsCell}\r\n","import {FC, useMemo} from 'react'\r\nimport {ID} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../../core/ListViewProvider'\r\n\r\ntype Props = {\r\n  id: ID\r\n}\r\n\r\nconst UserSelectionCell: FC<Props> = ({id}) => {\r\n  const {selected, onSelect} = useListView()\r\n  const isSelected = useMemo(() => selected.includes(id), [id, selected])\r\n  return (\r\n    <div className='form-check form-check-sm form-check-custom form-check-solid'>\r\n      <input\r\n        className='form-check-input'\r\n        type='checkbox'\r\n        data-kt-check={isSelected}\r\n        data-kt-check-target='#kt_table_users .form-check-input'\r\n        checked={isSelected}\r\n        onChange={() => onSelect(id)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserSelectionCell}\r\n","import clsx from 'clsx'\r\nimport {FC, PropsWithChildren, useMemo} from 'react'\r\nimport {HeaderProps} from 'react-table'\r\nimport {initialQueryState} from '../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nimport {Role} from '../../core/_models'\r\n\r\ntype Props = {\r\n  className?: string\r\n  title?: string\r\n  tableProps: PropsWithChildren<HeaderProps<Role>>\r\n}\r\nconst UserCustomHeader: FC<Props> = ({className, title, tableProps}) => {\r\n  const id = tableProps.column.id\r\n  const {state, updateState} = useQueryRequest()\r\n  const isSelectedForSorting = useMemo(() => {\r\n    return state.sort && state.sort === id\r\n  }, [state, id])\r\n  const order: 'asc' | 'desc' | undefined = useMemo(() => state.order, [state])\r\n\r\n  const sortColumn = () => {\r\n    // avoid sorting for these columns\r\n    if (id === 'actions' || id === 'selection') {\r\n      return\r\n    }\r\n\r\n    if (!isSelectedForSorting) {\r\n      // enable sort asc\r\n      updateState({sort: id, order: 'asc', ...initialQueryState})\r\n      return\r\n    }\r\n\r\n    if (isSelectedForSorting && order !== undefined) {\r\n      if (order === 'asc') {\r\n        // enable sort desc\r\n        updateState({sort: id, order: 'desc', ...initialQueryState})\r\n        return\r\n      }\r\n\r\n      // disable sort\r\n      updateState({sort: undefined, order: undefined, ...initialQueryState})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <th\r\n      {...tableProps.column.getHeaderProps()}\r\n      className={clsx(\r\n        className,\r\n        isSelectedForSorting && order !== undefined && `table-sort-${order}`\r\n      )}\r\n      style={{cursor: 'pointer'}}\r\n      onClick={sortColumn}\r\n    >\r\n      {title}\r\n    </th>\r\n  )\r\n}\r\n\r\nexport {UserCustomHeader}\r\n","import {FC, PropsWithChildren} from 'react'\r\nimport {HeaderProps} from 'react-table'\r\nimport {useListView} from '../../core/ListViewProvider'\r\nimport {Role} from '../../core/_models'\r\n\r\ntype Props = {\r\n  tableProps: PropsWithChildren<HeaderProps<Role>>\r\n}\r\n\r\nconst UserSelectionHeader: FC<Props> = ({tableProps}) => {\r\n  const {isAllSelected, onSelectAll} = useListView()\r\n  return (\r\n    <th {...tableProps.column.getHeaderProps()} className='w-10px pe-2'>\r\n      <div className='form-check form-check-sm form-check-custom form-check-solid me-3'>\r\n        <input\r\n          className='form-check-input'\r\n          type='checkbox'\r\n          data-kt-check={isAllSelected}\r\n          data-kt-check-target='#kt_table_users .form-check-input'\r\n          checked={isAllSelected}\r\n          onChange={onSelectAll}\r\n        />\r\n      </div>\r\n    </th>\r\n  )\r\n}\r\n\r\nexport {UserSelectionHeader}\r\n","import {FC} from 'react'\n\ntype Props = {\n  email?: any\n}\n\nconst Email: FC<Props> = ({email}) => (\n  <div className='d-flex align-items-center'>\n      <div className='d-flex flex-column'>\n          {email}\n      </div>\n    </div>\n)\n\nexport {Email}\n\n","import {Column} from 'react-table'\r\nimport {UserInfoCell} from './UserInfoCell'\r\nimport {PhoneNumber} from './PhoneNumber'\r\nimport {Admin} from './admin'\r\nimport {UserActionsCell} from './UserActionsCell'\r\nimport {UserSelectionCell} from './UserSelectionCell'\r\nimport {UserCustomHeader} from './UserCustomHeader'\r\nimport {UserSelectionHeader} from './UserSelectionHeader'\r\nimport {Role} from '../../core/_models'\r\nimport {Email} from './Email'\r\n\r\nconst usersColumns: ReadonlyArray<Column<Role>> = [\r\n  {\r\n    Header: (props) => <UserSelectionHeader tableProps={props} />,\r\n    id: 'selection',\r\n    Cell: ({...props}) => <UserSelectionCell id={props.data[props.row.index].id} />,\r\n  },\r\n  {\r\n    Header: (props) => <UserCustomHeader tableProps={props} title='Name' className='min-w-125px' />,\r\n    id: 'name',\r\n    Cell: ({...props}) => <UserInfoCell user={props.data[props.row.index]} />,\r\n  },\r\n\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Email' className='min-w-125px' />\r\n    ),\r\n    id: 'email',\r\n    Cell: ({...props}) => <Email email={props.data[props.row.index].email} />,\r\n  },\r\n\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Phone Number' className='min-w-125px' />\r\n    ),\r\n    id: 'phone_number',\r\n    Cell: ({...props}) => <PhoneNumber phone_number={props.data[props.row.index].phone_number} />,\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Is Admin' className='min-w-125px' />\r\n    ),\r\n    id: 'admin',\r\n    Cell: ({...props}) => <Admin admin={props.data[props.row.index].admin} />,\r\n  },\r\n  {\r\n    Header: (props) => (\r\n      <UserCustomHeader tableProps={props} title='Actions' className='text-end min-w-100px' />\r\n    ),\r\n    id: 'actions',\r\n    Cell: ({...props}) => <UserActionsCell id={props.data[props.row.index].id} />,\r\n  },\r\n]\r\n\r\nexport {usersColumns}\r\n","const UsersListLoading = () => {\r\n  const styles = {\r\n    borderRadius: '0.475rem',\r\n    boxShadow: '0 0 50px 0 rgb(82 63 105 / 15%)',\r\n    backgroundColor: '#fff',\r\n    color: '#7e8299',\r\n    fontWeight: '500',\r\n    margin: '0',\r\n    width: 'auto',\r\n    padding: '1rem 2rem',\r\n    top: 'calc(50% - 2rem)',\r\n    left: 'calc(50% - 4rem)',\r\n  }\r\n\r\n  return <div style={{...styles, position: 'absolute', textAlign: 'center'}}>Processing...</div>\r\n}\r\n\r\nexport {UsersListLoading}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport clsx from 'clsx'\r\nimport {useQueryResponseLoading, useQueryResponsePagination} from '../../core/QueryResponseProvider'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\n\r\nconst UsersListPagination = () => {\r\n  const pagination = useQueryResponsePagination()\r\n  const isLoading = useQueryResponseLoading()\r\n  const {updateState} = useQueryRequest()\r\n  const updatePage = (page: number | null) => {\r\n    if (!page || isLoading || pagination.page === page) {\r\n      return\r\n    }\r\n\r\n    updateState({page, items_per_page: pagination.items_per_page || 10})\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start'></div>\r\n      <div className='col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end'>\r\n        <div id='kt_table_users_paginate'>\r\n          <ul className='pagination'>\r\n            {pagination.links?.map((link) => (\r\n              <li\r\n                key={link.label}\r\n                className={clsx('page-item', {\r\n                  active: pagination.page === link.page,\r\n                  disabled: isLoading,\r\n                  previous: link.label === '&laquo; Previous',\r\n                  next: link.label === 'Next &raquo;',\r\n                })}\r\n              >\r\n                <a\r\n                  className='page-link'\r\n                  onClick={() => updatePage(link.page)}\r\n                  dangerouslySetInnerHTML={{__html: link.label}}\r\n                  style={{cursor: 'pointer'}}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UsersListPagination}\r\n","import {useMemo} from 'react'\r\nimport {useTable, ColumnInstance, Row} from 'react-table'\r\nimport {CustomHeaderColumn} from './columns/CustomHeaderColumn'\r\nimport {CustomRow} from './columns/CustomRow'\r\nimport {useQueryResponseData, useQueryResponseLoading} from '../core/QueryResponseProvider'\r\nimport {usersColumns} from './columns/_columns'\r\nimport {Role} from '../core/_models'\r\nimport {UsersListLoading} from '../components/loading/UsersListLoading'\r\nimport {UsersListPagination} from '../components/pagination/UsersListPagination'\r\nimport {KTCardBody} from '../../../../../_metronic/helpers'\r\n\r\nconst UsersTable = () => {\r\n  const users = useQueryResponseData()\r\n  const isLoading = useQueryResponseLoading()\r\n  const data = useMemo(() => users, [users])\r\n  const columns = useMemo(() => usersColumns, [])\r\n  const {getTableProps, getTableBodyProps, headers, rows, prepareRow} = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <KTCardBody className='py-4'>\r\n      <div className='table-responsive'>\r\n        <table\r\n          id='kt_table_users'\r\n          className='table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer'\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            <tr className='text-start text-muted fw-bolder fs-7 text-uppercase gs-0'>\r\n              {headers.map((column: ColumnInstance<Role>) => (\r\n                <CustomHeaderColumn key={column.id} column={column} />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className='text-gray-600 fw-bold' {...getTableBodyProps()}>\r\n            {rows.length > 0 ? (\r\n              rows.map((row: Row<Role>, i) => {\r\n                prepareRow(row)\r\n                return <CustomRow row={row} key={`row-${i}-${row.id}`} />\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>\r\n                  <div className='d-flex text-center w-100 align-content-center justify-content-center'>\r\n                    No matching records found\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <UsersListPagination />\r\n      {isLoading && <UsersListLoading />}\r\n    </KTCardBody>\r\n  )\r\n}\r\n\r\nexport {UsersTable}\r\n","import {KTSVG} from '../../../../../_metronic/helpers'\r\nimport {useListView} from '../core/ListViewProvider'\r\n\r\nconst UserEditModalHeader = () => {\r\n  const {setItemIdForUpdate} = useListView()\r\n\r\n  return (\r\n    <div className='modal-header'>\r\n      {/* begin::Modal title */}\r\n      <h2 className='fw-bolder'>Add a Staff</h2>\r\n      {/* end::Modal title */}\r\n\r\n      {/* begin::Close */}\r\n      <div\r\n        className='btn btn-icon btn-sm btn-active-icon-primary'\r\n        data-kt-users-modal-action='close'\r\n        onClick={() => setItemIdForUpdate(undefined)}\r\n        style={{cursor: 'pointer'}}\r\n      >\r\n        <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-1' />\r\n      </div>\r\n      {/* end::Close */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {UserEditModalHeader}\r\n","import {ID, Response} from '../../../../../_metronic/helpers'\r\nimport * as Yup from 'yup'\r\n\r\nexport type Role = {\r\n  id?: ID\r\n  first_name: string\r\n  last_name: string\r\n  email: string\r\n  phone_number: string\r\n  password: string\r\n  profile_image: any\r\n  admin: boolean\r\n  role_id: any\r\n  permissions: any\r\n}\r\n\r\nexport type PermissionQueryResponse = Response<Array<Role>>\r\n\r\nexport const initialRole: Role = {\r\n  id: undefined,\r\n  first_name: '',\r\n  last_name: '',\r\n  email: '',\r\n  phone_number: '',\r\n  password: '',\r\n  profile_image: null,\r\n  admin: false,\r\n  role_id: null,\r\n  permissions: [],\r\n}\r\n\r\nconst createAccountSchemas = [\r\n  Yup.object({\r\n    first_name: Yup.string()\r\n      .required('First name is required')\r\n      .label('first_name'),\r\n    last_name: Yup.string()\r\n      .required('Last name is required')\r\n      .label('last_name'),\r\n    email: Yup.string()\r\n      .email('Wrong email format')\r\n      .required('Email is required')\r\n      .label('email'),\r\n    phone_number: Yup.string()\r\n      // .positive()\r\n      .length(10)\r\n      .matches(\r\n        /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/,\r\n        'Phone number is not valid'\r\n      )\r\n      .required('Phone number is required')\r\n      .label('Phone Number'),\r\n    password: Yup.string()\r\n      .required('Password is required')\r\n      .label('password'),\r\n    // profile_image: Yup.object().label('profile_image')\r\n  }),\r\n  Yup.object({\r\n    role_id: Yup.string()\r\n      .required('Please select role')\r\n      .label('role'),\r\n  }),\r\n]\r\n\r\nexport {createAccountSchemas}\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Field, ErrorMessage, Formik} from 'formik'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport PasswordStrengthBar from 'react-password-strength-bar'\r\nimport {checkEmail} from '../core/_requests'\r\n\r\ntype Props = {\r\n  setFieldValue: any\r\n  values: any\r\n  touched: any\r\n  setFieldError: any\r\n  errors: any\r\n}\r\n\r\nconst Step1: FC<Props> = ({setFieldValue, values, touched, setFieldError, errors}) => {\r\n  console.log(touched, 'touched', errors)\r\n  const validateEmail = async (value: string) => {\r\n    let error\r\n    var re = /\\S+@\\S+\\.\\S+/\r\n    let correct = re.test(value)\r\n    if (value != '' && correct && !values.id) {\r\n      await checkEmail(value)\r\n        .then((data: any) => {\r\n          if (data.data == 'Email already exists') {\r\n            error = data.data\r\n            // setFieldError('email', data.data)\r\n          } else {\r\n            error = null\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    return error\r\n  }\r\n\r\n  const [showPassword, setPasswordShow] = useState(false)\r\n  return (\r\n    <div className='w-100'>\r\n      <div className='fv-row mb-7'>\r\n        <label className='d-block form-label'>Avatar</label>\r\n        <div className='image-input image-input-outline' data-kt-image-input='true'>\r\n          <div className=''>\r\n            <img\r\n              src={\r\n                values?.profile_image?.name\r\n                  ? URL.createObjectURL(values?.profile_image)\r\n                  : values?.profile_image != null\r\n                  ? values?.profile_image\r\n                  : toAbsoluteUrl('/media/svg/avatars/blank.svg')\r\n              }\r\n              alt='avatar'\r\n              className='image-input-wrapper w-125px h-125px'\r\n            />\r\n          </div>\r\n          <label\r\n            className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n            data-kt-image-input-action='change'\r\n            data-bs-toggle='tooltip'\r\n            title='Change avatar'\r\n          >\r\n            <i className='bi bi-pencil-fill fs-7'></i>\r\n            <input\r\n              type='file'\r\n              name='profile_image'\r\n              accept='.png, .jpg, .jpeg'\r\n              onChange={(e: any) => {\r\n                setFieldValue('profile_image', e.currentTarget.files[0])\r\n              }}\r\n            />\r\n            <input type='hidden' name='avatar_remove' />\r\n          </label>\r\n          {values.profile_image !== null && (\r\n            <button\r\n              className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n              data-kt-image-input-action='remove'\r\n              data-bs-toggle='tooltip'\r\n              title='Remove avatar'\r\n              type='button'\r\n              onClick={() => setFieldValue('profile_image', null)}\r\n            >\r\n              <i className='bi bi-x fs-2'></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='form-label required'>First Name</label>\r\n\r\n          <Field name='first_name' className='form-control mb-2' placeholder={'Enter First Name'} />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='first_name' />\r\n          </div>\r\n        </div>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Last Name</span>\r\n          </label>\r\n\r\n          <Field name='last_name' className='form-control mb-2' placeholder={'Enter Last Name'} />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='last_name' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='d-flex flex-wrap gap-5 mb-10'>\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='fs-6 fw-bold form-label required'>Email</label>\r\n\r\n          <Field\r\n            name='email'\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid Email'}\r\n            validate={validateEmail}\r\n          />\r\n          {errors.email ? (\r\n            <div className='text-danger mt-2'>{errors.email}</div>\r\n          ) : (\r\n            <div className='text-danger mt-2'>\r\n              <ErrorMessage name='email' />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className='fv-row w-100 flex-md-root'>\r\n          <label className='d-flex align-items-center form-label'>\r\n            <span className='required'>Phone Number</span>\r\n          </label>\r\n\r\n          <Field\r\n            name='phone_number'\r\n            type={'number'}\r\n            className='form-control mb-2'\r\n            placeholder={'Enter Valid Phone Number'}\r\n          />\r\n          <div className='text-danger mt-2'>\r\n            <ErrorMessage name='phone_number' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='d-flex align-items-center form-label'>\r\n          <span className='required'>Password</span>\r\n        </label>\r\n        <div style={{flexDirection: 'row', display: 'flex'}} className='mb-2 gap-5'>\r\n          <div className='position-relative w-100'>\r\n            <Field\r\n              name='password'\r\n              type={!showPassword ? 'password' : 'text'}\r\n              className='form-control mb-2'\r\n              placeholder={'Enter Strong Password Or Generate'}\r\n            />\r\n            <button\r\n              type='button'\r\n              onClick={() => setPasswordShow(!showPassword)}\r\n              className='btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2'\r\n              data-kt-password-meter-control='visibility'\r\n            >\r\n              {!showPassword ? (\r\n                <i className='bi bi-eye-slash fs-2'></i>\r\n              ) : (\r\n                <i className='bi bi-eye fs-2'></i>\r\n              )}\r\n            </button>\r\n          </div>\r\n          <button\r\n            type='button'\r\n            className='btn btn-lg btn-light-primary w-50 p-0 fs-15'\r\n            onClick={() => {\r\n              setFieldValue(\r\n                'password',\r\n                Math.random()\r\n                  .toString(36)\r\n                  .slice(2)\r\n              )\r\n            }}\r\n          >\r\n            Generate Password\r\n          </button>\r\n        </div>\r\n        <PasswordStrengthBar password={values?.password} />\r\n        <div className='text-danger'>\r\n          <ErrorMessage name='password' />\r\n        </div>\r\n      </div>\r\n\r\n      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-15'>\r\n        <Field className='form-check-input' type='checkbox' name='admin' />\r\n        <span className='form-check-label fs-15 fw-bold'>Administrator</span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step1}\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport {getPermissions, getRoles} from '../core/_requests'\r\n\r\ntype Props = {\r\n  values: any\r\n  setFieldValue: any\r\n}\r\n\r\nconst Step2: FC<Props> = ({values, setFieldValue}) => {\r\n  console.log(values, 'values')\r\n  const [permissions, setPermissions] = useState([])\r\n  const [roles, setRoles] = useState<any[]>([])\r\n  const [selectedRole, setSelectedRole] = useState<any>()\r\n\r\n  useEffect(() => {\r\n    getPermissions()\r\n      .then((data) => {\r\n        let newData: any\r\n        newData = data.data\r\n        setPermissions(newData)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n\r\n    getRoles()\r\n      .then((data) => {\r\n        let newData: any\r\n        newData = data.data\r\n        if (values.role_id) {\r\n          setSelectedRole(newData.find((x: any) => x.id == values.role_id))\r\n        }\r\n        setRoles(newData)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedRole?.permissions.length > 0 && values.id == undefined) {\r\n      setFieldValue('permissions', selectedRole.permissions)\r\n    }\r\n  }, [selectedRole])\r\n\r\n  const onCheckbox = (e: any, id: number) => {\r\n    const {checked, name} = e.target\r\n    let perm: any = values.permissions\r\n    const index = perm?.findIndex((x: any) => x.permission_id == id)\r\n    if (index !== -1) {\r\n      perm[index] = {...perm[index], [name]: checked}\r\n    } else {\r\n      perm?.push({\r\n        permission_id: id,\r\n        can_view: name == 'can_view' && checked ? true : false,\r\n        can_view_own: name == 'can_view_own' && checked ? true : false,\r\n        can_create: name == 'can_create' && checked ? true : false,\r\n        can_edit: name == 'can_edit' && checked ? true : false,\r\n        can_delete: name == 'can_delete' && checked ? true : false,\r\n      })\r\n    }\r\n    setFieldValue('permissions', perm)\r\n  }\r\n\r\n  const onSelect = (e: any) => {\r\n    setSelectedRole(roles.find((x) => x.id == e.target.value))\r\n    setFieldValue('role_id', parseInt(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <div className='w-100'>\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label required'>Role</label>\r\n\r\n        <Field\r\n          as='select'\r\n          name='role_id'\r\n          className='form-select mb-2'\r\n          data-control='select2'\r\n          data-hide-search='true'\r\n          data-placeholder='Select an option'\r\n          onChange={onSelect}\r\n        >\r\n          {values.role_id == null && <option></option>}\r\n          {roles.map((item: any, i: any) => (\r\n            <option key={i} value={item.id}>\r\n              {item.name}\r\n            </option>\r\n          ))}\r\n        </Field>\r\n        <div className='text-danger mt-2'>\r\n          <ErrorMessage name='role_id' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='fw-bold fs-6 mb-2'>Permissions</label>\r\n        <div className='table-responsive'>\r\n          <table className='table align-middle table-row-dashed fs-6 gy-5'>\r\n            <tbody className='text-gray-600 fw-bold'>\r\n              {permissions?.map((item: any, i) => (\r\n                <tr key={i}>\r\n                  <td className='text-gray-800'>{item?.name}</td>\r\n                  <td style={{paddingLeft: 35}}>\r\n                    <div className='d-flex'>\r\n                      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-10'>\r\n                        <Field\r\n                          className='form-check-input'\r\n                          type='checkbox'\r\n                          checked={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_view\r\n                          }\r\n                          disabled={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_view_own == true\r\n                          }\r\n                          name='can_view'\r\n                          onChange={(e: any) => onCheckbox(e, item.id)}\r\n                        />\r\n                        <span className='form-check-label'>View</span>\r\n                      </label>\r\n                      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-10'>\r\n                        <Field\r\n                          className='form-check-input'\r\n                          type='checkbox'\r\n                          checked={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_view_own\r\n                          }\r\n                          name='can_view_own'\r\n                          disabled={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_view == true\r\n                          }\r\n                          onChange={(e: any) => onCheckbox(e, item.id)}\r\n                        />\r\n                        <span className='form-check-label'>View(Own)</span>\r\n                      </label>\r\n                      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-10'>\r\n                        <Field\r\n                          className='form-check-input'\r\n                          type='checkbox'\r\n                          checked={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_create\r\n                          }\r\n                          name='can_create'\r\n                          onChange={(e: any) => onCheckbox(e, item.id)}\r\n                        />\r\n                        <span className='form-check-label'>Create</span>\r\n                      </label>\r\n                      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-10'>\r\n                        <Field\r\n                          className='form-check-input'\r\n                          type='checkbox'\r\n                          checked={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_edit\r\n                          }\r\n                          name='can_edit'\r\n                          onChange={(e: any) => onCheckbox(e, item.id)}\r\n                        />\r\n                        <span className='form-check-label'>Edit</span>\r\n                      </label>\r\n                      <label className='form-check form-check-sm form-check-custom form-check-solid me-5 me-lg-10'>\r\n                        <Field\r\n                          className='form-check-input'\r\n                          type='checkbox'\r\n                          checked={\r\n                            values.permissions?.find((x: any) => x.permission_id == item.id)\r\n                              ?.can_delete\r\n                          }\r\n                          name='can_delete'\r\n                          onChange={(e: any) => onCheckbox(e, item.id)}\r\n                        />\r\n                        <span className='form-check-label'>Delete</span>\r\n                      </label>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step2}\r\n","import {FC, useEffect, useRef, useState} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {Form, Formik, FormikValues} from 'formik'\r\nimport {isNotEmpty, KTSVG} from '../../../../../_metronic/helpers'\r\nimport {createAccountSchemas, initialRole, Role} from '../core/_models'\r\nimport {useListView} from '../core/ListViewProvider'\r\nimport {UsersListLoading} from '../components/loading/UsersListLoading'\r\nimport {checkEmail, createUser, updateUser} from '../core/_requests'\r\nimport {useQueryResponse} from '../core/QueryResponseProvider'\r\nimport Swal from 'sweetalert2'\r\nimport {StepperComponent} from '../../../../../_metronic/assets/ts/components'\r\nimport {Step1} from '../steps/Step1'\r\nimport {Step2} from '../steps/Step2'\r\n\r\ntype Props = {\r\n  isUserLoading: boolean\r\n  role: Role\r\n}\r\n\r\nconst UserEditModalForm: FC<Props> = ({role, isUserLoading}) => {\r\n\r\n  const stepperRef = useRef<HTMLDivElement | null>(null)\r\n  const stepper = useRef<StepperComponent | null>(null)\r\n  const {setItemIdForUpdate} = useListView()\r\n  const {refetch} = useQueryResponse()\r\n  const [isSubmitButton, setSubmitButton] = useState(false)\r\n  const [currentSchema, setCurrentSchema] = useState(createAccountSchemas[0])\r\n  const [roleForEdit, setRoleForEdit] = useState<Role>({\r\n    ...role,\r\n    first_name: role.first_name || initialRole.first_name,\r\n    last_name: role.last_name || initialRole.last_name,\r\n    email: role.email || initialRole.email,\r\n    password: role.password || initialRole.password,\r\n    phone_number: role.phone_number || initialRole.phone_number,\r\n    profile_image: role.profile_image || initialRole.profile_image,\r\n    admin: role.admin || initialRole.admin,\r\n    role_id: role.role_id || initialRole.role_id,\r\n    permissions: role.permissions || initialRole.permissions,\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!stepperRef.current) {\r\n      return\r\n    }\r\n\r\n    loadStepper()\r\n  }, [stepperRef])\r\n\r\n  const cancel = (withRefresh?: boolean) => {\r\n    if (withRefresh) {\r\n      refetch()\r\n    }\r\n    setItemIdForUpdate(undefined)\r\n  }\r\n\r\n  const loadStepper = () => {\r\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\r\n  }\r\n\r\n  const prevStep = () => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n\r\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\r\n\r\n    stepper.current.goPrev()\r\n\r\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex - 1])\r\n  }\r\n\r\n  const submitStep = async (values: Role, actions: FormikValues) => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n\r\n    setSubmitButton(stepper.current.currentStepIndex === stepper.current.totatStepsNumber! - 1)\r\n\r\n    setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex])\r\n\r\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\r\n      stepper.current.goNext()\r\n    } else {\r\n      try {\r\n        if (isNotEmpty(values.id)) {\r\n          await updateUser(values)\r\n        } else {\r\n          await createUser(values)\r\n        }\r\n      } catch (ex) {\r\n        console.error(ex)\r\n      } finally {\r\n        // setSubmitting(true)\r\n        actions.resetForm()\r\n        cancel(true)\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: `Staff ${values.id ? 'Updated' : 'Created'}!`,\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={stepperRef}\r\n        className='stepper stepper-links d-flex flex-column'\r\n        id='kt_create_account_stepper'\r\n      >\r\n        <div className='stepper-nav mb-5'>\r\n          <div className='stepper-item current' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>Staff Info</h3>\r\n          </div>\r\n\r\n          <div className='stepper-item' data-kt-stepper-element='nav'>\r\n            <h3 className='stepper-title'>Permissions</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <Formik\r\n          validationSchema={currentSchema}\r\n          initialValues={roleForEdit}\r\n          onSubmit={submitStep}\r\n          validateOnChange={false}\r\n        >\r\n          {({setFieldValue, values, touched, setFieldError, errors}) => (\r\n            <Form className='mx-auto mw-700px w-100 pt-5 pb-10' id='kt_create_account_form'>\r\n              <div className='current' data-kt-stepper-element='content'>\r\n                <Step1\r\n                  setFieldValue={setFieldValue}\r\n                  values={values}\r\n                  touched={touched}\r\n                  setFieldError={setFieldError}\r\n                  errors={errors}\r\n                />\r\n              </div>\r\n\r\n              <div data-kt-stepper-element='content'>\r\n                <Step2 setFieldValue={setFieldValue} values={values} />\r\n              </div>\r\n\r\n              <div className='d-flex flex-stack pt-15'>\r\n                <div className='mr-2'>\r\n                  <button\r\n                    onClick={prevStep}\r\n                    type='button'\r\n                    className='btn btn-lg btn-light-primary me-3'\r\n                    data-kt-stepper-action='previous'\r\n                  >\r\n                    <KTSVG\r\n                      path='/media/icons/duotune/arrows/arr063.svg'\r\n                      className='svg-icon-4 me-1'\r\n                    />\r\n                    Back\r\n                  </button>\r\n                </div>\r\n\r\n                <div>\r\n                  <button type='submit' className='btn btn-lg btn-primary me-3'>\r\n                    <span className='indicator-label'>\r\n                      {!isSubmitButton && 'Continue'}\r\n                      {isSubmitButton && 'Submit'}\r\n                      <KTSVG\r\n                        path='/media/icons/duotune/arrows/arr064.svg'\r\n                        className='svg-icon-3 ms-2 me-0'\r\n                      />\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      {isUserLoading && <UsersListLoading />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserEditModalForm}\r\n","import {useQuery} from 'react-query'\r\nimport {UserEditModalForm} from './UserEditModalForm'\r\nimport {isNotEmpty, QUERIES} from '../../../../../_metronic/helpers'\r\nimport {useListView} from '../core/ListViewProvider'\r\nimport {getUserById} from '../core/_requests'\r\nimport {initialRole, Role} from '../core/_models'\r\n\r\n\r\nconst UserEditModalFormWrapper = () => {\r\n  const {itemIdForUpdate, setItemIdForUpdate} = useListView()\r\n  const enabledQuery: boolean = isNotEmpty(itemIdForUpdate)\r\n  const {isLoading, data: user, error} = useQuery(\r\n    `${QUERIES.USERS_LIST}-permissions-${itemIdForUpdate}`,\r\n    () => {\r\n      return getUserById(itemIdForUpdate)\r\n    },\r\n    {\r\n      cacheTime: 0,\r\n      enabled: enabledQuery,\r\n      onError: (err) => {\r\n        setItemIdForUpdate(undefined)\r\n        console.error(err)\r\n      },\r\n    }\r\n  )\r\n\r\n  if (!itemIdForUpdate) {\r\n    return (\r\n      <UserEditModalForm\r\n        isUserLoading={isLoading}\r\n        role={initialRole}\r\n      />\r\n    )\r\n  }\r\n\r\n  if (!isLoading && !error && user) {\r\n    return <UserEditModalForm isUserLoading={isLoading} role={user} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport {UserEditModalFormWrapper}\r\n","import {useEffect} from 'react'\r\nimport {UserEditModalHeader} from './UserEditModalHeader'\r\nimport {UserEditModalFormWrapper} from './UserEditModalFormWrapper'\r\n\r\nconst UserEditModal = () => {\r\n  useEffect(() => {\r\n    document.body.classList.add('modal-open')\r\n    return () => {\r\n      document.body.classList.remove('modal-open')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className='modal fade show d-block'\r\n        id='kt_modal_add_user'\r\n        role='dialog'\r\n        tabIndex={-1}\r\n        aria-modal='true'\r\n      >\r\n        {/* begin::Modal dialog */}\r\n        <div className='modal-dialog modal-dialog-centered mw-900px'>\r\n          {/* begin::Modal content */}\r\n          <div className='modal-content'>\r\n            <UserEditModalHeader />\r\n            {/* begin::Modal body */}\r\n            <div className='modal-body scroll-y mx-5 mx-xl-15'>\r\n              <UserEditModalFormWrapper />\r\n            </div>\r\n            {/* end::Modal body */}\r\n          </div>\r\n          {/* end::Modal content */}\r\n        </div>\r\n        {/* end::Modal dialog */}\r\n      </div>\r\n      {/* begin::Modal Backdrop */}\r\n      <div className='modal-backdrop fade show'></div>\r\n      {/* end::Modal Backdrop */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport {UserEditModal}\r\n","import {ListViewProvider, useListView} from './core/ListViewProvider'\r\nimport {QueryRequestProvider} from './core/QueryRequestProvider'\r\nimport {QueryResponseProvider} from './core/QueryResponseProvider'\r\nimport {PermissionListHeader} from './components/header/PermissionListHeader'\r\nimport {UsersTable} from './table/UsersTable'\r\nimport {UserEditModal} from './user-edit-modal/UserEditModal'\r\nimport {KTCard} from '../../../../_metronic/helpers'\r\n\r\nconst PermissionsList = () => {\r\n  const {itemIdForUpdate} = useListView()\r\n  return (\r\n    <>\r\n      <KTCard>\r\n        <PermissionListHeader />\r\n        <UsersTable />\r\n      </KTCard>\r\n      {itemIdForUpdate !== undefined && <UserEditModal />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst PermissionsListWrapper = () => (\r\n  <QueryRequestProvider>\r\n    <QueryResponseProvider>\r\n      <ListViewProvider>\r\n        <PermissionsList />\r\n      </ListViewProvider>\r\n    </QueryResponseProvider>\r\n  </QueryRequestProvider>\r\n)\r\n\r\nexport {PermissionsListWrapper}\r\n","import {Route, Routes, Outlet, Navigate} from 'react-router-dom'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {PermissionsListWrapper} from './users-list/PermissionList'\r\n\r\nconst usersBreadcrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Staff management',\r\n    path: '/staff',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst StaffPage = () => {\r\n  return (\r\n    // <Routes>\r\n    //   <Route element={<Outlet />}>\r\n    //     <Route\r\n    //       path='staff'\r\n    //       element={\r\n            <>\r\n              <PageTitle breadcrumbs={usersBreadcrumbs}>Staff list</PageTitle>\r\n              <PermissionsListWrapper />\r\n            </>\r\n    //       }\r\n    //     />\r\n    //   </Route>\r\n    //   <Route index element={<Navigate to='/apps/staff-management/staff' />} />\r\n    // </Routes>\r\n  )\r\n}\r\n\r\nexport default StaffPage\r\n","import axios, {AxiosResponse} from 'axios'\r\nimport {ID, Response} from '../../../../../_metronic/helpers'\r\nimport {Role, PermissionQueryResponse} from './_models'\r\n\r\n// const API_URL = process.env.REACT_APP_THEME_API_URL\r\nconst API_URL = 'https://quiz.datacubeindia.com/common'\r\nconst ROLE_URL = `${API_URL}/staff`\r\n\r\nconst getUsers = (query: string): Promise<PermissionQueryResponse> => {\r\n  return axios\r\n    .get(`${ROLE_URL}?${query}`)\r\n    .then((d: AxiosResponse<PermissionQueryResponse>) => d.data)\r\n}\r\n\r\nconst getRoles = (): Promise<PermissionQueryResponse> => {\r\n  return axios.get(`${ROLE_URL}/roles`).then((d: AxiosResponse<PermissionQueryResponse>) => d.data)\r\n}\r\n\r\nconst getPermissions = (): Promise<PermissionQueryResponse> => {\r\n  return axios\r\n    .get(`${API_URL}/role/permissions`)\r\n    .then((d: AxiosResponse<PermissionQueryResponse>) => d.data)\r\n}\r\n\r\nconst checkEmail = (email: string): Promise<PermissionQueryResponse> => {\r\n  return axios\r\n    .get(`${ROLE_URL}/checkEmail?email=${email}`)\r\n    .then((d: AxiosResponse<PermissionQueryResponse>) => d.data)\r\n}\r\n\r\nconst getUserById = (id: ID): Promise<Role | undefined> => {\r\n  return axios\r\n    .get(`${ROLE_URL}/${id}`)\r\n    .then((response: AxiosResponse<Response<Role>>) => response.data)\r\n    .then((response: Response<Role>) => response.data)\r\n}\r\n\r\nconst createUser = (role: Role): Promise<Role | undefined> => {\r\n  const fd = new FormData()\r\n  const admin: any = role.admin\r\n  fd.append('first_name', role.first_name)\r\n  fd.append('last_name', role.last_name)\r\n  fd.append('email', role.email)\r\n  fd.append('phone_number', role.phone_number)\r\n  fd.append('password', role.password)\r\n  fd.append('profile_image', role.profile_image)\r\n  fd.append('admin', admin)\r\n  fd.append('role_id', role.role_id)\r\n  fd.append('permissions', JSON.stringify(role.permissions))\r\n  return axios\r\n    .post(ROLE_URL, fd)\r\n    .then((response: AxiosResponse<Response<Role>>) => response.data)\r\n    .then((response: Response<Role>) => response.data)\r\n}\r\n\r\nconst updateUser = (role: Role): Promise<Role | undefined> => {\r\n  const fd = new FormData()\r\n  const admin: any = role.admin\r\n  fd.append('first_name', role.first_name)\r\n  fd.append('last_name', role.last_name)\r\n  fd.append('email', role.email)\r\n  fd.append('phone_number', role.phone_number)\r\n  fd.append('password', role.password)\r\n  fd.append('profile_image', role.profile_image)\r\n  fd.append('admin', admin)\r\n  fd.append('role_id', role.role_id)\r\n  fd.append('permissions', JSON.stringify(role.permissions))\r\n  return axios\r\n    .put(`${ROLE_URL}/${role.id}`, fd)\r\n    .then((response: AxiosResponse<Response<Role>>) => response.data)\r\n    .then((response: Response<Role>) => response.data)\r\n}\r\n\r\nconst deleteUser = (userId: ID): Promise<void> => {\r\n  return axios.delete(`${ROLE_URL}/${userId}`).then(() => {})\r\n}\r\n\r\nconst deleteSelectedUsers = (userIds: Array<ID>): Promise<void> => {\r\n  const requests = userIds.map((id) => axios.delete(`${ROLE_URL}/${id}`))\r\n  return axios.all(requests).then(() => {})\r\n}\r\n\r\nexport {\r\n  getUsers,\r\n  deleteUser,\r\n  deleteSelectedUsers,\r\n  getUserById,\r\n  createUser,\r\n  updateUser,\r\n  getPermissions,\r\n  getRoles,\r\n  checkEmail,\r\n}\r\n"],"names":["QueryRequestContext","createContext","initialQueryRequest","QueryRequestProvider","children","useState","state","setState","Provider","value","updateState","updates","updatedState","useQueryRequest","useContext","QueryResponseContext","createResponseContext","initialQueryResponse","QueryResponseProvider","stringifyRequestQuery","query","setQuery","updatedQuery","useMemo","useEffect","useQuery","QUERIES","getUsers","cacheTime","keepPreviousData","refetchOnWindowFocus","isFetching","refetch","response","data","isLoading","useQueryResponse","useQueryResponseData","useQueryResponseLoading","ListViewContext","initialListView","ListViewProvider","selected","setSelected","itemIdForUpdate","setItemIdForUpdate","disabled","calculatedGroupingIsDisabled","isAllSelected","calculateIsAllDataSelected","onSelect","id","groupingOnSelect","onSelectAll","groupingOnSelectAll","clearSelected","useListView","UsersListFilter","role","setRole","lastLogin","setLastLogin","MenuComponent","type","className","path","onChange","e","target","onClick","filter","last_login","initialQueryState","undefined","ExportReactCSV","csvData","fileName","CSVLink","filename","UsersListToolbar","users","UsersListGrouping","queryClient","useQueryClient","deleteSelectedItems","useMutation","deleteSelectedUsers","onSuccess","invalidateQueries","length","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","mutateAsync","UsersListSearchComponent","searchTerm","setSearchTerm","debouncedSearchTerm","useDebounce","console","log","search","placeholder","PermissionListHeader","CustomHeaderColumn","column","Header","getHeaderProps","render","CustomRow","row","getRowProps","cells","map","cell","getCellProps","clsx","UserInfoCell","user","openEditModal","style","cursor","profile_image","src","alt","first_name","charAt","last_name","PhoneNumber","phone_number","Admin","admin","UserActionsCell","deleteItem","deleteUser","href","UserSelectionCell","isSelected","includes","checked","UserCustomHeader","tableProps","isSelectedForSorting","sort","order","UserSelectionHeader","Email","email","usersColumns","props","Cell","index","UsersListLoading","borderRadius","boxShadow","backgroundColor","color","fontWeight","margin","width","padding","top","left","position","textAlign","UsersListPagination","pagination","defaultPaginationState","links","payload","useQueryResponsePagination","link","active","page","previous","label","next","items_per_page","dangerouslySetInnerHTML","__html","UsersTable","columns","useTable","getTableProps","getTableBodyProps","headers","rows","prepareRow","i","colSpan","UserEditModalHeader","initialRole","password","role_id","permissions","createAccountSchemas","Yup","required","matches","Step1","setFieldValue","values","touched","errors","setFieldError","validateEmail","correct","test","checkEmail","error","catch","err","showPassword","setPasswordShow","name","URL","createObjectURL","toAbsoluteUrl","accept","currentTarget","files","validate","flexDirection","display","Math","random","toString","slice","Step2","setPermissions","roles","setRoles","selectedRole","setSelectedRole","getPermissions","newData","getRoles","find","x","onCheckbox","perm","findIndex","permission_id","push","can_view","can_view_own","can_create","can_edit","can_delete","as","parseInt","item","paddingLeft","UserEditModalForm","isUserLoading","stepperRef","useRef","stepper","isSubmitButton","setSubmitButton","currentSchema","setCurrentSchema","roleForEdit","current","loadStepper","StepperComponent","prevStep","currentStepIndex","totatStepsNumber","goPrev","submitStep","actions","goNext","isNotEmpty","updateUser","createUser","resetForm","ref","validationSchema","initialValues","onSubmit","validateOnChange","UserEditModalFormWrapper","enabledQuery","getUserById","enabled","onError","UserEditModal","document","body","classList","add","remove","tabIndex","PermissionsList","PermissionsListWrapper","usersBreadcrumbs","isSeparator","isActive","breadcrumbs","API_URL","ROLE_URL","axios","d","fd","FormData","append","JSON","stringify","userId","userIds","requests"],"sourceRoot":""}