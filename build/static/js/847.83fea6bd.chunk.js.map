{"version":3,"file":"static/js/847.83fea6bd.chunk.js","mappings":"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","sources":["app/pages/settings/components/SettingsName.tsx","app/pages/settings/components/Button.tsx","app/pages/settings/components/General.tsx","app/pages/settings/components/CompanyInfo.tsx","app/pages/settings/components/Localization.tsx","app/pages/settings/components/Finance.tsx","app/pages/settings/components/PaymentGateway.tsx","app/pages/settings/components/Customers.tsx","app/pages/settings/components/Pdf.tsx","app/pages/settings/components/Sms.tsx","app/pages/settings/components/CronJob.tsx","app/pages/settings/components/Misc.tsx","app/pages/settings/components/CashBonus.tsx","app/pages/settings/components/WalletMinBalance.tsx","app/pages/settings/components/AppCurVersion.tsx","app/pages/settings/components/Spinwin.tsx","app/pages/settings/components/Email.tsx","app/pages/settings/SettingPage.tsx","app/pages/settings/components/ApiUrl.tsx"],"sourcesContent":["import React, {FC, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport {KTSVG} from '../../../../_metronic/helpers'\n\ntype Props = {\n  active: string\n}\n\nconst SettingsName: FC<Props> = ({active}) => {\n  const Navigate = useNavigate()\n  const settings = [\n    {name: 'general', icon: '001'},\n    {name: 'company-information', icon: '002'},\n    {name: 'localization', icon: '003'},\n    {name: 'email', icon: '004'},\n    {name: 'finance', icon: '005'},\n    {name: 'payment-gateways', icon: '006'},\n    {name: 'customers', icon: '007'},\n    {name: 'PDF', icon: '008'},\n    {name: 'SMS', icon: '009'},\n    {name: 'cron-jobs', icon: '010'},\n    {name: 'misc', icon: '011'},\n    {name: 'cash-bonus', icon: '012'},\n    {name: 'wallet-minimun-balance', icon: '013'},\n    {name: 'app-current-version', icon: '014'},\n    {name: 'spin-the-wheel', icon: '015'},\n  ]\n  return (\n    <div className='flex-column flex-lg-row-auto w-100 w-lg-275px mb-10 mb-lg-0'>\n      <div\n        className='card card-flush'>\n        <div className='card-body' id='kt_chat_contacts_body'>\n          <div className='menu menu-column menu-rounded menu-state-bg menu-state-title-primary menu-state-icon-primary menu-state-bullet-primary mb-10'>\n            {settings.map((item, i) => (\n              <div\n                key={i}\n                className='menu-item mb-3'\n                onClick={() => {\n                  Navigate(`/settings/${item.name}`)\n                }}\n              >\n                <span className={`menu-link ${active == item.name ? 'active' : ''}`}>\n                  <span className='menu-icon'>\n                    <span className='svg-icon svg-icon-2 me-3'>\n                      <KTSVG\n                        path={`/media/icons/duotune/general/gen${item.icon}.svg`}\n                        className='svg-icon-2'\n                      />\n                    </span>\n                  </span>\n                  <span className='menu-title' style={{textTransform: 'capitalize'}}>\n                    {item.name.replace(/-/g, ' ')}\n                  </span>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport {SettingsName}\n","import axios, {AxiosResponse} from 'axios'\nimport React, {FC} from 'react'\nimport Swal from 'sweetalert2'\nimport {API_URL} from './ApiUrl'\n\nconst Button: FC = () => {\n  return (\n    <div className='d-flex flex-stack pt-15'>\n      <div className='mr-2'></div>\n      <button type='submit' className='btn btn-lg btn-primary me-3'>\n        <span className='indicator-label'>Save Setting</span>\n      </button>\n    </div>\n  )\n}\nexport {Button}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\r\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\r\nimport {SettingsName} from './SettingsName'\r\nimport {Field, ErrorMessage, useFormik} from 'formik'\r\nimport clsx from 'clsx'\r\nimport {Button} from './Button'\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport {API_URL} from './ApiUrl'\r\nimport * as Yup from 'yup'\r\n\r\nconst editUserSchema = Yup.object().shape({\r\n  dark_logo: Yup.string().required('logo is required'),\r\n  light_logo: Yup.string().required('logo is required'),\r\n  favicon: Yup.string().required('logo is required'),\r\n  name: Yup.string().required('company name is required'),\r\n  domain: Yup.string().required('domain domain is required'),\r\n  file_type: Yup.string().required('file type is required'),\r\n})\r\n\r\nconst General: FC = () => {\r\n  const [values, setValue] = useState<any>({\r\n    dark_logo: '',\r\n    light_logo: '',\r\n    favicon: '',\r\n    name: '',\r\n    domain: '',\r\n    file_type: '',\r\n  })\r\n  const [errors, setErrors] = useState<any>({\r\n    name: '',\r\n    domain: '',\r\n    file_type: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/general`)\r\n      .then((data: AxiosResponse<any>) => {\r\n        if (data.data != null) {\r\n          const newvalues = JSON.parse(data.data.value)\r\n          setValue(newvalues)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }, [])\r\n\r\n  const uploadImage = async (e: any) => {\r\n    const {name} = e.currentTarget\r\n    const file = e.currentTarget.files[0]\r\n    const fd = new FormData()\r\n    fd.append('image', file)\r\n    await axios\r\n      .post(`${API_URL}/upload`, fd)\r\n      .then((data: AxiosResponse<any>) => {\r\n        setValue({...values, [name]: data.data})\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    if (values.name == '') {\r\n      setErrors({...errors, name: 'Company Name is required'})\r\n      return\r\n    }\r\n    if (values.domain == '') {\r\n      setErrors({...errors, domain: 'Company Domain is required'})\r\n      return\r\n    }\r\n    if (values.file_type == '') {\r\n      setErrors({...errors, file_type: 'File types is required'})\r\n      return\r\n    }\r\n    const payload = {\r\n      name: 'general',\r\n      value: JSON.stringify(values),\r\n      auto_load: 0,\r\n    }\r\n    await axios\r\n      .post(API_URL, payload)\r\n      .then((data: AxiosResponse<any>) => {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: `Settings Updated!`,\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  const onChange = (e: any) => {\r\n    const {name, value} = e.target\r\n    setValue({...values, [name]: value})\r\n    setErrors({...errors, [name]: ''})\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex flex-column flex-lg-row'>\r\n      <SettingsName active={'general'} />\r\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\r\n        <div className='card p-10' id='kt_chat_messenger'>\r\n          <form className='form' onSubmit={onSubmit}>\r\n            <div className='d-flex flex-wrap mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='d-block form-label'>Logo Dark</label>\r\n                <div className='image-input image-input-outline' data-kt-image-input='true'>\r\n                  <div className=''>\r\n                    <img\r\n                      src={\r\n                        values.dark_logo != ''\r\n                          ? values.dark_logo\r\n                          : toAbsoluteUrl('/media/svg/avatars/blank.svg')\r\n                      }\r\n                      alt='dark_logo'\r\n                      className='image-input-wrapper w-125px h-125px'\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                    data-kt-image-input-action='change'\r\n                    data-bs-toggle='tooltip'\r\n                    title='Change avatar'\r\n                  >\r\n                    <i className='bi bi-pencil-fill fs-7'></i>\r\n                    <input\r\n                      type='file'\r\n                      // {...formik.getFieldProps('dark_logo')}\r\n                      name='dark_logo'\r\n                      accept='.png, .jpg, .jpeg'\r\n                      onChange={(e: any) => {\r\n                        uploadImage(e)\r\n                      }}\r\n                    />\r\n                    <input type='hidden' name='avatar_remove' />\r\n                  </label>\r\n                  {values.dark_logo != '' && (\r\n                    <button\r\n                      className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                      data-kt-image-input-action='remove'\r\n                      data-bs-toggle='tooltip'\r\n                      title='Remove avatar'\r\n                      type='button'\r\n                      onClick={() => setValue({...values, dark_logo: ''})}\r\n                    >\r\n                      <i className='bi bi-x fs-2'></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='d-block form-label'>Logo Light</label>\r\n                <div className='image-input image-input-outline' data-kt-image-input='true'>\r\n                  <div className=''>\r\n                    <img\r\n                      src={\r\n                        values.light_logo != ''\r\n                          ? values.light_logo\r\n                          : toAbsoluteUrl('/media/svg/avatars/blank.svg')\r\n                      }\r\n                      alt='avatar'\r\n                      className='image-input-wrapper w-125px h-125px'\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                    data-kt-image-input-action='change'\r\n                    data-bs-toggle='tooltip'\r\n                    title='Change avatar'\r\n                  >\r\n                    <i className='bi bi-pencil-fill fs-7'></i>\r\n                    <input\r\n                      type='file'\r\n                      name='light_logo'\r\n                      accept='.png, .jpg, .jpeg'\r\n                      onChange={(e: any) => {\r\n                        uploadImage(e)\r\n                      }}\r\n                    />\r\n                    <input type='hidden' name='avatar_remove' />\r\n                  </label>\r\n                  {values.light_logo != '' && (\r\n                    <button\r\n                      className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                      data-kt-image-input-action='remove'\r\n                      data-bs-toggle='tooltip'\r\n                      title='Remove avatar'\r\n                      type='button'\r\n                      onClick={() => setValue({...values, light_logo: ''})}\r\n                    >\r\n                      <i className='bi bi-x fs-2'></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='d-block form-label'>Fav icon</label>\r\n                <div className='image-input image-input-outline' data-kt-image-input='true'>\r\n                  <div className=''>\r\n                    <img\r\n                      src={\r\n                        values.favicon != ''\r\n                          ? values.favicon\r\n                          : toAbsoluteUrl('/media/svg/avatars/blank.svg')\r\n                      }\r\n                      alt='avatar'\r\n                      className='image-input-wrapper w-125px h-125px'\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                    data-kt-image-input-action='change'\r\n                    data-bs-toggle='tooltip'\r\n                    title='Change avatar'\r\n                  >\r\n                    <i className='bi bi-pencil-fill fs-7'></i>\r\n                    <input\r\n                      type='file'\r\n                      name='favicon'\r\n                      accept='.png, .jpg, .jpeg'\r\n                      onChange={(e: any) => {\r\n                        uploadImage(e)\r\n                      }}\r\n                    />\r\n                    <input type='hidden' name='avatar_remove' />\r\n                  </label>\r\n                  {values.favicon != '' && (\r\n                    <button\r\n                      className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\r\n                      data-kt-image-input-action='remove'\r\n                      data-bs-toggle='tooltip'\r\n                      title='Remove avatar'\r\n                      type='button'\r\n                      onClick={() => setValue({...values, favicon: ''})}\r\n                    >\r\n                      <i className='bi bi-x fs-2'></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\r\n              </div>\r\n            </div>\r\n            <div className='fv-row mb-7'>\r\n              <label className='required fw-bold fs-6 mb-2'>Company Name</label>\r\n              <input\r\n                placeholder='Enter a company name'\r\n                // {...formik.getFieldProps('name')}\r\n                type='text'\r\n                name='name'\r\n                className={clsx(\r\n                  'form-control mb-3 mb-lg-0',\r\n                  {'is-invalid': errors.name != ''}\r\n                  // {\r\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                  // }\r\n                )}\r\n                onChange={onChange}\r\n                value={values.name}\r\n                autoComplete='off'\r\n                // disabled={formik.isSubmitting}\r\n              />\r\n              {/* {formik.touched.name && formik.errors.name && ( */}\r\n              <div className='fv-plugins-message-container'>\r\n                <div className='fv-help-block'>\r\n                  <span role='alert' className='text-danger'>\r\n                    {errors.name}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* )} */}\r\n            </div>\r\n            <div className='fv-row mb-7'>\r\n              <label className='required fw-bold fs-6 mb-2'>Company Main Domain</label>\r\n              <input\r\n                placeholder='Enter a domain name'\r\n                // {...formik.getFieldProps('domain')}\r\n                type='text'\r\n                name='domain'\r\n                onChange={onChange}\r\n                value={values.domain}\r\n                className={clsx(\r\n                  'form-control mb-3 mb-lg-0',\r\n                  {'is-invalid': errors.domain != ''}\r\n                  // {\r\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                  // }\r\n                )}\r\n                autoComplete='off'\r\n                // disabled={formik.isSubmitting}\r\n              />\r\n              {/* {formik.touched.name && formik.errors.name && ( */}\r\n              <div className='fv-plugins-message-container'>\r\n                <div className='fv-help-block'>\r\n                  <span role='alert' className='text-danger'>\r\n                    {errors.domain}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* )} */}\r\n            </div>\r\n            <div className='fv-row mb-7'>\r\n              <label className='required fw-bold fs-6 mb-2'>Allowed file types</label>\r\n              <input\r\n                placeholder='Enter allowed file types'\r\n                // {...formik.getFieldProps('file_types')}\r\n                type='text'\r\n                name='file_type'\r\n                onChange={onChange}\r\n                value={values.file_type}\r\n                className={clsx(\r\n                  'form-control mb-3 mb-lg-0',\r\n                  {'is-invalid': errors.file_type != ''}\r\n                  // {\r\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                  // }\r\n                )}\r\n                autoComplete='off'\r\n                // disabled={formik.isSubmitting}\r\n              />\r\n              {/* {formik.touched.name && formik.errors.name && ( */}\r\n              <div className='fv-plugins-message-container'>\r\n                <div className='fv-help-block'>\r\n                  <span role='alert' className='text-danger'>\r\n                    {errors.file_type}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* )} */}\r\n            </div>\r\n            <Button />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {General}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport clsx from 'clsx'\r\nimport React, {FC, useEffect, useState} from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport {API_URL} from './ApiUrl'\r\nimport {Button} from './Button'\r\nimport {SettingsName} from './SettingsName'\r\n\r\nconst CompanyInfo: FC = () => {\r\n  const [values, setValue] = useState<any>({\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    name: '',\r\n    country_code: '',\r\n    zip_code: '',\r\n    phone: '',\r\n    gst: '',\r\n  })\r\n\r\n  const [errors, setErrors] = useState<any>({\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    name: '',\r\n    country_code: '',\r\n    zip_code: '',\r\n    phone: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    getInfo()\r\n  }, [])\r\n\r\n  const getInfo = async () => {\r\n    await axios\r\n      .get(`${API_URL}/company-information`)\r\n      .then((data: AxiosResponse<any>) => {\r\n        if (data.data != null) {\r\n          const newvalues = JSON.parse(data.data.value)\r\n          setValue(newvalues)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  const onChange = (e: any) => {\r\n    const {name, value} = e.target\r\n    setValue({...values, [name]: value})\r\n    setErrors({...errors, [name]: ''})\r\n  }\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    if (values.name == '') {\r\n      setErrors({...errors, name: 'Company Name is required'})\r\n      return\r\n    }\r\n    if (values.address == '') {\r\n      setErrors({...errors, address: 'Address is required'})\r\n      return\r\n    }\r\n    if (values.city == '') {\r\n      setErrors({...errors, city: 'City is required'})\r\n      return\r\n    }\r\n    if (values.state == '') {\r\n      setErrors({...errors, state: 'State is required'})\r\n      return\r\n    }\r\n    if (values.zip_code == '') {\r\n      setErrors({...errors, zip_code: 'Zip code is required'})\r\n      return\r\n    }\r\n    if (values.country_code == '') {\r\n      setErrors({...errors, country_code: 'Country code is required'})\r\n      return\r\n    }\r\n    if (values.phone == '') {\r\n      setErrors({...errors, country_code: 'Phone Number is required'})\r\n      return\r\n    }\r\n    const payload = {\r\n      name: 'company-information',\r\n      value: JSON.stringify(values),\r\n      auto_load: 0,\r\n    }\r\n    await axios\r\n      .post(API_URL, payload)\r\n      .then((data: AxiosResponse<any>) => {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: `Settings Updated!`,\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex flex-column flex-lg-row'>\r\n      <SettingsName active='company-information' />\r\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\r\n        <div className='card p-10' id='kt_chat_messenger'>\r\n          <span className='text-muted mb-10'>\r\n            These information will be displayed on invoices/estimates/payments and other PDF\r\n            documents where company info is required\r\n          </span>\r\n          <form className='form' onSubmit={onSubmit} noValidate>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Company Name</label>\r\n                <input\r\n                  placeholder='Enter a company name'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='name'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.name}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.name != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.name}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {/* )} */}\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Address</label>\r\n                <input\r\n                  placeholder='Enter address'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='address'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.address}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.address != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.address}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {/* )} */}\r\n              </div>\r\n            </div>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>City</label>\r\n                <input\r\n                  placeholder='Enter city'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='city'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.city}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.city != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.city}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>State</label>\r\n                <input\r\n                  placeholder='Enter state'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='state'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.state}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.state != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.state}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Country Code</label>\r\n                <input\r\n                  placeholder='Enter country code'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='country_code'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.country_code}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.country_code != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.country_code}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Zip Code</label>\r\n                <input\r\n                  placeholder='Enter zip code'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='zip_code'\r\n                  required\r\n                  onChange={onChange}\r\n                  value={values.zip_code}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.zip_code != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.zip_code}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Phone</label>\r\n                <input\r\n                  placeholder='Enter phone number'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  required\r\n                  name='phone'\r\n                  onChange={onChange}\r\n                  value={values.phone}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.phone != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.phone}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='fw-bold fs-6 mb-2'>GST Number</label>\r\n                <input\r\n                  placeholder='Enter gst number'\r\n                  // {...formik.getFieldProps('name')}\r\n                  type='text'\r\n                  name='gst'\r\n                  onChange={onChange}\r\n                  value={values.gst}\r\n                  className={clsx(\r\n                    'form-control mb-3 mb-lg-0'\r\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                />\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    {/* <span role='alert'>{formik.errors.name}</span> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* )} */}\r\n            <Button />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {CompanyInfo}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport axios, {AxiosResponse} from 'axios'\r\nimport clsx from 'clsx'\r\nimport {FC, useEffect, useState} from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport {API_URL} from './ApiUrl'\r\nimport {Button} from './Button'\r\nimport {SettingsName} from './SettingsName'\r\n\r\nconst Localization: FC = () => {\r\n  const [values, setValue] = useState<any>({\r\n    date_format: '',\r\n    time_format: '',\r\n    timezone: '',\r\n    language: '',\r\n  })\r\n\r\n  const [errors, setErrors] = useState<any>({\r\n    date_format: '',\r\n    time_format: '',\r\n    timezone: '',\r\n    language: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    getInfo()\r\n  }, [])\r\n\r\n  const getInfo = async () => {\r\n    await axios\r\n      .get(`${API_URL}/localization`)\r\n      .then((data: AxiosResponse<any>) => {\r\n        if (data.data != null) {\r\n          const newvalues = JSON.parse(data.data.value)\r\n          setValue(newvalues)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  const onChange = (e: any) => {\r\n    const {name, value} = e.target\r\n    setValue({...values, [name]: value})\r\n    setErrors({...errors, [name]: ''})\r\n  }\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault()\r\n    if (values.date_format == '') {\r\n      setErrors({...errors, date_format: 'Date format is required'})\r\n      return\r\n    }\r\n    if (values.time_format == '') {\r\n      setErrors({...errors, time_format: 'Time format is required'})\r\n      return\r\n    }\r\n    if (values.timezone == '') {\r\n      setErrors({...errors, timezone: 'Timezone is required'})\r\n      return\r\n    }\r\n\r\n    if (values.language == '') {\r\n      setErrors({...errors, language: 'Language is required'})\r\n      return\r\n    }\r\n\r\n    const payload = {\r\n      name: 'general',\r\n      value: JSON.stringify(values),\r\n      auto_load: 0,\r\n    }\r\n    await axios\r\n      .post(API_URL, payload)\r\n      .then((data: AxiosResponse<any>) => {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: `Settings Updated!`,\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'err')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='d-flex flex-column flex-lg-row'>\r\n      <SettingsName active={'localization'} />\r\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\r\n        <div className='card p-10' id='kt_chat_messenger'>\r\n          <form noValidate className='form' onSubmit={onSubmit}>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Date Format</label>\r\n                <select\r\n                  // {...formik.getFieldProps('name')}\r\n                  name='date_format'\r\n                  value={values.date_format}\r\n                  placeholder='Select a date format'\r\n                  onChange={onChange}\r\n                  className={clsx(\r\n                    'form-select mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.date_format != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                >\r\n                  <option></option>\r\n                  <option>d-m-Y</option>\r\n                  <option>d/m/Y</option>\r\n                  <option>m-d-Y</option>\r\n                  <option>m.d.Y</option>\r\n                  <option>m/d/Y</option>\r\n                  <option>Y-m-d</option>\r\n                  <option>d.m.Y</option>\r\n                </select>\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.date_format}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {/* )} */}\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Time Format</label>\r\n                <select\r\n                  placeholder='Enter a domain name'\r\n                  // {...formik.getFieldProps('name')}\r\n                  name='time_format'\r\n                  value={values.time_format}\r\n                  onChange={onChange}\r\n                  className={clsx(\r\n                    'form-select mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.time_format != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                >\r\n                  <option></option>\r\n                  <option>24 hours</option>\r\n                  <option>12 hours</option>\r\n                </select>\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.time_format}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                {/* )} */}\r\n              </div>\r\n            </div>\r\n            <div className='d-flex flex-wrap gap-5 mb-10'>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Default Timezone</label>\r\n                <select\r\n                  placeholder='Enter allowed file types'\r\n                  // {...formik.getFieldProps('name')}\r\n                  name='timezone'\r\n                  value={values.timezone}\r\n                  onChange={onChange}\r\n                  className={clsx(\r\n                    'form-select mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.timezone != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                >\r\n                  <option></option>\r\n                  <option>d-m-Y</option>\r\n                  <option>d/m/Y</option>\r\n                  <option>m-d-Y</option>\r\n                  <option>m.d.Y</option>\r\n                  <option>m/d/Y</option>\r\n                  <option>Y-m-d</option>\r\n                  <option>d.m.Y</option>\r\n                </select>\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.timezone}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='fv-row w-100 flex-md-root'>\r\n                <label className='required fw-bold fs-6 mb-2'>Default Language</label>\r\n                <select\r\n                  placeholder='Enter allowed file types'\r\n                  // {...formik.getFieldProps('name')}\r\n                  name='language'\r\n                  value={values.language}\r\n                  onChange={onChange}\r\n                  className={clsx(\r\n                    'form-select mb-3 mb-lg-0',\r\n                    {'is-invalid': errors.language != ''}\r\n                    // {\r\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\r\n                    // }\r\n                  )}\r\n                  autoComplete='off'\r\n                  // disabled={formik.isSubmitting || isUserLoading}\r\n                >\r\n                  <option></option>\r\n                  <option>English</option>\r\n                  <option>Hindi</option>\r\n                </select>\r\n                {/* {formik.touched.name && formik.errors.name && ( */}\r\n                <div className='fv-plugins-message-container'>\r\n                  <div className='fv-help-block'>\r\n                    <span role='alert' className='text-danger'>\r\n                      {errors.language}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* )} */}\r\n            <Button />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Localization}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Finance: FC = () => {\n  const [values, setValue] = useState<any>({\n    decimal: '',\n    thousand: '',\n    currency_placement: '',\n    tax: '',\n    enable: '',\n    number_words: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    decimal: '',\n    thousand: '',\n    currency_placement: '',\n    enable: '',\n    number_words: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/finance`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    e.preventDefault()\n    if (values.decimal == '') {\n      setErrors({...errors, decimal: 'Decimal seperator is required'})\n      return\n    }\n    if (values.thousand == '') {\n      setErrors({...errors, thousand: 'Thousand separator is required'})\n      return\n    }\n    if (values.currency_placement == '') {\n      setErrors({...errors, currency_placement: 'Currency placement is required'})\n      return\n    }\n\n    if (values.enable == '') {\n      setErrors({...errors, enable: 'Enable is required'})\n      return\n    }\n\n    if (values.number_words == '') {\n      setErrors({...errors, number_words: 'Number words is required'})\n      return\n    }\n\n    const payload = {\n      name: 'finance',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'finance'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Decimal Separator</label>\n                <select\n                  name='decimal'\n                  onChange={onChange}\n                  value={values.decimal}\n                  className={clsx('form-select mb-3 mb-lg-0', {'is-invalid': errors.decimal != ''})}\n                  autoComplete='off'\n                >\n                  <option></option>\n                  <option>.</option>\n                  <option>,</option>\n                </select>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.decimal}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Thousand Separator</label>\n                <select\n                  // {...formik.getFieldProps('name')}\n                  name='thousand'\n                  onChange={onChange}\n                  value={values.thousand}\n                  className={clsx('form-select mb-3 mb-lg-0', {\n                    'is-invalid': errors.thousand != '',\n                  })}\n                  autoComplete='off'\n                >\n                  <option></option>\n                  <option>,</option>\n                  <option>.</option>\n                  <option>'</option>\n                  <option>none</option>\n                  <option> space</option>\n                </select>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.thousand}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Currency Placement</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='currency_placement'\n                    onChange={onChange}\n                    checked={values.currency_placement == '0'}\n                    type={'radio'}\n                    value='0'\n                    id='before'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='before'>\n                    <div className='fw-bolder text-gray-800'>Before Amount ( ₹25.00 )</div>\n                  </label>\n                  <input\n                    name='currency_placement'\n                    type={'radio'}\n                    value='1'\n                    onChange={onChange}\n                    checked={values.currency_placement == '1'}\n                    id='after'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='after'>\n                    <div className='fw-bolder text-gray-800'>After Amount ( 25.00₹ )</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.currency_placement}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='fw-bold fs-6 mb-2'>Default Tax</label>\n                <select\n                  name='tax'\n                  onChange={onChange}\n                  value={values.tax}\n                  className={clsx('form-select mb-3 mb-lg-0')}\n                  autoComplete='off'\n                >\n                  <option></option>\n                  <option>No Tax</option>\n                  <option>9.00% CGST|9.00</option>\n                  <option>9.00% SGST|9.00</option>\n                </select>\n              </div>\n            </div>\n            <h4 className='mt-5'>Amount to words</h4>\n            <div className='text-muted mb-3'>\n              Output total amount to words in invoice/estimate/proposal\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-5 mt-5'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Enable</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='enable'\n                    type={'radio'}\n                    value='0'\n                    id='yes'\n                    onChange={onChange}\n                    checked={values.enable == '0'}\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='enable'\n                    type={'radio'}\n                    value='1'\n                    onChange={onChange}\n                    checked={values.enable == '1'}\n                    id='no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.enable}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Number words into lowercase</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='number_words'\n                    onChange={onChange}\n                    checked={values.number_words == '0'}\n                    type={'radio'}\n                    value='0'\n                    id='lowercase_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='lowercase_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='number_words'\n                    type={'radio'}\n                    value='1'\n                    onChange={onChange}\n                    checked={values.number_words == '1'}\n                    id='lowercase_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='lowercase_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.number_words}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Finance}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst PaymentGateway: FC = () => {\n  const [values, setValue] = useState<any>({\n    active: '',\n    label: '',\n    key: '',\n    salt: '',\n    description: '',\n    currency: '',\n    enable: '',\n    selected: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    active: '',\n    label: '',\n    key: '',\n    salt: '',\n    currency: '',\n    enable: '',\n    selected: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/payment-gateways`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.active == '') {\n      setErrors({...errors, active: 'Active is required'})\n      return\n    }\n    if (values.label == '') {\n      setErrors({...errors, label: 'Label is required'})\n      return\n    }\n    if (values.key == '') {\n      setErrors({...errors, key: 'Key is required'})\n      return\n    }\n\n    if (values.salt == '') {\n      setErrors({...errors, salt: 'Salt is required'})\n      return\n    }\n    if (values.currency == '') {\n      setErrors({...errors, currency: 'Currency is required'})\n      return\n    }\n    if (values.enable == '') {\n      setErrors({...errors, enable: 'Test mode is required'})\n      return\n    }\n\n    if (values.selected == '') {\n      setErrors({...errors, selected: 'Selected is required'})\n      return\n    }\n\n    const payload = {\n      name: 'payment-gateways',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'payment-gateways'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <div className='d-flex'>\n            <h4>RazorPay</h4>\n          </div>\n          <div className='separator separator-dashed my-5'></div>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Active</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='active'\n                    type={'radio'}\n                    value='0'\n                    onChange={onChange}\n                    checked={values.active == '0'}\n                    id='active_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='active_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='active'\n                    type={'radio'}\n                    onChange={onChange}\n                    checked={values.active == '1'}\n                    value='1'\n                    id='active_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='active_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.active}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Label</label>\n                <input\n                  name='label'\n                  onChange={onChange}\n                  value={values.label}\n                  className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.active != ''})}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.label}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Key</label>\n                <input\n                  placeholder='Enter a razorpay key'\n                  name='key'\n                  onChange={onChange}\n                  value={values.key}\n                  className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.key != ''})}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.key}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Salt</label>\n                <input\n                  placeholder='Enter a razorpay salt'\n                  name='salt'\n                  onChange={onChange}\n                  value={values.salt}\n                  className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.salt != ''})}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.salt}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='fw-bold fs-6 mb-2'>Gateway Dashbord Payment Description</label>\n                <textarea\n                  placeholder='Enter a description'\n                  rows={3}\n                  name='description'\n                  onChange={onChange}\n                  value={values.description}\n                  className={clsx(\n                    'form-control mb-3 mb-lg-0'\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                {/* {formik.touched.name && formik.errors.name && ( */}\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    {/* <span role='alert'>{formik.errors.name}</span> */}\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Currency</label>\n                <input\n                  placeholder='Enter a currency'\n                  name='currency'\n                  onChange={onChange}\n                  value={values.currency}\n                  className={clsx('form-control mb-3 mb-lg-0', {\n                    'is-invalid': errors.currency != '',\n                  })}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.currency}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Enable Test Mode</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='enable'\n                    type={'radio'}\n                    onChange={onChange}\n                    checked={values.enable == '0'}\n                    value='0'\n                    id='yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='enable'\n                    type={'radio'}\n                    value='1'\n                    id='no'\n                    onChange={onChange}\n                    checked={values.enable == '1'}\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.enable}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Selected by default on invoice</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='selected'\n                    type={'radio'}\n                    value='0'\n                    onChange={onChange}\n                    checked={values.selected == '0'}\n                    id='on_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='on_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='selected'\n                    type={'radio'}\n                    value='1'\n                    onChange={onChange}\n                    checked={values.selected == '1'}\n                    id='on_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='on_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                  <div className='fv-plugins-message-container'>\n                    <div className='fv-help-block'>\n                      <span role='alert' className='text-danger'>\n                        {errors.selected}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {PaymentGateway}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Customers: FC = () => {\n  const [values, setValue] = useState<any>({\n    theme: '',\n    country: '',\n    register: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    theme: '',\n    country: '',\n    register: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/customers`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    e.preventDefault()\n    if (values.theme == '') {\n      setErrors({...errors, theme: 'Theme is required'})\n      return\n    }\n    if (values.country == '') {\n      setErrors({...errors, country: 'Country is required'})\n      return\n    }\n    if (values.register == '') {\n      setErrors({...errors, register: 'Allow customers to register is required'})\n      return\n    }\n\n    const payload = {\n      name: 'customers',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'customers'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Default customers theme</label>\n                <select\n                  name='theme'\n                  onChange={onChange}\n                  value={values.theme}\n                  className={clsx('form-select mb-3 mb-lg-0', {'is-invalid': errors.theme != ''})}\n                  autoComplete='off'\n                >\n                  <option></option>\n                  <option>Datacube</option>\n                  <option>Clc</option>\n                </select>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.theme}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Default Country</label>\n                <select\n                  name='country'\n                  onChange={onChange}\n                  value={values.country}\n                  className={clsx('form-select mb-3 mb-lg-0', {'is-invalid': errors.country != ''})}\n                  autoComplete='off'\n                >\n                  <option></option>\n                  <option>India</option>\n                  <option>America</option>\n                </select>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.country}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className='fv-row w-100 flex-md-root'>\n              <label className='required fw-bold fs-6 mb-2'>Allow customers to register</label>\n              <div className='form-check form-check-custom form-check-solid gap-3'>\n                <input\n                  name='register'\n                  type={'radio'}\n                  onChange={onChange}\n                  checked={values.register == '0'}\n                  value='0'\n                  id='yes'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='yes'>\n                  <div className='fw-bolder text-gray-800'>Yes</div>\n                </label>\n                <input\n                  name='register'\n                  type={'radio'}\n                  value='1'\n                  onChange={onChange}\n                  checked={values.register == '1'}\n                  id='no'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='no'>\n                  <div className='fw-bolder text-gray-800'>No</div>\n                </label>\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.register}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Customers}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Pdf: FC = () => {\n  const [values, setValue] = useState<any>({\n    font: '',\n    size: 0,\n    heading_color: '',\n    text_color: '',\n    logo_url: '',\n    logo_width: 0,\n    show_invoice_status: '',\n    show_invoice_link: '',\n    show_invoice_payment: '',\n    show_page_number: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    font: '',\n    size: '',\n    heading_color: '',\n    text_color: '',\n    logo_url: '',\n    logo_width: '',\n    show_invoice_status: '',\n    show_invoice_link: '',\n    show_invoice_payment: '',\n    show_page_number: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/pdf`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.font == '') {\n      setErrors({...errors, font: 'Pdf font is required'})\n      return\n    }\n    if (values.size == '') {\n      setErrors({...errors, size: 'Font size is required'})\n      return\n    }\n    if (values.heading_color == '') {\n      setErrors({...errors, heading_color: 'Heading color is required'})\n      return\n    }\n\n    if (values.text_color == '') {\n      setErrors({...errors, text_color: 'Heading text color is required'})\n      return\n    }\n\n    if (values.logo_url == '') {\n      setErrors({...errors, logo_url: 'Company logo url is required'})\n      return\n    }\n    if (values.logo_width == '') {\n      setErrors({...errors, logo_width: 'Logo width is required'})\n      return\n    }\n\n    if (values.show_invoice_status == '') {\n      setErrors({...errors, show_invoice_status: 'Required'})\n      return\n    }\n\n    if (values.show_invoice_link == '') {\n      setErrors({...errors, show_invoice_link: 'Required'})\n      return\n    }\n\n    if (values.show_invoice_payment == '') {\n      setErrors({...errors, show_invoice_payment: 'Required'})\n      return\n    }\n    if (values.show_page_number == '') {\n      setErrors({...errors, signature: 'Required'})\n      return\n    }\n\n    const payload = {\n      name: 'pdf',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'PDF'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>PDF Font</label>\n                <select\n                  name='font'\n                  onChange={onChange}\n                  value={values.font}\n                  className={clsx(\n                    'form-select mb-3 mb-lg-0',\n                    {'is-invalid': errors.font != ''}\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                >\n                  <option></option>\n                  <option>freesans</option>\n                  <option>symbol</option>\n                </select>\n                {/* {formik.touched.name && formik.errors.name && ( */}\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.font}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Default font size</label>\n                <input\n                  // {...formik.getFieldProps('name')}\n                  name='size'\n                  type={'number'}\n                  onChange={onChange}\n                  value={values.size}\n                  className={clsx(\n                    'form-control mb-3 mb-lg-0',\n                    {'is-invalid': errors.size}\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                {/* {formik.touched.name && formik.errors.name && ( */}\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.size}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Items table heading color</label>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <input\n                    name='heading_color'\n                    onChange={onChange}\n                    value={values.heading_color}\n                    autoComplete='off'\n                    className={clsx('form-control mb-3 mb-lg-0 w-100', {\n                      'is-invalid': errors.heading_color != '',\n                    })}\n                  />\n                  <input\n                    name='heading_color'\n                    type={'color'}\n                    onChange={onChange}\n                    value={values.heading_color}\n                    style={{width: '10%'}}\n                    autoComplete='off'\n                  />\n                </div>\n\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.heading_color}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Items table heading text color</label>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                  <input\n                    className={clsx('form-control mb-3 mb-lg-0 w-100', {\n                      'is-invalid': errors.heading_color != '',\n                    })}\n                    name='text_color'\n                    onChange={onChange}\n                    value={values.text_color}\n                    autoComplete='off'\n                  />\n                  <input\n                    style={{width: '10%'}}\n                    name='text_color'\n                    onChange={onChange}\n                    value={values.text_color}\n                    type={'color'}\n                    autoComplete='off'\n                  />\n                </div>\n                {/* {formik.touched.name && formik.errors.name && ( */}\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.text_color}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Custom PDF Company Logo URL</label>\n                <input\n                  name='logo_url'\n                  onChange={onChange}\n                  value={values.logo_url}\n                  className={clsx(\n                    'form-control mb-3 mb-lg-0',\n                    {'is-invalid': errors.logo_url != ''}\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                />\n\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.logo_url}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Logo Width (PX)</label>\n                <input\n                  name='logo_width'\n                  onChange={onChange}\n                  value={values.logo_width}\n                  type={'number'}\n                  className={clsx('form-control mb-3 mb-lg-0', {\n                    'is-invalid': errors.logo_width != '',\n                  })}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.logo_width}\n                    </span>\n                  </div>\n                </div>\n                {/* )} */}\n              </div>\n            </div>\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>\n                  Show Invoice/Estimate/Credit Note status on PDF documents\n                </label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='show_invoice_status'\n                    type={'radio'}\n                    onChange={onChange}\n                    checked={values.show_invoice_status == '0'}\n                    value='0'\n                    id='yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='show_invoice_status'\n                    type={'radio'}\n                    value='1'\n                    onChange={onChange}\n                    checked={values.show_invoice_status == '1'}\n                    id='no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.show_invoice_status}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>\n                  Show Pay Invoice link to PDF (Not applied if invoice status is Cancelled)\n                </label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='show_invoice_link'\n                    onChange={onChange}\n                    checked={values.show_invoice_link == '0'}\n                    type={'radio'}\n                    value='0'\n                    id='link_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='link_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='show_invoice_link'\n                    onChange={onChange}\n                    checked={values.show_invoice_link == '1'}\n                    type={'radio'}\n                    value='1'\n                    id='link_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='link_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.show_invoice_link}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='d-flex flex-wrap gap-5 mb-10'>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>\n                  Show invoice payments (transactions) on PDF\n                </label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='show_invoice_payment'\n                    onChange={onChange}\n                    checked={values.show_invoice_payment == '0'}\n                    type={'radio'}\n                    value='0'\n                    id='payment_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='payment_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='show_invoice_payment'\n                    onChange={onChange}\n                    checked={values.show_invoice_payment == '1'}\n                    type={'radio'}\n                    value='1'\n                    id='payment_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='payment_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.show_invoice_payment}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className='fv-row w-100 flex-md-root'>\n                <label className='required fw-bold fs-6 mb-2'>Show page number on PDF</label>\n                <div className='form-check form-check-custom form-check-solid gap-3'>\n                  <input\n                    name='show_page_number'\n                    onChange={onChange}\n                    checked={values.show_page_number == '0'}\n                    type={'radio'}\n                    value='0'\n                    id='page_yes'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='page_yes'>\n                    <div className='fw-bolder text-gray-800'>Yes</div>\n                  </label>\n                  <input\n                    name='show_page_number'\n                    onChange={onChange}\n                    checked={values.show_page_number == '1'}\n                    type={'radio'}\n                    value='1'\n                    id='page_no'\n                    className={clsx('form-check-input mb-3 mb-lg-0')}\n                    autoComplete='off'\n                  />\n                  <label className='form-check-label' htmlFor='page_no'>\n                    <div className='fw-bolder text-gray-800'>No</div>\n                  </label>\n                </div>\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.show_page_number}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Pdf}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Sms: FC = () => {\n  const [values, setValue] = useState<any>({\n    sender_id: '',\n    key: '',\n    active: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const [errors, setErrors] = useState<any>({\n    sender_id: '',\n    key: '',\n    active: '',\n  })\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/sms`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n\n    if (values.sender_id == '') {\n      setErrors({...errors, sender_id: 'Sender Id is required'})\n      return\n    }\n    if (values.key == '') {\n      setErrors({...errors, key: 'Key is required'})\n      return\n    }\n\n    if (values.active == '') {\n      setErrors({...errors, active: 'Active is required'})\n      return\n    }\n\n    const payload = {\n      name: 'sms',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'SMS'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <h4>MSG91</h4>\n          <span className='text-muted'>\n            MSG91 SMS integration is one way messaging, means that your customers won't be able to\n            reply to the SMS.\n          </span>\n          <div className='separator separator-dashed my-5'></div>\n          {/* </div> */}\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Sender ID</label>\n              <input\n                name='sender_id'\n                onChange={onChange}\n                value={values.sender_id}\n                className={clsx('form-control mb-3 mb-lg-0', {\n                  'is-invalid': errors.sender_id != '',\n                })}\n                autoComplete='off'\n              />\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.sender_id}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Key</label>\n              <input\n                placeholder='Enter a key'\n                name='key'\n                onChange={onChange}\n                value={values.key}\n                className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.key != ''})}\n                autoComplete='off'\n              />\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.key}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Active</label>\n              <div className='form-check form-check-custom form-check-solid gap-3'>\n                <input\n                  name='active'\n                  onChange={onChange}\n                  checked={values.active == '0'}\n                  type={'radio'}\n                  value='0'\n                  id='active_yes'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='active_yes'>\n                  <div className='fw-bolder text-gray-800'>Yes</div>\n                </label>\n                <input\n                  name='active'\n                  type={'radio'}\n                  onChange={onChange}\n                  checked={values.active == '1'}\n                  value='1'\n                  id='active_no'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='active_no'>\n                  <div className='fw-bolder text-gray-800'>No</div>\n                </label>\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>{errors.active}</span>\n                </div>\n              </div>\n            </div>\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Sms}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Cronjob: FC = () => {\n  const [values, setValue] = useState<any>({\n    hour: 0,\n    send_reminder: 0,\n    resend_reminder: 0,\n    recurring_invoice: '',\n    create_new_invoice: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    hour: '',\n    send_reminder: '',\n    resend_reminder: '',\n    recurring_invoice: '',\n    create_new_invoice: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/cron-jobs`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.hour == 0) {\n      setErrors({...errors, hour: 'Hour of day is required'})\n      return\n    }\n    if (values.send_reminder == 0) {\n      setErrors({...errors, send_reminder: 'Auto send reminder is required'})\n      return\n    }\n\n    if (values.resend_reminder == 0) {\n      setErrors({...errors, resend_reminder: 'Auto re-send reminder is required'})\n      return\n    }\n\n    if (values.recurring_invoice == '') {\n      setErrors({...errors, recurring_invoice: 'Recurring invoice is required'})\n      return\n    }\n\n    if (values.create_new_invoice == '') {\n      setErrors({...errors, create_new_invoice: 'Create new invoice is required'})\n      return\n    }\n\n    const payload = {\n      name: 'cron-jobs',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'cron-jobs'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>\n                Hour of day to perform automatic operations\n              </label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='hour'\n                onChange={onChange}\n                value={values.hour}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.hour != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.hour}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Auto send reminder after</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='send_reminder'\n                onChange={onChange}\n                value={values.send_reminder}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.send_reminder != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.send_reminder}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>\n                Auto re-send reminder after (days)\n              </label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='resend_reminder'\n                type={'number'}\n                onChange={onChange}\n                value={values.resend_reminder}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.resend_reminder != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.resend_reminder}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-5'>Recurring Invoices</label>\n\n              <div className='d-flex fv-row'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    name='recurring_invoice'\n                    type='radio'\n                    value='0'\n                    onChange={onChange}\n                    checked={values.recurring_invoice == '0'}\n                    id='kt_modal_update_role_option_0'\n                  />\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_0'>\n                    <div className='fw-bolder text-gray-800'>\n                      Generate and autosend the renewed invoice to the customer\n                    </div>\n                  </label>\n                </div>\n              </div>\n              <div className='d-flex fv-row my-2'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    type='radio'\n                    value='1'\n                    name='recurring_invoice'\n                    onChange={onChange}\n                    checked={values.recurring_invoice == '1'}\n                    id='kt_modal_update_role_option_1'\n                  />\n\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_1'>\n                    <div className='fw-bolder text-gray-800'>Generate a Unpaid Invoice</div>\n                  </label>\n                </div>\n              </div>\n\n              <div className='d-flex fv-row'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    name='recurring_invoice'\n                    onChange={onChange}\n                    checked={values.recurring_invoice == '2'}\n                    type='radio'\n                    value='2'\n                    id='kt_modal_update_role_option_2'\n                  />\n\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_2'>\n                    <div className='fw-bolder text-gray-800'>Generate a Draft Invoice</div>\n                  </label>\n                </div>\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.recurring_invoice}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>\n                Create new invoice from recurring invoice only if the invoice is with status paid?\n              </label>\n              <div className='form-check form-check-custom form-check-solid gap-3'>\n                <input\n                  // {...formik.getFieldProps('name')}\n                  name='create_new_invoice'\n                  onChange={onChange}\n                  checked={values.create_new_invoice == '0'}\n                  type={'radio'}\n                  value='0'\n                  id='yes'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='yes'>\n                  <div className='fw-bolder text-gray-800'>Yes</div>\n                </label>\n                <input\n                  name='create_new_invoice'\n                  onChange={onChange}\n                  checked={values.create_new_invoice == '1'}\n                  type={'radio'}\n                  value='1'\n                  id='no'\n                  className={clsx('form-check-input mb-3 mb-lg-0')}\n                  autoComplete='off'\n                />\n                <label className='form-check-label' htmlFor='no'>\n                  <div className='fw-bolder text-gray-800'>No</div>\n                </label>\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.create_new_invoice}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Cronjob}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Misc: FC = () => {\n  const [values, setValue] = useState<any>({\n    scroll_responsive: '',\n    save_last: '',\n    export_button: '',\n    pagination_limit: 0,\n  })\n\n  const [errors, setErrors] = useState<any>({\n    scroll_responsive: '',\n    save_last: '',\n    export_button: '',\n    pagination_limit: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/misc`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.scroll_responsive == '') {\n      setErrors({...errors, scroll_responsive: 'Activate scroll responsive is required'})\n      return\n    }\n    if (values.save_last == '') {\n      setErrors({...errors, save_last: 'Save last order is required'})\n      return\n    }\n\n    if (values.export_button == 0) {\n      setErrors({...errors, export_button: 'Show export button is required'})\n      return\n    }\n\n    if (values.pagination_limit == 0) {\n      setErrors({...errors, pagination_limit: 'Table pagination limit is required'})\n      return\n    }\n\n    const payload = {\n      name: 'misc',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'misc'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <h4>Tables</h4>\n          <div className='separator separator-dashed my-5'></div>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>\n                Activate Scroll Responsive Tables\n              </label>\n              <div className='form-check form-check-custom form-check-solid gap-3'>\n                <input\n                  name='scroll_responsive'\n                  onChange={onChange}\n                  checked={values.scroll_responsive == '0'}\n                  type={'radio'}\n                  value='0'\n                  id='yes'\n                  className={clsx(\n                    'form-check-input mb-3 mb-lg-0'\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                <label className='form-check-label' htmlFor='yes'>\n                  <div className='fw-bolder text-gray-800'>Yes</div>\n                </label>\n                <input\n                  // {...formik.getFieldProps('name')}\n                  name='scroll_responsive'\n                  onChange={onChange}\n                  checked={values.scroll_responsive == '1'}\n                  type={'radio'}\n                  value='1'\n                  id='no'\n                  className={clsx(\n                    'form-check-input mb-3 mb-lg-0'\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                <label className='form-check-label' htmlFor='no'>\n                  <div className='fw-bolder text-gray-800'>No</div>\n                </label>\n                {/* {formik.touched.name && formik.errors.name && ( */}\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.scroll_responsive}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Save last order for tables</label>\n              <div className='form-check form-check-custom form-check-solid gap-3'>\n                <input\n                  // {...formik.getFieldProps('name')}\n                  name='save_last'\n                  onChange={onChange}\n                  checked={values.save_last == '0'}\n                  type={'radio'}\n                  value='0'\n                  id='last_yes'\n                  className={clsx(\n                    'form-check-input mb-3 mb-lg-0'\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                <label className='form-check-label' htmlFor='last_yes'>\n                  <div className='fw-bolder text-gray-800'>Yes</div>\n                </label>\n                <input\n                  // {...formik.getFieldProps('name')}\n                  name='save_last'\n                  onChange={onChange}\n                  checked={values.save_last == '1'}\n                  type={'radio'}\n                  value='1'\n                  id='last_no'\n                  className={clsx(\n                    'form-check-input mb-3 mb-lg-0'\n                    // {'is-invalid': formik.touched.name && formik.errors.name},\n                    // {\n                    //   'is-valid': formik.touched.name && !formik.errors.name,\n                    // }\n                  )}\n                  autoComplete='off'\n                  // disabled={formik.isSubmitting || isUserLoading}\n                />\n                <label className='form-check-label' htmlFor='last_no'>\n                  <div className='fw-bolder text-gray-800'>No</div>\n                </label>\n                {/* {formik.touched.name && formik.errors.name && ( */}\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.save_last}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-5'>Show table export button</label>\n\n              <div className='d-flex fv-row'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    name='export_button'\n                    onChange={onChange}\n                    checked={values.export_button == '0'}\n                    type='radio'\n                    value='0'\n                    id='kt_modal_update_role_option_0'\n                  />\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_0'>\n                    <div className='fw-bolder text-gray-800'>To all staff members</div>\n                  </label>\n                </div>\n              </div>\n              <div className='d-flex fv-row my-2'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    name='export_button'\n                    onChange={onChange}\n                    checked={values.export_button == '1'}\n                    type='radio'\n                    value='1'\n                    id='kt_modal_update_role_option_1'\n                  />\n\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_1'>\n                    <div className='fw-bolder text-gray-800'>Only to administrators</div>\n                  </label>\n                </div>\n              </div>\n\n              <div className='d-flex fv-row'>\n                <div className='form-check form-check-custom form-check-solid'>\n                  <input\n                    className='form-check-input me-3'\n                    name='export_button'\n                    onChange={onChange}\n                    checked={values.export_button == '2'}\n                    type='radio'\n                    value='2'\n                    id='kt_modal_update_role_option_2'\n                  />\n\n                  <label className='form-check-label' htmlFor='kt_modal_update_role_option_2'>\n                    <div className='fw-bolder text-gray-800'>\n                      Hide export button for all staff members\n                    </div>\n                  </label>\n                </div>\n              </div>\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.export_button}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Tables Pagination Limit</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='pagination_limit'\n                onChange={onChange}\n                value={values.pagination_limit}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.pagination_limit != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.pagination_limit}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Misc}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport Swal from 'sweetalert2'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst CashBonus: FC = () => {\n  const [values, setValue] = useState<any>({\n    cash_bonus: 0,\n    referral: 0,\n    max_usable_cash_bonus: 0,\n  })\n\n  const [errors, setErrors] = useState<any>({\n    cash_bonus: '',\n    referral: '',\n    max_usable_cash_bonus: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/cash-bonus`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.cash_bonus == 0) {\n      setErrors({...errors, cash_bonus: 'New User Cash Bonus Amount is required'})\n      return\n    }\n    if (values.referral == 0) {\n      setErrors({...errors, referral: 'Referral Bonus on New User is required'})\n      return\n    }\n\n    if (values.max_usable_cash_bonus == 0) {\n      setErrors({...errors, max_usable_cash_bonus: 'Maximum Usable Cash Bonus is required'})\n      return\n    }\n\n    const payload = {\n      name: 'cash-bonus',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'cash-bonus'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>New User Cash Bonus Amount</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='cash_bonus'\n                onChange={onChange}\n                value={values.cash_bonus}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.cash_bonus != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.cash_bonus}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Referral Bonus on New User</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='referral'\n                onChange={onChange}\n                value={values.referral}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.referral != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.referral}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Maximum Usable Cash Bonus</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='max_usable_cash_bonus'\n                onChange={onChange}\n                value={values.max_usable_cash_bonus}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.max_usable_cash_bonus != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.max_usable_cash_bonus}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {CashBonus}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport Swal from 'sweetalert2'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst WalletMinBalance: FC = () => {\n  const [values, setValue] = useState<any>({\n    min_amount_wallet: 0,\n    min_amount_withdrawal: 0,\n  })\n\n  const [errors, setErrors] = useState<any>({\n    min_amount_wallet: '',\n    min_amount_withdrawal: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/wallet-minimum-balance`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.min_amount_wallet == 0) {\n      setErrors({...errors, min_amount_wallet: 'Minimum Amount Add to Wallet is required'})\n      return\n    }\n    if (values.min_amount_withdrawal == 0) {\n      setErrors({...errors, min_amount_withdrawal: 'Minimum Amount to Withdrawal is required'})\n      return\n    }\n\n    const payload = {\n      name: 'wallet-minimum-balance',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'wallet-minimun-balance'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Minimum Amount Add to Wallet</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='min_amount_wallet'\n                type={'number'}\n                onChange={onChange}\n                value={values.min_amount_wallet}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.min_amount_wallet != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.min_amount_wallet}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <div className='fv-row w-100 mb-10'>\n              <label className='required fw-bold fs-6 mb-2'>Minimum Amount to Withdrawal</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='min_amount_withdrawal'\n                onChange={onChange}\n                value={values.min_amount_withdrawal}\n                type={'number'}\n                className={clsx(\n                  'form-control mb-3 mb-lg-0',\n                  {'is-invalid': errors.min_amount_withdrawal != ''}\n                  // {\n                  //   'is-valid': formik.touched.name && !formik.errors.name,\n                  // }\n                )}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.min_amount_withdrawal}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {WalletMinBalance}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport Swal from 'sweetalert2'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst AppCurVersion: FC = () => {\n  const [values, setValue] = useState<any>({\n    current_version: '',\n  })\n\n  const [errors, setErrors] = useState<any>({\n    current_version: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/app-current-version`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.current_version == '') {\n      setErrors({...errors, current_version: 'App Current Version is required'})\n      return\n    }\n\n    const payload = {\n      name: 'app-current-version',\n      value: JSON.stringify(values),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        getInfo()\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'app-current-version'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='fv-row w-100 mb-5'>\n              <label className='required fw-bold fs-6 mb-2'>App Current Version</label>\n              <input\n                // {...formik.getFieldProps('name')}\n                name='current_version'\n                onChange={onChange}\n                value={values.current_version}\n                className={clsx('form-control mb-3 mb-lg-0', {\n                  'is-invalid': errors.current_version != '',\n                })}\n                autoComplete='off'\n                // disabled={formik.isSubmitting || isUserLoading}\n              />\n              {/* {formik.touched.name && formik.errors.name && ( */}\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert' className='text-danger'>\n                    {errors.current_version}\n                  </span>\n                </div>\n              </div>\n              {/* )} */}\n            </div>\n\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {AppCurVersion}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Spinwin: FC = () => {\n  const [values, setValue] = useState<any>({\n    background: '',\n    nob: '',\n    circle: '',\n    circle_border: '',\n    circle_border_gif: '',\n  })\n\n  useEffect(() => {\n    getInfo()\n  }, [])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/spin-the-wheel`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          setValue(newvalues)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const uploadImage = async (e: any) => {\n    const {name} = e.currentTarget\n    const file = e.currentTarget.files[0]\n    const fd = new FormData()\n    fd.append('image', file)\n    await axios\n      .post(`${API_URL}/upload`, fd)\n      .then((data: AxiosResponse<any>) => {\n        setValue({...values, [name]: data.data})\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    setValue({...values, [name]: value})\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'spin-the-wheel'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <form noValidate className='form'>\n            <div className='fv-row w-100 mb-10'>\n              <label className='d-block form-label'>Spin Wheel Background Image</label>\n              <div className='image-input image-input-outline' data-kt-image-input='true'>\n                <img\n                  src={\n                    values.background != ''\n                      ? values.background\n                      : toAbsoluteUrl('/media/svg/avatars/blank.svg')\n                  }\n                  alt='avatar'\n                  className='image-input-wrapper w-225px h-225px'\n                />\n                <label\n                  className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                  data-kt-image-input-action='change'\n                  data-bs-toggle='tooltip'\n                  title='Change avatar'\n                >\n                  <i className='bi bi-pencil-fill fs-7'></i>\n                  <input\n                    type='file'\n                    name='background'\n                    accept='.png, .jpg, .jpeg'\n                    onChange={uploadImage}\n                  />\n                  <input type='hidden' name='avatar_remove' />\n                </label>\n                {values.background != '' && (\n                  <button\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                    data-kt-image-input-action='remove'\n                    data-bs-toggle='tooltip'\n                    title='Remove avatar'\n                    type='button'\n                    onClick={() => setValue({...values, background: ''})}\n                  >\n                    <i className='bi bi-x fs-2'></i>\n                  </button>\n                )}\n              </div>\n              <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\n            </div>\n            <div className='fv-row w-100 mb-10'>\n              <label className='d-block form-label'>Spin Wheel Nob Image</label>\n              <div className='image-input image-input-outline' data-kt-image-input='true'>\n                <img\n                  src={\n                    values.nob != '' ? values.nob : toAbsoluteUrl('/media/svg/avatars/blank.svg')\n                  }\n                  alt='avatar'\n                  className='image-input-wrapper w-225px h-225px'\n                />\n                <label\n                  className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                  data-kt-image-input-action='change'\n                  data-bs-toggle='tooltip'\n                  title='Change avatar'\n                >\n                  <i className='bi bi-pencil-fill fs-7'></i>\n                  <input\n                    type='file'\n                    name='nob'\n                    accept='.png, .jpg, .jpeg'\n                    onChange={uploadImage}\n                  />\n                  <input type='hidden' name='avatar_remove' />\n                </label>\n                {values.nob != '' && (\n                  <button\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                    data-kt-image-input-action='remove'\n                    data-bs-toggle='tooltip'\n                    title='Remove avatar'\n                    type='button'\n                    onClick={() => setValue({...values, nob: ''})}\n                  >\n                    <i className='bi bi-x fs-2'></i>\n                  </button>\n                )}\n              </div>\n              <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\n            </div>\n            <div className='fv-row w-100 mb-10'>\n              <label className='d-block form-label'>Spin Wheel Circle Image</label>\n              <div className='image-input image-input-outline' data-kt-image-input='true'>\n                <img\n                  src={\n                    values.circle != ''\n                      ? values.circle\n                      : toAbsoluteUrl('/media/svg/avatars/blank.svg')\n                  }\n                  alt='avatar'\n                  className='image-input-wrapper w-225px h-225px'\n                />\n                <label\n                  className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                  data-kt-image-input-action='change'\n                  data-bs-toggle='tooltip'\n                  title='Change avatar'\n                >\n                  <i className='bi bi-pencil-fill fs-7'></i>\n                  <input\n                    type='file'\n                    name='circle'\n                    accept='.png, .jpg, .jpeg'\n                    onChange={uploadImage}\n                  />\n                  <input type='hidden' name='avatar_remove' />\n                </label>\n                {values.circle != '' && (\n                  <button\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                    data-kt-image-input-action='remove'\n                    data-bs-toggle='tooltip'\n                    title='Remove avatar'\n                    type='button'\n                    onClick={() => setValue({...values, circle: ''})}\n                  >\n                    <i className='bi bi-x fs-2'></i>\n                  </button>\n                )}\n              </div>\n              <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\n            </div>\n            <div className='fv-row w-100 mb-10'>\n              <label className='d-block form-label'>Spin Wheel Circle Border Image</label>\n              <div className='image-input image-input-outline' data-kt-image-input='true'>\n                <img\n                  src={\n                    values.circle_border != ''\n                      ? values.circle_border\n                      : toAbsoluteUrl('/media/svg/avatars/blank.svg')\n                  }\n                  alt='avatar'\n                  className='image-input-wrapper w-225px h-225px'\n                />\n                <label\n                  className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                  data-kt-image-input-action='change'\n                  data-bs-toggle='tooltip'\n                  title='Change avatar'\n                >\n                  <i className='bi bi-pencil-fill fs-7'></i>\n                  <input\n                    type='file'\n                    name='circle_border'\n                    accept='.png, .jpg, .jpeg'\n                    onChange={uploadImage}\n                  />\n                  <input type='hidden' name='avatar_remove' />\n                </label>\n                {values.circle_border != '' && (\n                  <button\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                    data-kt-image-input-action='remove'\n                    data-bs-toggle='tooltip'\n                    title='Remove avatar'\n                    type='button'\n                    onClick={() => setValue({...values, circle_border: ''})}\n                  >\n                    <i className='bi bi-x fs-2'></i>\n                  </button>\n                )}\n              </div>\n              <div className='form-text'>Allowed file types: png, jpg, jpeg.</div>\n            </div>\n            <div className='fv-row w-100 mb-5'>\n              <label className='d-block form-label'>Spin Wheel Circle Border GIF Image</label>\n              <div className='image-input image-input-outline' data-kt-image-input='true'>\n                <img\n                  src={\n                    values.circle_border_gif != ''\n                      ? values.circle_border_gif\n                      : toAbsoluteUrl('/media/svg/avatars/blank.svg')\n                  }\n                  alt='avatar'\n                  className='image-input-wrapper w-225px h-225px'\n                />\n                <label\n                  className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                  data-kt-image-input-action='change'\n                  data-bs-toggle='tooltip'\n                  title='Change avatar'\n                >\n                  <i className='bi bi-pencil-fill fs-7'></i>\n                  <input\n                    type='file'\n                    name='circle_border_gif'\n                    accept='.png, .jpg, .jpeg, .gif'\n                    onChange={uploadImage}\n                  />\n                  <input type='hidden' name='avatar_remove' />\n                </label>\n                {values.circle_border_gif != '' && (\n                  <button\n                    className='btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow'\n                    data-kt-image-input-action='remove'\n                    data-bs-toggle='tooltip'\n                    title='Remove avatar'\n                    type='button'\n                    onClick={() => setValue({...values, circle_border_gif: ''})}\n                  >\n                    <i className='bi bi-x fs-2'></i>\n                  </button>\n                )}\n              </div>\n              <div className='form-text'>Allowed file types: png, jpg, jpeg, gif.</div>\n            </div>\n            <Button  />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Spinwin}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport axios, {AxiosResponse} from 'axios'\nimport clsx from 'clsx'\nimport React, {FC, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {KTSVG, toAbsoluteUrl} from '../../../../_metronic/helpers'\nimport {Dropdown1, ChatInner} from '../../../../_metronic/partials'\nimport {API_URL} from './ApiUrl'\nimport {Button} from './Button'\nimport {SettingsName} from './SettingsName'\n\nconst Email: FC = () => {\n  const [values, setValue] = useState<any>({\n    mail_engine: '',\n    protocol: '',\n    email: '',\n    charset: '',\n    bcc_all: '',\n    signature: '',\n    header: '',\n    footer: '',\n    test_email: '',\n  })\n  const [apikey, setApiKey] = useState<string>('')\n  const [errors, setErrors] = useState<any>({\n    mail_engine: '',\n    protocol: '',\n    email: '',\n    charset: '',\n    bcc_all: '',\n    signature: '',\n    apikey: '',\n  })\n\n  const [tab, setTab] = useState('email_smtp')\n\n  useEffect(() => {\n    getInfo()\n  }, [tab])\n\n  const getInfo = async () => {\n    await axios\n      .get(`${API_URL}/${tab}`)\n      .then((data: AxiosResponse<any>) => {\n        if (data.data != null) {\n          const newvalues = JSON.parse(data.data.value)\n          tab == 'email_smtp' ? setValue(newvalues) : setApiKey(newvalues.apikey)\n        }\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  const onChange = (e: any) => {\n    const {name, value} = e.target\n    tab == 'email_smtp' ? setValue({...values, [name]: value}) : setApiKey(value)\n    setErrors({...errors, [name]: ''})\n  }\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault()\n    if (values.mail_engine == '') {\n      setErrors({...errors, mail_engine: 'Mail engine is required'})\n      return\n    }\n    if (values.protocol == '') {\n      setErrors({...errors, protocol: 'Email protocol is required'})\n      return\n    }\n    if (values.email == '') {\n      setErrors({...errors, email: 'Email is required'})\n      return\n    }\n\n    if (values.charset == '') {\n      setErrors({...errors, charset: 'Email charset is required'})\n      return\n    }\n\n    if (values.bcc_all == '') {\n      setErrors({...errors, bcc_all: 'Bcc all emails to is required'})\n      return\n    }\n    if (values.signature == '') {\n      setErrors({...errors, signature: 'Email signature is required'})\n      return\n    }\n\n    if (apikey == '' && tab == 'email_sendinblue') {\n      setErrors({...errors, apikey: 'Api-key is required'})\n      return\n    }\n\n    const payload = {\n      name: tab,\n      value: JSON.stringify(tab == 'email_smtp' ? values : {apikey}),\n      auto_load: 0,\n    }\n    await axios\n      .post(API_URL, payload)\n      .then((data: AxiosResponse<any>) => {\n        Swal.fire({\n          title: 'Success!',\n          text: `Settings Updated!`,\n          icon: 'success',\n          confirmButtonText: 'Okay',\n        })\n      })\n      .catch((err) => {\n        console.log(err, 'err')\n      })\n  }\n\n  return (\n    <div className='d-flex flex-column flex-lg-row'>\n      <SettingsName active={'email'} />\n      <div className='flex-lg-row-fluid ms-lg-7 ms-xl-10'>\n        <div className='card p-10' id='kt_chat_messenger'>\n          <ul className='nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent fs-5 fw-bolder'>\n            <li className='nav-item mt-2'>\n              <a\n                style={{cursor: 'pointer'}}\n                className={`nav-link text-active-primary ms-0 me-10 py-5 ${\n                  tab == 'email_smtp' ? 'active' : ''\n                }`}\n                onClick={() => setTab('email_smtp')}\n              >\n                SMTP\n              </a>\n            </li>\n            <li className='nav-item mt-2'>\n              <a\n                style={{cursor: 'pointer'}}\n                className={`nav-link text-active-primary ms-0 me-10 py-5 ${\n                  tab == 'email_sendinblue' ? 'active' : ''\n                }`}\n                onClick={() => setTab('email_sendinblue')}\n              >\n                Send In Blue\n              </a>\n            </li>\n          </ul>\n          <div className='separator separator-dashed my-5 '></div>\n          <form noValidate className='form' onSubmit={onSubmit}>\n            <div className='d-flex flex-wrap gap-5'>\n              {tab == 'email_smtp' ? (\n                <>\n                  {' '}\n                  <h4>SMTP Settings</h4>\n                  <span className='text-muted'>Setup main email</span>{' '}\n                </>\n              ) : (\n                <>\n                  <h4>Send In Blue Settings</h4>\n                  <span className='text-muted'>Setup Send in blue email</span>\n                </>\n              )}\n            </div>\n\n            <div className='separator separator-dashed my-5'></div>\n            {tab == 'email_smtp' ? (\n              <>\n                <div className='d-flex flex-wrap gap-5 mb-10'>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>Mail Engine</label>\n                    <div className='form-check form-check-custom form-check-solid gap-3'>\n                      <input\n                        name='mail_engine'\n                        type={'radio'}\n                        value='0'\n                        onChange={onChange}\n                        checked={values.mail_engine == '0'}\n                        id='PHPMailer'\n                        className={clsx('form-check-input mb-3 mb-lg-0')}\n                        autoComplete='off'\n                      />\n                      <label className='form-check-label' htmlFor='PHPMailer'>\n                        <div className='fw-bolder text-gray-800'>PHPMailer</div>\n                      </label>\n                      <input\n                        name='mail_engine'\n                        type={'radio'}\n                        value='1'\n                        onChange={onChange}\n                        checked={values.mail_engine == '1'}\n                        id='CodeIgniter'\n                        className={clsx('form-check-input mb-3 mb-lg-0')}\n                        autoComplete='off'\n                      />\n                      <label className='form-check-label' htmlFor='CodeIgniter'>\n                        <div className='fw-bolder text-gray-800'>CodeIgniter</div>\n                      </label>\n                    </div>\n                    <div className='fv-plugins-message-container pt-2'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.mail_engine}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>Email Protocol</label>\n                    <div className='form-check form-check-custom form-check-solid gap-3'>\n                      <input\n                        name='protocol'\n                        type={'radio'}\n                        value='0'\n                        onChange={onChange}\n                        checked={values.protocol == '0'}\n                        id='SMTP'\n                        className={clsx('form-check-input mb-3 mb-lg-0')}\n                        autoComplete='off'\n                      />\n                      <label className='form-check-label' htmlFor='SMTP'>\n                        <div className='fw-bolder text-gray-800'>SMTP</div>\n                      </label>\n                      <input\n                        name='protocol'\n                        type={'radio'}\n                        value='1'\n                        onChange={onChange}\n                        checked={values.protocol == '1'}\n                        id='Sendmail'\n                        className={clsx('form-check-input mb-3 mb-lg-0')}\n                        autoComplete='off'\n                      />\n                      <label className='form-check-label' htmlFor='Sendmail'>\n                        <div className='fw-bolder text-gray-800'>Sendmail</div>\n                      </label>\n                      <input\n                        name='protocol'\n                        type={'radio'}\n                        value='2'\n                        onChange={onChange}\n                        checked={values.protocol == '2'}\n                        id='Mail'\n                        className={clsx('form-check-input mb-3 mb-lg-0')}\n                        autoComplete='off'\n                      />\n                      <label className='form-check-label' htmlFor='Mail'>\n                        <div className='fw-bolder text-gray-800'>Mail</div>\n                      </label>\n                    </div>\n                    <div className='fv-plugins-message-container pt-2'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.protocol}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='d-flex flex-wrap gap-5 mb-10'>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>Email</label>\n                    <input\n                      placeholder='Enter a email'\n                      name='email'\n                      type={'email'}\n                      onChange={onChange}\n                      value={values.email}\n                      className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.email})}\n                      autoComplete='off'\n                    />\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.email}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>Email Charset</label>\n                    <input\n                      placeholder='Enter a charset'\n                      name='charset'\n                      onChange={onChange}\n                      value={values.charset}\n                      className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.charset})}\n                      autoComplete='off'\n                    />\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.charset}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='d-flex flex-wrap gap-5 mb-10'>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>BCC All Emails To</label>\n                    <input\n                      placeholder='Enter BCC emails'\n                      name='bcc_all'\n                      onChange={onChange}\n                      value={values.bcc_all}\n                      className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.bcc_all})}\n                      autoComplete='off'\n                    />\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.bcc_all}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='required fw-bold fs-6 mb-2'>Email Signature</label>\n                    <input\n                      placeholder='Enter a email signature'\n                      name='signature'\n                      onChange={onChange}\n                      value={values.signature}\n                      className={clsx('form-control mb-3 mb-lg-0', {\n                        'is-invalid': errors.signature,\n                      })}\n                      autoComplete='off'\n                    />\n                    <div className='fv-plugins-message-container'>\n                      <div className='fv-help-block'>\n                        <span role='alert' className='text-danger'>\n                          {errors.signature}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='d-flex flex-wrap gap-5 mb-10'>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='fw-bold fs-6 mb-2'>Predefined Header</label>\n                    <textarea\n                      placeholder='Enter predefined header'\n                      rows={6}\n                      name='header'\n                      onChange={onChange}\n                      value={values.header}\n                      className={clsx('form-control mb-3 mb-lg-0')}\n                      autoComplete='off'\n                    />\n                  </div>\n                  <div className='fv-row w-100 flex-md-root'>\n                    <label className='fw-bold fs-6 mb-2'>Predefined Footer</label>\n                    <textarea\n                      placeholder='Enter predefined footer'\n                      rows={6}\n                      name='footer'\n                      onChange={onChange}\n                      value={values.footer}\n                      className={clsx('form-control mb-3 mb-lg-0')}\n                      autoComplete='off'\n                    />\n                  </div>\n                </div>\n                <div className='fv-row w-100 flex-md-root'>\n                  <label className='fw-bold fs-6 mb-2'>Send Test Email</label>\n                  <div className='text-muted mb-3'>\n                    Send test email to make sure that your SMTP settings is set correctly.\n                  </div>\n                  <div style={{flexDirection: 'row', display: 'flex'}} className='mb-2 gap-5'>\n                    <input\n                      placeholder='Enter test email'\n                      name='test_email'\n                      onChange={onChange}\n                      value={values.test_email}\n                      className={clsx('form-control mb-3 mb-lg-0')}\n                      autoComplete='off'\n                    />\n                    <button type='button' className='btn btn-lg btn-light-primary w-20 fs-15'>\n                      Test\n                    </button>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className='fv-row w-100 mb-10'>\n                <label className='required fw-bold fs-6 mb-2'>Api key</label>\n                <input\n                  placeholder='Enter a email api-key'\n                  name='apikey'\n                  onChange={onChange}\n                  value={apikey}\n                  className={clsx('form-control mb-3 mb-lg-0', {'is-invalid': errors.apikey})}\n                  autoComplete='off'\n                />\n                <div className='fv-plugins-message-container'>\n                  <div className='fv-help-block'>\n                    <span role='alert' className='text-danger'>\n                      {errors.apikey}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <Button />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {Email}\n","import {Navigate, Route, Routes, Outlet} from 'react-router-dom'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {General} from './components/General'\r\nimport {CompanyInfo} from './components/CompanyInfo'\r\nimport {Localization} from './components/Localization'\r\nimport {Finance} from './components/Finance'\r\nimport {PaymentGateway} from './components/PaymentGateway'\r\nimport {Customers} from './components/Customers'\r\nimport {Pdf} from './components/Pdf'\r\nimport {Sms} from './components/Sms'\r\nimport {Cronjob} from './components/CronJob'\r\nimport {Misc} from './components/Misc'\r\nimport {CashBonus} from './components/CashBonus'\r\nimport {WalletMinBalance} from './components/WalletMinBalance'\r\nimport {AppCurVersion} from './components/AppCurVersion'\r\nimport {Spinwin} from './components/Spinwin'\r\nimport {Email} from './components/Email'\r\n\r\nconst chatBreadCrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Settings',\r\n    path: '/settings/general',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst SettingPage = () => {\r\n  return (\r\n    <Routes>\r\n      <Route element={<Outlet />}>\r\n        <Route\r\n          path='general'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>General Setting</PageTitle>\r\n              <General />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='company-information'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Company Information Setting</PageTitle>\r\n              <CompanyInfo />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='localization'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Localization Setting</PageTitle>\r\n              <Localization />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='finance'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Finance Setting</PageTitle>\r\n              <Finance />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='payment-gateways'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Payment Gateway Setting</PageTitle>\r\n              <PaymentGateway />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='customers'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Customer Setting</PageTitle>\r\n              <Customers />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='PDF'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>PDF Setting</PageTitle>\r\n              <Pdf />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='SMS'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>SMS Setting</PageTitle>\r\n              <Sms />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='cron-jobs'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Cron job Setting</PageTitle>\r\n              <Cronjob />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='misc'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Misc Setting</PageTitle>\r\n              <Misc />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='cash-bonus'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Cash Bonus Setting</PageTitle>\r\n              <CashBonus />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='wallet-minimun-balance'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Wallet minimun balance Setting</PageTitle>\r\n              <WalletMinBalance />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='app-current-version'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>App current version Setting</PageTitle>\r\n              <AppCurVersion />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='spin-the-wheel'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Spinwin Setting</PageTitle>\r\n              <Spinwin />\r\n            </>\r\n          }\r\n        />\r\n        <Route\r\n          path='email'\r\n          element={\r\n            <>\r\n              <PageTitle breadcrumbs={chatBreadCrumbs}>Email Setting</PageTitle>\r\n              <Email />\r\n            </>\r\n          }\r\n        />\r\n        <Route index element={<Navigate to='/settings/general' />} />\r\n      </Route>\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default SettingPage\r\n","const API_URL = 'https://quiz.datacubeindia.com/common/option'\nexport {API_URL}\n"],"names":["SettingsName","active","Navigate","useNavigate","className","id","name","icon","map","item","i","onClick","path","style","textTransform","replace","Button","type","General","Yup","shape","dark_logo","required","light_logo","favicon","domain","file_type","useState","values","setValue","errors","setErrors","useEffect","axios","API_URL","then","data","newvalues","JSON","parse","value","catch","err","console","log","uploadImage","e","currentTarget","file","files","fd","FormData","append","onSubmit","preventDefault","payload","stringify","auto_load","Swal","title","text","confirmButtonText","onChange","target","src","toAbsoluteUrl","alt","accept","placeholder","clsx","autoComplete","role","CompanyInfo","address","city","state","country_code","zip_code","phone","gst","getInfo","noValidate","Localization","date_format","time_format","timezone","language","Finance","decimal","thousand","currency_placement","tax","enable","number_words","checked","htmlFor","PaymentGateway","label","key","salt","description","currency","selected","rows","Customers","theme","country","register","Pdf","font","size","heading_color","text_color","logo_url","logo_width","show_invoice_status","show_invoice_link","show_invoice_payment","show_page_number","signature","display","flexDirection","width","Sms","sender_id","Cronjob","hour","send_reminder","resend_reminder","recurring_invoice","create_new_invoice","Misc","scroll_responsive","save_last","export_button","pagination_limit","CashBonus","cash_bonus","referral","max_usable_cash_bonus","WalletMinBalance","min_amount_wallet","min_amount_withdrawal","AppCurVersion","current_version","Spinwin","background","nob","circle","circle_border","circle_border_gif","Email","mail_engine","protocol","email","charset","bcc_all","header","footer","test_email","apikey","setApiKey","tab","setTab","cursor","chatBreadCrumbs","isSeparator","isActive","element","breadcrumbs","index","to"],"sourceRoot":""}